<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<title>Inteligencia Artificial</title>
<meta name="author" content="(Claudio Vaucheret)"/>
<style type="text/css">
.underline { text-decoration: underline; }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.css"/>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js/dist/theme/sky.css" id="theme"/>


<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
    if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'https://cdn.jsdelivr.net/npm/reveal.js/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    }
</script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
</head>
<body>
<div class="reveal">
<div class="slides">
<section id="sec-title-slide"><h1 class="title">Inteligencia Artificial</h1><h2 class="author">Claudio Vaucheret</h2><h2 class="date">Problemas de Satisfacción de Restriccciones</h2><p class="date">Created: 2023-09-26 mar 19:51</p>
</section>
<section id="table-of-contents"><div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#/slide-org16eb80f">Definición de un CSP</a></li>
<li><a href="#/slide-orgb2d9b6e">Backtracking para CSPs</a></li>
<li><a href="#/slide-org1ab53b4">Mejorando la eficiencia del Backtracking</a></li>
<li><a href="#/slide-org5604347">Mínimos valores restantes</a></li>
<li><a href="#/slide-org84ded18">Variable que más restringe las demás</a></li>
<li><a href="#/slide-org4c80877">Valor menos restringido</a></li>
<li><a href="#/slide-orgd3e09e0">Chequeo anticipado</a></li>
<li><a href="#/slide-org316dcef">Propagación de restricciones</a></li>
<li><a href="#/slide-org631d9ff">Consistencia de arcos</a></li>
<li><a href="#/slide-org9ce3abe">Bibliografía</a></li>
</ul>
</div>
</div>
</section>

<section>
<section id="slide-org16eb80f">
<h2 id="org16eb80f">Definición de un CSP</h2>
<div class="outline-text-2" id="text-org16eb80f">
</div>
</section>
</section>
<section>
<section id="slide-org439bad3">
<h3 id="org439bad3">Problemas de Satisfacción de Restricciones</h3>
<p>
<b><font color="green">Problema de Búsqueda Estándar:</font></b>
</p>
<div style="font-size: 70%;">
<p>
El <font color=red>estado</font> es atómico o indivisible; una <b>"caja negra"</b> sin  estructura interna.
El estado permite determinar si es meta, sucesor, etc.
</p>
</div>

<p>
<b><font color="green">Constraint Satisfaction Problems (CSP):</font></b>
</p>
<div style="font-size: 70%;">
<p>
Usamos una <font color=red>representación factorizada</font> de cada estado.
  El <font color=red>estado</font> es definido por:
</p>

<ul>
<li><b>variables</b>  \(X_i\) con valores del dominio \(D_i\).</li>
<li>El <b>test de meta</b> es cuando cada variable tiene un valor que  satisface todas las restricciones sobre esa misma variable.</li>

</ul>


</div>


</section>
</section>
<section>
<section id="slide-org87893be">
<h3 id="org87893be">Problemas de Satisfacción de Restricciones</h3>
<ul>
<li class="fragment roll-in">Es un ejemplo simple de un <font color="orange">Lenguaje de Representación Formal</font>. Muchos problemas se representan naturalmente como un CSP.</li>
<li class="fragment roll-in">Permite algoritmos de <font color="orange">propósito general</font> con
más poder que los algoritmos estándares. Permite resolver problemas intratables con algoritmos de búsqueda estándar.</li>

</ul>

</section>
</section>
<section>
<section id="slide-org6f9e147">
<h3 id="org6f9e147">Ejemplo: Coloreo de Mapas</h3>

<div id="orgac90b6d" class="figure">
<p><img src="imagenes/australia.jpg" alt="australia.jpg" height="300" />
</p>
</div>

<div style="font-size: 60%;">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left"><font color="green">Variables</font></td>
<td class="org-left"><font color="green">Dominios</font></td>
</tr>

<tr>
<td class="org-left">\(WA, NT, Q, NSW, V, SA, T\)</td>
<td class="org-left">\(D_i = \{red,green,blue\}\)</td>
</tr>
</tbody>
</table>

<p>
<font color="green">Restricciones</font>
 Regiones adyacentes deben tener colores diferentes. e.g., 
 \(WA\neq NT\) o \((WA,NT) \in \{(red,green),(red,blue),(green,red),(green,blue),\ldots\}\)
</p>

</div>

</section>
</section>
<section>
<section id="slide-org9026c79">
<h3 id="org9026c79">Ejemplo: Coloreo de Mapas</h3>

<div id="org8d79d21" class="figure">
<p><img src="imagenes/australia-solution.jpg" alt="australia-solution.jpg" height="250" />
</p>
</div>

<p>
Las <font color=red>Soluciones</font> son asignaciones que satisfacen <font color=red>todas</font> las restricciones.
</p>

<p>
<font color="green">Ejemplo</font>
</p>
<div style="font-size: 60%;">
<p>
\(\{WA = red,NT = green,Q = red,NSW = green,V = red,SA = blue ,T = green\}\)
</p>
</div>

</section>
</section>
<section>
<section id="slide-orgb81fce2">
<h3 id="orgb81fce2">Definición de un CSP</h3>
<p>
<font color="green">Un CSP consiste de:</font>
</p>
<div style="font-size: 80%;">
<ul>
<li class="fragment roll-in">un conjunto de <font color=red>variables</font> \(X=\{X_1,\ldots,X_n\}\).</li>
<li class="fragment roll-in">un conjunto de <font color=red>dominios</font>, uno para cada variable, \(D=\{D_1,\ldots,D_n\}\). Cada dominio \(D_i\) consiste de un conjunto de valores permitidos \(\{v_1,\ldots,v_k\}\) para la variable \(X_i\).</li>
<li class="fragment roll-in">un conjunto \(C\) de <font color=red>restricciones</font> que especifican las combinaciones permitidas de los valores.</li>

</ul>
</div>

</section>
<section id="slide-orgb81fce2-split">

<p>
<font color="green">Solución a un CSP</font>
</p>
<div style="font-size: 80%;">
<p>
<b>Es una <font color=red>asignación consistente y completa</font></b>
</p>

<p>
Una asignación es consistente si no viola ninguna restricción y es completa si cada variable está asignada.
</p>
</div>

</section>
</section>
<section>
<section id="slide-org889a1a3">
<h3 id="org889a1a3">Grafos de restricciones</h3>
<div style="font-size: 80%;">
<ul>
<li><font color="green">CSP binarios</font> Cada restricción relaciona a lo sumo dos variables.</li>
<li><p>
<font color="green">Grafos de restricciones:</font> Los nodos son variables y los arcos muestran restricciones entre las variables.
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left"><img src="imagenes/australia-csp.jpg" alt="australia-csp.jpg" />  Grafos de restricciones</td>
<td class="org-left">Algoritmos de CSP de propósito general usan la estructura de grafos para acelerar la búsqueda. E.g. Tasmania es un subproblema independiente.</td>
</tr>
</tbody>
</table></li>

</ul>

</div>

</section>
</section>
<section>
<section id="slide-org5993674">
<h3 id="org5993674">Variedad de CSPs</h3>
<p>
<font color="green">Variables Discretas</font>
</p>
<div style="font-size: 80%;">
<ul>
<li class="fragment roll-in">Dominios Finitos: tamaño  \(d\) \(\implies\) \(O(d^n)\) asignaciones completas. Ej. CSPs
booleanos: Satisfacibilidad booleana (NP-completo).</li>
<li class="fragment roll-in">Dominios infinitos. Ej. scheduling, las variables son días start/end para cada tarea y el dominio naturales. Se  necesita un <font color="blue">lenguaje de restricciones</font>.
Ej. \(StartJob_1 + 5 \leq StartJob_3\)</li>
<li class="fragment roll-in">Problemas con restricciones <font color=red>lineales</font> son solubles; <font color=red>no-lineales</font> son indecidibles.</li>

</ul>
</div>


</section>
</section>
<section>
<section id="slide-org8811ed9">
<h3 id="org8811ed9">Variedad de Restricciones</h3>
<div style="font-size: 80%;">
<ul>
<li class="fragment roll-in"><b><font color="green">Unaria</font></b> Restricciones que involucran una única variable, e.g.  \(SA\neq green\)</li>
<li class="fragment roll-in"><b><font color="green">Binaria</font></b> Restricciones que involucran pares de variables, e.g. \(SA\neq WA\)</li>
<li class="fragment roll-in"><b><font color="green">High-order: Globales</font></b>     Restricciones que involucran 3 o más variables, e.g. cryptoaritméticas. Se utilizan <font color=red>hipergrafos de restricciones</font>.</li>
<li class="fragment roll-in"><p>
<b><font color="green">Preferencias (restricciones suaves)</font></b>    E.g.,  <i>red</i> es mejor que  <i>green</i>. A menudo representado por un costo para cada asignación de variables \(\rightarrow\) <font color=red>Problema de Optimización de Restricciones</font>.   
</p>
</div></li>

</ul>


</section>
</section>
<section>
<section id="slide-orgaa24c54">
<h3 id="orgaa24c54">Ejemplo: Criptoaritmética</h3>

<div id="org50ab126" class="figure">
<p><img src="imagenes/cryptarithmetic.jpg" alt="cryptarithmetic.jpg" height="250" />
</p>
</div>
<div style="font-size: 80%;">
<ul>
<li><b><font color="green">Variables</font></b> \(F\ T\ U\ W\ R\ O\ X_1\ X_2\ X_3\)</li>
<li><b><font color="green">Dominios</font></b> \(\{0,1,2,3,4,5,6,7,8,9\}\)</li>
<li><p>
<b><font color="green">Restricciones</font></b>  \(alldiff(F,T,U,W,R,O)\); \(O + O = R + 10\cdot X_1\)
</p>
</div></li>

</ul>

</section>
</section>
<section>
<section id="slide-orgb2d9b6e">
<h2 id="orgb2d9b6e">Backtracking para CSPs</h2>
<div class="outline-text-2" id="text-orgb2d9b6e">
</div>
</section>
</section>
<section>
<section id="slide-org25b9951">
<h3 id="org25b9951">Formulación de búsqueda estándar (incremental)</h3>
<ul>
<li class="fragment roll-in"><b><font color="green">Estado Inicial:</font></b> La asignación vacía, \(\emptyset\).</li>
<li class="fragment roll-in"><b><font color="green">Función sucesor: Asignaciones Parciales</font></b>     Asigna un valor a una variable no asignada que no entra en conflicto con la actual asignación \(\implies\) <font color=red>falla</font> si no hay  asignación legal.</li>
<li class="fragment roll-in"><b><font color="green">Test de meta:</font></b>      Si la asignación actual está completa.</li>

</ul>


</section>
</section>
<section>
<section id="slide-org3a7a5e7">
<h3 id="org3a7a5e7">Formulación de búsqueda estándar (incremental)</h3>
<div style="font-size: 80%;">
<ul>
<li class="fragment roll-in">Es la misma para todo CSP.</li>
<li class="fragment roll-in">Toda solución aparece en la profundidad  \(n\), siendo  \(n\) la cantidad de variables \(\implies\) se puede usar  búsqueda Depth-First.</li>
<li class="fragment roll-in"><p>
El camino es irrelevante, por lo tanto, podríamos utilizar la formulación de estado completo, en vez de asignaciones parciales.
</p>
</div></li>

</ul>
</section>
<section id="slide-org3a7a5e7-split">
<div style="font-size: 80%;">
<ul>
<li><p>
Un CSP con \(n\) variables de tamaño de dominio \(d\), tenemos un factor de ramificación de \(nd\); en el siguiente nivel \(n(d-1)*n*d\) y así sucesivamente.  En general,  tenemos \(b = (n-\ell)d\) nodos nuevos a profundidad \(\ell\), por cada nodo del nivel anterior.
</p>

<p>
     Por lo tanto, tenemos
       \(nd * (n-1)d * \ldots *d=\)  \(n!d^n\) hojas. :( 
Y solamente son \(d^n\) asignaciones completas posibles.
</p></li>

</ul>
<p>
HMMMMMMMMMM!!!!!!!!!!!!!!!!
</p>
</div>

</section>
</section>
<section>
<section id="slide-orgaa06ff8">
<h3 id="orgaa06ff8">Bactracking Search</h3>
<div style="font-size: 80%;">
<ul>
<li class="fragment roll-in">La asignación de variables es <font color="green">conmutativa</font>. 
Un problema es <font color=red>conmutativo</font> si el orden  de la aplicación de un conjunto de acciones no tiene efecto diferente sobre la asignación parcial.
Ejemplo, i.e.,
[ \(WA = red\) -  \(NT = green\)] es lo mismo que [ \(NT = green\) - \(WA = red\)]</li>
<li class="fragment roll-in">Solo se necesita considerar asignaciones a una <font color=red>única variable</font> en cada nodo \(\implies\) Factor de Ramificación \(b = d\) y así tenemos \(d^n\) hojas.
Puede resolver el problema de  <i>n</i>-reinas para  \(n \approx 25\).</li>
<li class="fragment roll-in">Depth-first search para CSPs con asignación de una única variable se llama <font color=red>Backtracking Search</font></li>

</ul>
</div>



</section>
</section>
<section>
<section id="slide-org187c786">
<h3 id="org187c786">Backtracking search</h3>

<div id="org5d92993" class="figure">
<p><img src="imagenes/backtrsearck.png" alt="backtrsearck.png" height="500" />
</p>
</div>



</section>
</section>
<section>
<section id="slide-org4726391">
<h3 id="org4726391">Ejemplo</h3>

<div id="orgdc75d78" class="figure">
<p><img src="imagenes/backtrack-progress1c.jpg" alt="backtrack-progress1c.jpg" height="1000" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-orga56bc1e">
<h3 id="orga56bc1e">Ejemplo</h3>

<div id="orgf8ff946" class="figure">
<p><img src="imagenes/backtrack-progress2c.jpg" alt="backtrack-progress2c.jpg" height="1000" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-orgc81ee28">
<h3 id="orgc81ee28">Ejemplo</h3>

<div id="org973f7aa" class="figure">
<p><img src="imagenes/backtrack-progress3c.jpg" alt="backtrack-progress3c.jpg" height="1000" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org2610410">
<h3 id="org2610410">Ejemplo</h3>

<div id="org8e05e64" class="figure">
<p><img src="imagenes/backtrack-progress4c.jpg" alt="backtrack-progress4c.jpg" height="1000" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org1ab53b4">
<h2 id="org1ab53b4">Mejorando la eficiencia del Backtracking</h2>
<div class="outline-text-2" id="text-org1ab53b4">
</div>
</section>
</section>
<section>
<section id="slide-orgee1add1">
<h3 id="orgee1add1">Métodos que pueden mejorar la velocidad</h3>
<div style="font-size: 80%;">

<p>
Métodos de <font color="purple">propósito general</font> pueden mejorar mucho el backtracking:
</p>
<ul>
<li class="fragment roll-in">¿Cuál variable debería asignarse primero?</li>
<li class="fragment roll-in">¿En qué orden deberían ser tratados sus valores?</li>
<li class="fragment roll-in">¿Podemos detectar fallas inevitables con anticipación?</li>
<li class="fragment roll-in">¿Podemos aprovecharnos de la estructura del problema?</li>

</ul>
</div>

</section>
</section>
<section>
<section id="slide-org5604347">
<h2 id="org5604347">Mínimos valores restantes</h2>
<div class="outline-text-2" id="text-org5604347">
</div>
</section>
</section>
<section>
<section id="slide-org2304a13">
<h3 id="org2304a13">Mínimos valores restantes</h3>
<p>
<b><font color="green">Heurística</font></b>
</p>
<div style="font-size: 80%;">
<p>
Elegir la variable con menos valores <font color=red>legales</font>.
</p>
</div>


<div id="orgcccd213" class="figure">
<p><img src="imagenes/australia-most-constrained-variable.jpg" alt="australia-most-constrained-variable.jpg" height="125" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org84ded18">
<h2 id="org84ded18">Variable que más restringe las demás</h2>
<div class="outline-text-2" id="text-org84ded18">
</div>
</section>
</section>
<section>
<section id="slide-org51b80b5">
<h3 id="org51b80b5">Variable que más restringe las demás</h3>
<p>
<b><font color="green">Heurística de Grados</font></b>
</p>
<div style="font-size: 80%;">
<p>
Elegir primero la variable con más restricciones sobre las variables
restantes.
</p>



<div id="org2c6b856" class="figure">
<p><img src="imagenes/australia-most-constraining-variable.jpg" alt="australia-most-constraining-variable.jpg" height="125" />
</p>
</div>


<p>
SA es de grado 5.
</p>

<p>
T es de grado 0.
</p>

<p>
Las demás son de grado 3 o 2.
</p>
</div>


</section>
</section>
<section>
<section id="slide-org4c80877">
<h2 id="org4c80877">Valor menos restringido</h2>
<div class="outline-text-2" id="text-org4c80877">
</div>
</section>
</section>
<section>
<section id="slide-org1892968">
<h3 id="org1892968">Valor menos restringido</h3>
<p>
<b><font color="green">Heurística</font></b>
</p>
<div style="font-size: 80%;">
<p>
Dada una variable, elegir el valor menos restrictivo: aquel que deja
menos valores en las variables restantes. 
</p>



<div id="orgd9f848c" class="figure">
<p><img src="imagenes/australia-least-constraining-value.jpg" alt="australia-least-constraining-value.jpg" height="150" />
</p>
</div>

<p>
Combinando estas tres heurísticas es posible realizar el problema de
1000-reinas.
</p>

</div>

</section>
</section>
<section>
<section id="slide-orgd3e09e0">
<h2 id="orgd3e09e0">Chequeo anticipado</h2>
<div class="outline-text-2" id="text-orgd3e09e0">
</div>
</section>
</section>
<section>
<section id="slide-org50b0292">
<h3 id="org50b0292">Chequeo anticipado</h3>
<p>
<b><font color="green">Idea:</font></b>
</p>
<div style="font-size: 70%;">
<ul>
<li>Mantener la información de los valores legales restantes de las
variables sin asignar.</li>
<li>Terminar la búsqueda cuando alguna variable no tenga valores
legales.</li>

</ul>
</div>


<div id="org9f7cc2e" class="figure">
<p><img src="imagenes/forward-checking-progress1c.jpg" alt="forward-checking-progress1c.jpg" height="170" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org4e7585c">
<h3 id="org4e7585c">Chequeo anticipado</h3>
<p>
<b><font color="green">Idea:</font></b>
</p>
<div style="font-size: 70%;">
<ul>
<li>Mantener la información de los valores legales restantes de las
variables sin asignar.</li>
<li>Terminar la búsqueda cuando alguna variable no tenga valores
legales.</li>

</ul>
</div>


<div id="org34d6fbc" class="figure">
<p><img src="imagenes/forward-checking-progress2c.jpg" alt="forward-checking-progress2c.jpg" height="200" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org47f1f33">
<h3 id="org47f1f33">Chequeo anticipado</h3>
<p>
<b><font color="green">Idea:</font></b>
</p>
<div style="font-size: 70%;">
<ul>
<li>Mantener la información de los valores legales restantes de las
variables sin asignar.</li>
<li>Terminar la búsqueda cuando alguna variable no tenga valores
legales.</li>

</ul>
</div>


<div id="org9bbd681" class="figure">
<p><img src="imagenes/forward-checking-progress3c.jpg" alt="forward-checking-progress3c.jpg" height="230" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-orga29c6b9">
<h3 id="orga29c6b9">Chequeo anticipado</h3>
<p>
<b><font color="green">Idea:</font></b>
</p>
<div style="font-size: 70%;">
<ul>
<li>Mantener la información de los valores legales restantes de las
variables sin asignar.</li>
<li>Terminar la búsqueda cuando alguna variable no tenga valores
legales.</li>

</ul>
</div>


<div id="orgae16a6d" class="figure">
<p><img src="imagenes/forward-checking-progress4c.jpg" alt="forward-checking-progress4c.jpg" height="260" />
</p>
</div>


</section>
</section>
<section>
<section id="slide-org316dcef">
<h2 id="org316dcef">Propagación de restricciones</h2>
<div class="outline-text-2" id="text-org316dcef">
</div>
</section>
</section>
<section>
<section id="slide-org03a87bf">
<h3 id="org03a87bf">Propagación de restricciones</h3>
<div style="font-size: 70%;">
<p>
El chequeo anticipado propaga la información desde variables
instanciadas a no instanciadas, pero no provee detección anticipada
para todas las fallas.
</p>



<div id="org88b0700" class="figure">
<p><img src="imagenes/forward-checking-progress3c.jpg" alt="forward-checking-progress3c.jpg" height="230" />
</p>
</div>

<p>
\(NT\) y \(SA\) no pueden ser ambas azules!
</p>

<p>
La <font color="blue">propagación de restricciones</font> fuerza repetidamente las restricciones localmente.
</p>
</div>

</section>
</section>
<section>
<section id="slide-org631d9ff">
<h2 id="org631d9ff">Consistencia de arcos</h2>
<div class="outline-text-2" id="text-org631d9ff">
</div>
</section>
</section>
<section>
<section id="slide-org556b0de">
<h3 id="org556b0de">Consistencia de arcos</h3>
<div style="font-size: 70%;">
<p>
La  forma más simple de propagación hace a cada arco <font color="blue">consistente</font>.
</p>


<p>
Un arco  \(X\rightarrow Y\) es <font color=red>consistente</font> si y solamente si para
<font color="purple">todo</font> valor  \(x\) de \(X\) existe <font color="purple">algún</font> valor permitido  \(y\).
</p>


<div id="org1aca157" class="figure">
<p><img src="imagenes/ac-example1c.jpg" alt="ac-example1c.jpg" height="200" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-orgda4ce2f">
<h3 id="orgda4ce2f">Consistencia de arcos</h3>
<div style="font-size: 70%;">
<p>
La  forma más simple de propagación hace a cada arco <font color="blue">consistente</font>.
</p>


<p>
Un arco  \(X\rightarrow Y\) es <font color=red>consistente</font> si y solamente si para
<font color="purple">todo</font> valor  \(x\) de \(X\) existe <font color="purple">algún</font> valor permitido  \(y\).
</p>


<div id="org27de9ea" class="figure">
<p><img src="imagenes/ac-example2c.jpg" alt="ac-example2c.jpg" height="200" />
</p>
</div>


</section>
</section>
<section>
<section id="slide-org6778e96">
<h3 id="org6778e96">Consistencia de arcos</h3>
<div style="font-size: 70%;">
<p>
La  forma más simple de propagación hace a cada arco <font color="blue">consistente</font>.
</p>


<p>
Un arco  \(X\rightarrow Y\) es <font color=red>consistente</font> si y solamente si para
<font color="purple">todo</font> valor  \(x\) de \(X\) existe <font color="purple">algún</font> valor permitido  \(y\).
</p>


<div id="org3eb4e1d" class="figure">
<p><img src="imagenes/ac-example3c.jpg" alt="ac-example3c.jpg" height="200" />
</p>
</div>

<p>
Si  \(X\) pierde un valor, los vecinos de  \(X\) necesitan ser rechequeados.
</p>



</div>

</section>
</section>
<section>
<section id="slide-orgeb814a8">
<h3 id="orgeb814a8">Consistencia de arcos</h3>
<div style="font-size: 70%;">
<p>
La  forma más simple de propagación hace a cada arco <font color="blue">consistente</font>.
</p>


<p>
Un arco  \(X\rightarrow Y\) es <font color=red>consistente</font> si y solamente si para
<font color="purple">todo</font> valor  \(x\) de \(X\) existe <font color="purple">algún</font> valor permitido  \(y\).
</p>


<div id="org9114318" class="figure">
<p><img src="imagenes/ac-example4c.jpg" alt="ac-example4c.jpg" height="200" />
</p>
</div>

<p>
La consistencia de arcos detecta fallas más temprano que
   chequeo anticipado. Puede se ejecutado como un preprocesamiento o
   después de cada asignación.
</p>
</div>

</section>
</section>
<section>
<section id="slide-org4c35243">
<h3 id="org4c35243">Consistencia de nodos</h3>
<div style="font-size: 80%;">
<ul>
<li>Una variable simple es <font color=red>nodo consistente</font> si todos los valores en el dominio de la variable  satisfacen  las restricciones unarias  de la variable.</li>
<li>Supongamos que  la gente de South Australia odia el verde. Luego pondríamos una restricción más al problema:
  \[SA\neq green\]
Luego el dominio de SA  \(\{green, red, blue\}\) no sería nodo consistente ya que viola la restricción anterior.</li>

</ul>

<ul>
<li class="fragment roll-in">El domino que hace al nodo consistente es \(\{ red, blue\}\)</li>

</ul>

</div>

</section>
</section>
<section>
<section id="slide-org8d7d150">
<h3 id="org8d7d150">Algoritmo  Consistencia de Arcos AC-3</h3>

<div id="org4598943" class="figure">
<p><img src="imagenes/ac3.png" alt="ac3.png" height="550" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org4fcec8a">
<h3 id="org4fcec8a">Algoritmo  Consistencia de Arcos AC-3</h3>
<p>
<b><font color="green">EJEMPLO</font></b>
</p>
<div style="font-size: 80%;">
<p>
Suponga que un robot necesita planificar las actividades de entrega de objetos \(a,\ b,\ c,\ d,\ e\) y que cada actividad ocurre en un tiempo 1, 2, 3 o 4.
</p>

<p class="fragment (roll-in)">
¿Cuáles son las variables?
</p>

<p class="fragment (roll-in)">
¿Cuáles son los dominios?
</p>

</div>

</section>
</section>
<section>
<section id="slide-orgf995374">
<h3 id="orgf995374">Algoritmo  Consistencia de Arcos AC-3</h3>
<p>
<b><font color="green">EJEMPLO</font></b>
</p>
<div style="font-size: 70%;">
<p>
Variables: A, B, C, D, E
</p>

<p>
Dominios: \(D_A = D_B = D_C= D_D = D_E = \{1,2,3,4\}\)
</p>

<p>
Restricciones del problema:
</p>

<p>
\[(B\neq 3) \wedge (C\neq 2)\wedge (A\neq B)\wedge (B\neq C)\wedge (C < D) \wedge (A=D) \wedge\]
</p>

<p>
\[(E < A) \wedge (E < B) \wedge (E < C) \wedge (E < D) \wedge (B \neq D)\]
</p>

<p class="fragment (roll-in)">
Dibujemos el grafo de restricciones dominio consistente.
Resolvamos el problema.
</p>

<p class="fragment (roll-in)">
Solución: A=4, B=2, C=3, D=4, E=1.
</p>

</div>

</section>
</section>
<section>
<section id="slide-org1e05a6b">
<h3 id="org1e05a6b">Algoritmo  Consistencia de Arcos AC-3</h3>
<p>
<b><font color="green">Estados en que termina el algoritmo:</font></b>
</p>
<div style="font-size: 70%;">
<ul>
<li class="fragment roll-in">Algún dominio es vacío: <font color=red>no</font> hay solución  al CSP.</li>
<li class="fragment roll-in">Cada dominio tiene un valor único: existe una <font color=red>única</font> solución.</li>
<li class="fragment roll-in">Cada dominio  es no vacío y al menos uno contiene múltiples  valores: en este caso cada dominio que no sea unitario debe ser  dividido y luego se debe aplicar el algoritmo nuevamente a cada uno de los grafos obtenidos. Dividir el dominio no unitario más chico es usualmente más efectivo.</li>

</ul>
</div>

</section>
</section>
<section>
<section id="slide-org9ce3abe">
<h2 id="org9ce3abe">Bibliografía</h2>
<div class="outline-text-2" id="text-org9ce3abe">
</div>
</section>
</section>
<section>
<section id="slide-orgc89a56b">
<h3 id="orgc89a56b">Referencia Bibliográfica</h3>
<div style="font-size: 80%;">

<p>
<img src="imagenes/book.png" alt="book.png" /> S. Russell  y P.Norvig
  Artificial Intelligence: A Modern Approach (Third Edition).
  Capítulo 6
  2009
</p>

<p>
<img src="imagenes/book.png" alt="book.png" />]]  D. Poole, A. Mackworth y R. Goebel
  Computational Intelligence: A Logical Approach.
  Capítulo 4
  1998
</p>
</section>
</section>
</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.js"></script>

<script>
// Full list of configuration options available here:
// https://github.com/hakimel/reveal.js#configuration
Reveal.initialize({
transition:'none',
multiplex: {
    secret: '', // null if client
    id: '', // id, obtained from socket.io server
    url: '' // Location of socket.io server
},

// Optional libraries used to extend on reveal.js
dependencies: [
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }]
});
</script>
</body>
</html>
