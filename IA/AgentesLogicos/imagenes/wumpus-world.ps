%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: wumpus-world.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jon
%%CreationDate: 11/3/09
%%BoundingBox: 0 0 181 165
%%HiResBoundingBox: 0 0 180.7339 164.2535
%%CropBox: 0 0 180.7339 164.2535
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 13486 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0CFF7D2752275227522752275227522752275227522752275227%525227275227522752275227522752275227522752275227522752272727%522752275227522752275227522752275227522752275227272752275227%52275227522752275227522752275227522752F87DFD17FF527DFD18FFA8%A8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19%FFA8FD18FF7D7DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFD06FFA8FD%0A7DA8FD06FF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FD04FFA8%27FD0DF8A8FD04FF7D7DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFFFF%FF7DFD10F87DFFFFFF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FF%FFFF27FD11F8A8FFFF527DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFF%FF7DFD12F852FFFF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD06FFA8FFA8%FD0DFFA8FFFFA8FFFF52FD12F852FFFF7D7DFD17FF527DFD04FFA8FFA87D%A8FF7DA8FFA87DFFA8A8FFFFA8FFFFFF7DA8FD18FF7DFFFFFFA8FD047DA8%7D7D7DA8A8FD05FFA8A8527DFFFF7DFFFF52FD12F827FFFF7D52FD17FF7D%52FFFFFF52A8FF527DFF7D7DA8A852FF7D7DA8FF7DA8A8FFFFA8A8FD18FF%A8FFFF7D7DA8FF7D527DFFA8FF7D7D7DA87DA87D7D7DFFFFFFA8A8FFFF52%FD05F8527D522752527DA852FD04F827FFFF7D7DFD0CFFA8A8FD09FF527D%FFFFA852A8FFA87DFFFF52A8FF7D7DFF52FFFF7D7DFFFFFF7DA8FD18FF7D%FF52A8FFFFA8FD0452A87DFFA8FFA8A8A8FD04FFA87DA87DFFFF52FD05F8%A8F87D7DA8F87D7DFD05F827FFFF7D52FD0CFF27A8FD09FF7D7DFFFFA87D%A8FFA87DFD07FFA8FFA8A87DA8FFFFFFA8A8FD18FFA8A8FFA87D7DFF527D%27A8525252FD047DA8A8FFA87D7DFFFFA8FFFF52FD05F87D7D7D52A8F87D%A8FD05F827FFFF7D7DFD0BFF27277DFD09FF527DFFA852A8FFFF527D527D%527D527D52277DFF52A8FD04FF7DA8FD18FF7DFFFFA8A8FFFFA8A8FFFFA8%7D522752527D277DFD06FF7DFFFF52FD05F8A827F8F8FFF87D7DFD05F827%FFFF7D52FD0BFFA8277DFD09FF7D7DFFFFFF527DA87D525227525252277D%5252FFFF7D7DFFFFFFA8A8FD18FFA8FD04FF7D7D7DA87DA8A8FFFFFF7DA8%A87DA8FFFFA87DA8FFA8FFFF52FD05F85227F8277DF8527DFD05F827FFFF%527DFD0DFFA8FD09FF527DFFFFA87DA8FF7DFD04A8FFA8A87DFFA8FFA87D%7DFFFFFF7DA8FD18FF7DFFFFA852A8FD04FFA87D527D7DFD05A8527D7DFF%FFFF7DFFFF52FD12F827FFFF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FFFF%7DFD0AFFFD06A8FD06FFA8FFFF52FD12F827FFFF7D7DFD17FF527DFD18FF%7DA8FD18FF7DFD19FF7DFFFF7DFD12F827FFFF7D52FD17FF7D52FD18FFA8%A8FD18FFA8A8FD17FFA8A8FFFF7DFD12F87DFFFF7D7DFD17FF527DFD18FF%7DA8FD18FF7DFD19FF7DFFFFFF27FD10F827FFFFFF7D52FD17FF7D7DFD18%FFA8A8FD18FFA8FD19FFA8FD04FF27FD0EF827FD04FF7D7DFD17FF527DFD%18FF7DA8FD18FF7DFD19FF7DFD05FF7D52F827F827F827F827F827277DA8%FD04FF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FD18FF527DFD17%FF527DFD18FF7DA8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D7DFD18FFA8%A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF52527D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D7DA8527D7DA87D7D7DA87DA87DA87D7D7DA87D%7D7DA87D7D7DA87D7D52FD047DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8%FD047D527D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D5252%FD17FF7D52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%7DFFA8FFFFA8FD057DA8A8FFA8FFA8FFA8FFFFFF7DA8A87DA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FF527DFD17FF527DFD18FF7DA8FFFFA87D%7DA85252A8A87D7D7DA8A8FFA8FFA8A8527DA8FF7DFD19FF7DFD18FF7D52%FD17FF7D7DFD18FFA8A8FF7D7DA8FFA85252A87DFFA8FF7DA87DA87DA8A8%FFFFFFA87DFD19FFA8FD18FF7D7DFD17FF527DFD09FFA8FD057DFD09FF7D%A8A8A8FFA87DA8FD045227527D7DA8FD05FFA8A8527D7DFD05FF5227F8F8%F827F827F827F827277DFD06FF7DFD18FF7D52FD17FF7D7DFD08FF7D7DFF%A8FFA8A87DFD08FFA8A8FFFF7D7DFFA87DA8A8A87D525252A8527D52A8FF%A87DFFFFA8FD04FF27FD0EF827FD05FFA8FD18FF527DFD17FF527DFD04FF%A8FFFF7DA8FD06FFA87DFFA8A8FD04FF7DA8FFFFA8FFFD05A8FFFFFF7DA8%27A852277DFFFFFFA8A87DFFFFFF27FD10F827FD04FF7DFD18FF7D52FD17%FF7D7DFFFFFF7D52A8FF7DFD08FF7DFF7D52FD04FFA8A8FFFFFF7D7D7DA8%7DA87DA8A8FFFFA8FFFFA8FFA8A87D7DA8A8FFFF7DFD12F8A8FFFFFFA8FD%18FF7D7DFD17FF527DFFFFA852FF7D7DA8FD08FF7D7D7DA852FFFFFF7DA8%FFFF52A8FD06FFA8A87DA87D7D7DA87D7DA8FFFFFF7DFFFF52FD12F852FF%FFFF7DFD18FF7D52FD17FF7D52FFFFFF7DA87D52FFFF7D52A8A827A8FFA8%52A852A8FFFFFFA8A8FFA8FFFFA8A8A87DFD04A8FF7D7DA8A87DFFFFA8A8%FFFFA8FFFF52FD12F852FFFFA8A8FD05FFA87DA87DA8A8FD0AFFA87DFF7D%7DFD17FF527DFD04FF7D7D7DFFFF7D52FFA87DA8FF7D7D52FD05FF7DA8FF%FFA8527DFF52A8FF7D52FF7D52A87D52FFA8527DA8FFFF7DFFFF52FD05F8%7D52522752277D7D27FD04F827FFFFFF7DFFFFFF7D7D7DA852A8A87D527D%7DA8A8FFA8A87D7D7DA8FF7D52FD0CFFA8FD0AFF7D7DFD05FF7DFD04FF27%A8A827FFFFFF7DA8FD05FFA8A8FFFFFF52A8FFFF7DFFFF7DA8FF7DA8FF7D%A8FF7D7DFFFFFFA8FFFF27FD04F827A8277D7D7DF87D7DFD05F852FFFFFF%A8FFFF52A8FFFF5252527DA8FFFFA87DA87DA87DA8A8FFFFFF527DFD0BFF%7D527DFD09FF527DFD05FF7D7DFFFFFFA8FFA8FFFFFFA87DFD06FF7DA8FF%A87D7DA8FF7DA8A8FD09FF7D7DA8FFFFFF7DFFFF52FD05F8A8527D277DF8%7D52FD05F852FFFFFF7DFF7DFFA87DA87D52277D7D52A8A8FFA8FFA8FFFF%FFA87D7D527DFD0CFF527DFD09FF7D7DFD05FF7DA8FFFFA8FD07FF7DFD06%FFA8A8FFA87DA8FFA85252527D7D527D7D7D277DA87D7DFD04FFA8FFFF27%FD04F827A827F852A8F87D7DFD05F852FFFFFFA8FFFF7D7DA8FF7D7D7DFF%275227527D7D52527DFFA8A8A8FF7D7DFD0BFF525252FD09FF527DFD05FF%7DA8FFFF7D2752275252FFFF7DA8FD05FF7DA8FFFFA8527DFF5252275227%5227FD0452FFFF7D52FFFFFF7DFFFF52FD05F87DF8F8F87DF87D27FD05F8%52FFFFFF7DFFA8FFFFFFA8A87DA8FFFFA87D5252527D277DFD04FFA87D52%FD0BFFA87DFD0AFF7D7DFD05FF7DFD04FF7D52A852FFFFFF7DFD06FFA8A8%FFFFFF7DFFFFA8A8FFFD07A8FFFFFF7DFD04FFA8FFFF27FD12F852FFFFFF%A8FFFFFFA852A8A8A87D7D7DA8A8FD04FFA8FFFF7D7D7DFF7D7DFD17FF52%7DFD05FF7DA8FFFFFFA8FD06FF7DA8FD05FF7DA8FD07FFA8A8FFFF7DA8FF%FFA8FD08FF7DFFFF52FD12F852FFFFFF7DFFFF7D52FD07FF7D7D52FD067D%A8A8FFFF7D52FD17FF7D52FD05FF7DFD0BFF7DFD06FFA8A8FFFFFFA8FFFF%FF7DA8FFFF7DFFFFFF7DFFFFFFA8A8FFFFFFA8FFFF52FD12F852FFFFA8A8%FFFF7DFD0DFFA8FD07FF7D7DFD17FF527DFD05FF7D7DFD0AFF7DA8FD05FF%7DA8FD04FF52FFFFFF7DFFFFA8FFFFA8A8FFFFFF7DA8FFFFFF7DFFFF7DFD%12F852FFFFFF7DFD18FF7D52FD17FF7D7DFD06FF7D7DFFA8FFA8FFFFFFA8%A8A8FD06FFA8A8FD05FF7DA87DA87DA87DA87DA87D7D52A8A8FD04FFA8FF%FFA827FD11F8FD04FFA8FD18FF7D7DFD17FF527DFD06FF7D5227A8A85252%FF7D5252A8A8FD05FF7DA8A8A8FFFF5252527D7D7D527D7D7D52527DA852%FFFFA87DFF7DFFFFFF7DFD10F87DFD04FF7DFD18FF7D52FD17FF7D7DFD05%FF52FD05A8527DA8A87DA87D7DFD05FFA8A8FF7DA87DA8FFA87DFFFFFFA8%FFA8FF7DFFFFA87DFF7DA8FFA8FD04FFA827FD0CF827A8FD05FFA8FD18FF%527DFD17FF527DFD05FFA87D7D7DA87DA8A8A8FD047DA8FD05FF7DA8FFFF%FF7DA8FF527D527D5252277DFF7DA8FFFF7DA8FFFFFF7DFD06FFA87DA87D%A87DA87DA87DA8A8FD07FF7DFD18FF7D52FD17FF7D7DFD18FFA8A8FFFFFF%7DFFFF7D5252527D27527DFFA8A8FFFF52A8FFFFFFA8FD19FFA8FD18FF7D%7DFD17FF527DFD18FFA8A8FFFF7D7D7DA87D52FD047D527DA8A8527D7DA8%FD04FF7DFD19FF7DFD18FF7D52FD17FF7D52FFFD17A87D7DA8A8A8FD077D%A8FD077DFFFD05A87D7DFD17A87D7DFD17A8FF527DFD17FF5252A8A87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8527DA8A87DFD0FA87DA8%7DA87DA852A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A8%52A8A8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A85252FD17FF%7D7DFD18FFA8A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF527DFD18FF7DA8%FD18FF7DFD19FF7DFD18FF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FF%A8FD18FF527DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFD18FF7D52FD%17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF527DFD18FF%7DA8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D52FD18FFA8A8FD18FFA8A8%FD05FFA8FFA8FD0DFFA8FFA8A8FD18FF7D7DFD17FF527DFD08FFA8FD05FF%A8FD09FF7DA8FD18FF7DFFFFFFA87D527D27FD047DA8A8FD05FFA8A8527D%FFFF7DFD18FF7D52FD17FF7D7DFFFFFFFD04A87DFFA87D7DFF7DA8A8A87D%FFA8A8A8FFFFA8A8FD18FFA8FFFF7D7DA8FF52527DFFFFFF7DA87D7D7DA8%7D7D7DFFFFFFA8A8FD18FF7D7DFD0BFFA8A8FD0AFF527DFFFFA852A8FF52%7DFFA852FFA852A87D52FFFF527DFFFFFF7DA8FD18FF7DFF52A8FFFFA87D%FD0552A8A8FFFFA8A8FD04FFA852A87DFD18FF7D52FD0BFF7D527DFD09FF%7D7DFFFFFF52A8FFFF7DFFFF7DA8FF7DA8FF7DA8FF7D7DFFFFFFA8A8FD18%FFA8FFFFA87D7DFF527D52A8275227527DFD04A8FFA87D7DFFFFA8FD18FF%527DFD0BFFA87D7DFD09FF527DFFA852A8A8FF7DA8A8FD08FFA852A8A8FF%FFFF7DA8FD18FF7DFFFFA8A8FFFFA8A8FFFFA8A87D527D527D2752FD04FF%A8FF7DFD18FF7D52FD0BFF527DFD0AFF7D7DFFA87DA8FFA852FD087D277D%FF7D7DFD04FFA8A8FD18FFA8FD04FF7D7D7DA87DA8A8FFFFFF7DA8A852A8%FFFFA87DA8FFA8FD18FF7D7DFD0BFF7D7DA8FD09FF527DFFFFA8527DFF52%52522727FD0652FFFF7D52FFFFFF7DA8FD18FF7DFFFFA852A8FD04FFA8FD%047DA87DA87D7D527D7DFFFFFF7DFD18FF7D52FD17FF7D52FFFFFF7DFFFF%FD0BA8FFFF7DFD04FFA8A8FD18FFA8FFFF7DFD09FFA8A87DA87DA8A8FD05%FFA8A8FD18FF7D7DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFD18FF7D%52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF527DFD%18FF7DA8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D7DFD18FFA8A8FD18FF%A8FD19FFA8FD18FF527DFD17FF527DFD18FF7DA8FD18FF7DFD19FF7DFD18%FF7D52FD17FF7D7DFD18FFA8A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF52%7DFD18FF7DA8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D52FD18FFA8A8FD%18FFA8A8FD17FFA8A8FD18FF7D7DFD17FF527DFD04FFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFF7DA8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FF7DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FF7D52%FD17FF7D27A87D7D7DA87D7D7DA87DA87DA87D7D7DA87D7D7DA8FD057DA8%7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D527DA87D7D7DA8%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87DA87D7D7DA87DA87D7D7DA87D7D%7DA87D7D7DA87D7D7DA87D7D7DA8527DFD17FF527DFD0AFF7D7DA8FD0BFF%7DA8FD18FF7DFD19FF7DFD18FF7D52FD17FF7D7DFD09FF7DA82752A8FD0A%FFA8A8FD18FFA8FD19FFA8FD18FF527DFD17FF527DFD08FFA852A8A827A8%FFA8A8FD07FF7DA8FD18FF7DFD07FFA8FFA8FFA8FFA8FFA8FD09FF7DFD18%FF7D52FD17FF7D7DFD08FF7D27522752A8FFA8A8FD07FFA8A8FD18FFA8FD%05FF52F827F827F827F827F827F82752FD06FFA8FD18FF7D7DFD17FF527D%FD07FFA827527D7D277DFFFF7DFD07FF7DA8FD18FF7DFFFFFFA827FD0FF8%A8FD04FF7DFD18FF7D52FD17FF7D52FD07FFA8A87D52A87D7DFFA87DA8FD%06FFA8A8FD18FFA8A8FFFF27FD11F8FFFFFFA8A8FD18FF7D7DFD17FF527D%FD07FFA8525227A8FD047D27FD07FF7DA8FD06FFA8FD11FF7DFFFF7DFD12%F852FFFFFF7DFD07FFA8FD10FF7D52FD17FF7D7DFD07FF52527DFF7D7D7D%A87D52FD07FFA8A8FFFFFF7D7D7DA87D7D7DFD09FF7D7DA8FFFFA8FFFF52%FD12F852FFFFFFA8FD04FFA87D7DA87D7D7DA8A8FD07FFA87D7DFF7D7DFD%17FF527DFD08FF52FFFFFF7D7DFFA87DFD07FF7DFFA87D7DFFA87D7DFFA8%A8FD057DA87D7D52A8FD04FF7DFFFF52FD12F827FFFFFF7DFFFFA8527DA8%A852A8A8A8FD057DA8A87D527DA8FFFF7D52FD17FF7D7DFD08FFA8A8FFFF%FF7DFF7DFD08FFA87D7DA8FFFFA85252527DA8FFFFFFA8A87DFFA8FFFFFF%A8A8FFA8FFFF27FD05F8527D52275252527D27FD04F852FFFFFFA8FFA87D%FFFFFF5252527DA8FFFFFFA8A87DA8A8FD04FFA8277DFD17FF527DFD08FF%7DFFFFFFA87DFD0AFF7D7DA8A852FF5252277D5227527D7DA87DA87DFFFF%7D527DA8FF7DFFFF52FD05F8A8F87D7DA8F8A87DFD05F852FFFFFF7DFFA8%FF7D7DA85252277D52275252A87DA8A8A8FFFF7D7DA87D52FD0BFFA852FD%0AFF7D7DFD08FFA852A8A87DA8FD0AFFA8A8A87DFFFFA87DFFFFA8525227%7D7D525252FFFFA8FD04FFA8FFFF27FD04F827A87D7D527DF87D7DFD05F8%52FFFFFFA8FFFF7DA8FFFF7DA8A8FF527D2752527D525252FD05FF7D7DFD%0BFFA852FD0AFF527DFD08FFA8527D7D52FD0BFF7DA8FFFFA87D7DA87DA8%A8FFFFA87D52A8527DFFFFFF7D7DA8FF7DFFFF52FD05F8A827F827A8F87D%52FD05F852FFFFFF7DFD04FFA87DA87D7D7DFFFFFFA87D52A827A8FFFFA8%7D7D7D52FD0CFF52FD0AFF7D52FD08FFA8A8A87DA8A8FD0AFFA8A8FF7D7D%A8FFA8FFA87D7DA8A8FFA8FFA8A87D7D7DA8A8FFFFA8FFFF27FD05F87D27%F8277DF87D52FD05F852FFFFA8A8FFFFFF7D7DFFA8FFA8A87D7D7DFFA8FF%FD04A87D7DA8FF7D7DFD0CFFA8A8FD09FF527DFD08FF7DFF527DA8A8FD0A%FF7DA87D7DFD08FFA8A8FD057DA8A8FD05FF7DFFFF52FD12F827FFFFFF7D%FFA87D7DFD07FFA8A8FD067DA8FD04FF7D52FD17FF7D7DFD08FFA8A87D7D%FF7DFD0AFFA8A8FD18FFA8FFFF52FD12F852FFFFFFA8FD18FF7D7DFD17FF%527DFD08FF7DA8A87D7D7DFD0AFF7DA8FD18FF7DFFFF52FD12F852FFFFFF%7DFD18FF7D52FD17FF7D7DFD07FFA8A87DFFA8A87DA8FD09FFA8A8FD18FF%A8FFFF7DFD12F87DFFFFFFA8FD18FF527DFD17FF527DFD07FFA8527D27A8%527D27A8FD08FF7DA8FD18FF7DFFFFFFFD11F827A8FFFFFF7DFD18FF7D52%FD17FF7D7DFD09FFA8A8FFFFA8FD0AFFA8A8FD18FFA8FD04FFFD0FF827A8%FD04FFA8FD18FF7D7DFD17FF527DFD05FFA8527D7D527DA852FF527D7D7D%277DFD04FF7DA8FD18FF7DFD05FF27FD0CF827A8FD05FF7DFD18FF7D52FD%17FF7D52FD05FF527D7DFF52FF5227A87D7D7DA87DFD05FFA8A8FD18FFA8%A8FD06FFA8A8FFA8A8A8FFA8A8A8FD07FFA8A8FD18FF7D7DFD17FF527DFD%05FFA87D52A87DA852527D527D52FF52FD05FF7DA8FD18FF7DFD19FF7DFD%18FF7D52FD17FF7D7DFD05FF7D7D7DFFA8A8A8FF7DA8FFA8FFA8FD05FFA8%A8FD18FFA8FD19FFA8FD18FF7D7DFD17FF7D27FD185227FD195227FD1952%27FD1852277DFD18FFFD67A8FDFCFFFDFCFFFDADFFA8A8FD18FF7DA8FD18%FF7DFD19FFA8FD31FF7D27FD17FFA87D27A8FD16FF7D5252FD17FFA8277D%FD31FF52FD18FF7DA8FD18FF7D52FD17FF52277DFD31FF52FD17FF7D277D%FD17FF525252FD17FFA85252FD4AFFA8FD19FFA8FDFCFFFDB5FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2009-11-03T13:53:53-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-11-03T13:53:53-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-11-03T13:53:52-08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq8V8j/lZ+Xvm&#xA;jUfOmpeYNCttRvl8z6lCLiYMW9NTGVXYjYFjirK/+VA/k1/1Kdj/AMC3/NWKu/5UD+TX/Up2P/At&#xA;/wA1Yq7/AJUD+TX/AFKdj/wLf81Yq7/lQP5Nf9SnY/8AAt/zVirv+VA/k1/1Kdj/AMC3/NWKpL5k&#xA;/I38pLafRVg8r2UYuNRjhmAVvijMMrFT8XSqjFU6/wCVA/k1/wBSnY/8C3/NWKu/5UD+TX/Up2P/&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Oblique</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Oblique</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>xmp.did:115B6A4E91226811994CEF6A767452B2</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:B0C62C2995206811AA2497B09AF50ED3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:B0C62C2995206811AA2497B09AF50ED3</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:115B6A4E91226811994CEF6A767452B2</stEvt:instanceID>
                  <stEvt:when>2009-11-02T14:27:08-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B0C62C2995206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T13:53:53-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:115B6A4E91226811994CEF6A767452B2</stRef:instanceID>
            <stRef:documentID>xmp.did:115B6A4E91226811994CEF6A767452B2</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:115B6A4E91226811994CEF6A767452B2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -164.253 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 164.253 li
180.734 164.253 li
180.734 0 li
cp
clp
[1 0 0 1 0 0 ]ct
95.3081 51.3369 mo
95.3081 49.208 95.3081 47.7886 96.0176 46.3691 cv
96.7271 44.9502 98.146 43.5308 99.5659 42.8213 cv
100.985 42.1118 102.404 42.1118 104.763 42.1118 cv
107.122 42.1118 110.421 42.1118 112.78 42.1118 cv
115.139 42.1118 116.558 42.1118 117.958 42.8213 cv
119.358 43.5308 120.739 44.9502 121.43 46.3691 cv
122.12 47.7886 122.12 49.208 122.12 51.3369 cv
122.12 53.4658 122.12 56.3042 122.12 58.4331 cv
122.12 60.562 122.12 61.9814 121.43 63.4004 cv
120.739 64.8198 119.358 66.2393 117.958 66.9487 cv
116.558 67.6582 115.139 67.6582 112.78 67.6582 cv
110.421 67.6582 107.122 67.6582 104.763 67.6582 cv
102.404 67.6582 100.985 67.6582 99.5659 66.9487 cv
98.146 66.2393 96.7271 64.8198 96.0176 63.4004 cv
95.3081 61.9814 95.3081 60.562 95.3081 58.4331 cv
95.3081 56.3042 95.3081 53.4658 95.3081 51.3369 cv
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
ef
.5268 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
95.3081 51.3369 mo
95.3081 49.208 95.3081 47.7886 96.0176 46.3691 cv
96.7271 44.9502 98.146 43.5308 99.5659 42.8213 cv
100.985 42.1118 102.404 42.1118 104.763 42.1118 cv
107.122 42.1118 110.421 42.1118 112.78 42.1118 cv
115.139 42.1118 116.558 42.1118 117.958 42.8213 cv
119.358 43.5308 120.739 44.9502 121.43 46.3691 cv
122.12 47.7886 122.12 49.208 122.12 51.3369 cv
122.12 53.4658 122.12 56.3042 122.12 58.4331 cv
122.12 60.562 122.12 61.9814 121.43 63.4004 cv
120.739 64.8198 119.358 66.2393 117.958 66.9487 cv
116.558 67.6582 115.139 67.6582 112.78 67.6582 cv
110.421 67.6582 107.122 67.6582 104.763 67.6582 cv
102.404 67.6582 100.985 67.6582 99.5659 66.9487 cv
98.146 66.2393 96.7271 64.8198 96.0176 63.4004 cv
95.3081 61.9814 95.3081 60.562 95.3081 58.4331 cv
95.3081 56.3042 95.3081 53.4658 95.3081 51.3369 cv
@
false sop
0 0 0 0 cmyk
%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 73 /I putdup 80 /P putdup 84 /T putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/I <1C60D8A8C9B854D0F45A7DCEFBC402FF7699F7922C5BBAB4> |-/P <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/T <1C60D8A8C9B7D8BE7DCB37357CA4E5AE05A345039A6B2A4DEEFF447C82AF49FFED9827> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHNJ+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/WGFHNJ+Helvetica-Bold*1 [73{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp /T 171{/.notdef}rp]WGFHNJ+Helvetica-Bold nfWGFHNJ+Helvetica-Bold*1 [8.2013 0 0 -8.2013 0 0 ]msf102.563 57.3657 mo(PIT)sh1.0535 lw
18.3169 146.07 mo
18.3169 .526855 li
163.86 .526855 li
163.86 146.07 li
18.3169 146.07 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
.5268 lw
127.721 .526855 mo
127.721 146.07 li
91.0879 .526855 mo
91.0879 146.07 li
54.9502 .526855 mo
54.9502 146.07 li
18.3169 109.931 mo
163.86 109.931 li
18.3169 73.2983 mo
163.86 73.2983 li
18.3169 37.1602 mo
163.86 37.1602 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 65 /A putdup 82 /R putdup 83 /S putdup 84 /T putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/R <1C60D8A8C9B6079F62E4AB3BE2637412A7FA2BF1A87387986CC045CAB872B149BF5CA8B183616945E928E44276850B6ACD583D0202E4733E2391A44F4BCB738AB089D22707E0F4100F2BC6F35BD460D56FBB8A5713D4AF8760EB8EC1E1AE6F49A9B2B1066A8DA04011CCA29E2BB62A652880D30D80185E3336BD5BF6EB5D116E1FAF0793D4F86835A22CB564EFB5339E311318AE2981A0679F359C9E7A1FF6CE964A> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/T <1C60D8A8C9B7D8BE7B6CE17BCB3B2D4B0FB3E6AF9E6DDADD178189522CE1F006> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHNK+Helvetica /Helvetica findfont ct_VMDictPut/WGFHNK+Helvetica*1 [49{/.notdef}rp /one /two /three /four 12{/.notdef}rp /A 16{/.notdef}rp /R /S /T 171{/.notdef}rp]WGFHNK+Helvetica nfWGFHNK+Helvetica*1 [6.9306 0 0 -6.9306 0 0 ]msf35.0508 160.92 mo(12)[36.2758 0 ]xsh107.739 160.92 mo(34)[36.4976 0 ]xsh0 131.34 mo(1)sh0 94.0415 mo(2)sh0 57.8555 mo(3)sh0 21.5645 mo(4)shWGFHNK+Helvetica*1 [6.2859 0 0 -6.2859 0 0 ]msf26.9648 144.465 mo(START)sh29.2417 48.875 mo
30.0771 45.5327 31.043 44.0469 33.1226 43.23 cv
35.2021 42.4131 38.396 42.2646 40.3457 43.1187 cv
42.2954 43.9731 43.001 45.8301 43.6699 49.3394 cv
44.3384 52.8486 44.9692 58.0112 44.895 60.9077 cv
44.8208 63.8047 44.041 64.436 41.3486 64.77 cv
38.6563 65.1045 34.0508 65.1416 31.3398 64.7329 cv
28.6289 64.3247 27.812 63.4702 27.7563 60.4434 cv
27.7002 57.4165 28.4063 52.2173 29.2417 48.875 cv
false sop
0 0 0 0 cmyk
ef
29.2417 48.875 mo
30.0771 45.5327 31.043 44.0469 33.1226 43.23 cv
35.2021 42.4131 38.396 42.2646 40.3457 43.1187 cv
42.2954 43.9731 43.001 45.8301 43.6699 49.3394 cv
44.3384 52.8486 44.9692 58.0112 44.895 60.9077 cv
44.8208 63.8047 44.041 64.436 41.3486 64.77 cv
38.6563 65.1045 34.0508 65.1416 31.3398 64.7329 cv
28.6289 64.3247 27.812 63.4702 27.7563 60.4434 cv
27.7002 57.4165 28.4063 52.2173 29.2417 48.875 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
1.0535 lw
37.5879 49.52 mo
40.0308 50.1616 li
32.9087 50.313 mo
35.4756 49.7427 li
@
.5268 lw
32.7881 55.9312 mo
32.7881 55.9312 32.7881 55.9312 32.937 56.1914 cv
33.0854 56.4512 33.3828 56.9712 33.8096 56.9336 cv
34.2368 56.897 34.7935 56.3027 35.3135 56.3398 cv
35.8335 56.377 36.3164 57.0454 36.7437 57.0083 cv
37.1704 56.9712 37.542 56.2285 38.0249 56.2285 cv
38.5073 56.2285 39.1021 56.9712 39.5659 57.0083 cv
40.0303 57.0454 40.3643 56.377 40.5317 56.043 cv
40.6987 55.7085 40.6987 55.7085 40.6987 55.7085 cv
@
35.437 52.4282 mo
35.437 51.9248 35.1104 51.5161 34.708 51.5161 cv
34.3052 51.5161 33.978 51.9248 33.978 52.4282 cv
33.978 52.9312 34.3052 53.3398 34.708 53.3398 cv
35.1104 53.3398 35.437 52.9312 35.437 52.4282 cv
false sop
0 0 0 .4 cmyk
ef
35.437 52.4282 mo
35.437 51.9248 35.1104 51.5161 34.708 51.5161 cv
34.3052 51.5161 33.978 51.9248 33.978 52.4282 cv
33.978 52.9312 34.3052 53.3398 34.708 53.3398 cv
35.1104 53.3398 35.437 52.9312 35.437 52.4282 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
39.1348 52.4282 mo
39.1348 51.9248 38.8081 51.5161 38.4058 51.5161 cv
38.0034 51.5161 37.6763 51.9248 37.6763 52.4282 cv
37.6763 52.9312 38.0034 53.3398 38.4058 53.3398 cv
38.8081 53.3398 39.1348 52.9312 39.1348 52.4282 cv
false sop
0 0 0 .4 cmyk
ef
39.1348 52.4282 mo
39.1348 51.9248 38.8081 51.5161 38.4058 51.5161 cv
38.0034 51.5161 37.6763 51.9248 37.6763 52.4282 cv
37.6763 52.9312 38.0034 53.3398 38.4058 53.3398 cv
38.8081 53.3398 39.1348 52.9312 39.1348 52.4282 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
34.7661 56.5156 mo
35.0166 58.6045 li
36.0195 58.6045 li
36.1309 56.7944 li
37.7744 56.3486 mo
37.9131 58.3818 li
39.0278 58.3818 li
39.1392 56.8223 li
@
28.9727 51.4746 mo
28.9727 51.4746 28.9727 51.4746 28.6382 50.8804 cv
28.3037 50.2861 27.6353 49.0981 27.3384 48.2065 cv
27.0415 47.3154 27.1152 46.7212 26.9487 46.3496 cv
26.7813 45.9785 26.373 45.8301 26.1313 45.8115 cv
25.8896 45.7925 25.8159 45.9043 25.7969 46.127 cv
25.7783 46.3496 25.8159 46.6841 25.6855 46.7397 cv
25.5557 46.7954 25.2583 46.5723 25.0542 46.5356 cv
24.8501 46.4985 24.7388 46.647 24.7759 46.8696 cv
24.813 47.0923 24.9985 47.3896 24.9614 47.4639 cv
24.9243 47.5381 24.6646 47.3896 24.4971 47.4082 cv
24.3301 47.4268 24.2559 47.6123 24.3486 47.7979 cv
24.4414 47.9839 24.7017 48.1694 24.6831 48.2622 cv
24.6646 48.355 24.3672 48.355 24.2002 48.4668 cv
24.0332 48.5781 23.9961 48.8008 24.0889 49.0234 cv
24.1816 49.2466 24.4043 49.4692 24.7388 49.562 cv
25.0728 49.6548 25.5186 49.6177 25.9268 49.8779 cv
26.3354 50.1377 26.707 50.6948 27.1343 51.5308 cv
27.561 52.3657 28.0439 53.4805 28.2856 54.0371 cv
28.5269 54.5942 28.5269 54.5942 28.5269 54.5942 cv
false sop
0 0 0 0 cmyk
ef
28.9727 51.4746 mo
28.9727 51.4746 28.9727 51.4746 28.6382 50.8804 cv
28.3037 50.2861 27.6353 49.0981 27.3384 48.2065 cv
27.0415 47.3154 27.1152 46.7212 26.9487 46.3496 cv
26.7813 45.9785 26.373 45.8301 26.1313 45.8115 cv
25.8896 45.7925 25.8159 45.9043 25.7969 46.127 cv
25.7783 46.3496 25.8159 46.6841 25.6855 46.7397 cv
25.5557 46.7954 25.2583 46.5723 25.0542 46.5356 cv
24.8501 46.4985 24.7388 46.647 24.7759 46.8696 cv
24.813 47.0923 24.9985 47.3896 24.9614 47.4639 cv
24.9243 47.5381 24.6646 47.3896 24.4971 47.4082 cv
24.3301 47.4268 24.2559 47.6123 24.3486 47.7979 cv
24.4414 47.9839 24.7017 48.1694 24.6831 48.2622 cv
24.6646 48.355 24.3672 48.355 24.2002 48.4668 cv
24.0332 48.5781 23.9961 48.8008 24.0889 49.0234 cv
24.1816 49.2466 24.4043 49.4692 24.7388 49.562 cv
25.0728 49.6548 25.5186 49.6177 25.9268 49.8779 cv
26.3354 50.1377 26.707 50.6948 27.1343 51.5308 cv
27.561 52.3657 28.0439 53.4805 28.2856 54.0371 cv
28.5269 54.5942 28.5269 54.5942 28.5269 54.5942 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
43.7119 51.4746 mo
43.7119 51.4746 43.7119 51.4746 44.0464 50.8804 cv
44.3804 50.2861 45.0488 49.0981 45.3457 48.2065 cv
45.6431 47.3154 45.5688 46.7212 45.7358 46.3496 cv
45.9033 45.9785 46.3115 45.8301 46.5527 45.8115 cv
46.7944 45.7925 46.8687 45.9043 46.8872 46.127 cv
46.9058 46.3496 46.8687 46.6841 46.9985 46.7397 cv
47.1284 46.7954 47.4258 46.5723 47.6299 46.5356 cv
47.834 46.4985 47.9453 46.647 47.9087 46.8696 cv
47.8711 47.0923 47.6855 47.3896 47.7227 47.4639 cv
47.7598 47.5381 48.0195 47.3896 48.187 47.4082 cv
48.3545 47.4268 48.4282 47.6123 48.3354 47.7979 cv
48.2427 47.9839 47.9824 48.1694 48.0015 48.2622 cv
48.0195 48.355 48.3169 48.355 48.4839 48.4668 cv
48.6514 48.5781 48.6885 48.8008 48.5957 49.0234 cv
48.5029 49.2466 48.2798 49.4692 47.9453 49.562 cv
47.6113 49.6548 47.1655 49.6177 46.7573 49.8779 cv
46.3486 50.1377 45.9775 50.6948 45.5503 51.5308 cv
45.123 52.3657 44.6401 53.4805 44.3989 54.0371 cv
44.1572 54.5942 44.1572 54.5942 44.1572 54.5942 cv
false sop
0 0 0 0 cmyk
ef
43.7119 51.4746 mo
43.7119 51.4746 43.7119 51.4746 44.0464 50.8804 cv
44.3804 50.2861 45.0488 49.0981 45.3457 48.2065 cv
45.6431 47.3154 45.5688 46.7212 45.7358 46.3496 cv
45.9033 45.9785 46.3115 45.8301 46.5527 45.8115 cv
46.7944 45.7925 46.8687 45.9043 46.8872 46.127 cv
46.9058 46.3496 46.8687 46.6841 46.9985 46.7397 cv
47.1284 46.7954 47.4258 46.5723 47.6299 46.5356 cv
47.834 46.4985 47.9453 46.647 47.9087 46.8696 cv
47.8711 47.0923 47.6855 47.3896 47.7227 47.4639 cv
47.7598 47.5381 48.0195 47.3896 48.187 47.4082 cv
48.3545 47.4268 48.4282 47.6123 48.3354 47.7979 cv
48.2427 47.9839 47.9824 48.1694 48.0015 48.2622 cv
48.0195 48.355 48.3169 48.355 48.4839 48.4668 cv
48.6514 48.5781 48.6885 48.8008 48.5957 49.0234 cv
48.5029 49.2466 48.2798 49.4692 47.9453 49.562 cv
47.6113 49.6548 47.1655 49.6177 46.7573 49.8779 cv
46.3486 50.1377 45.9775 50.6948 45.5503 51.5308 cv
45.123 52.3657 44.6401 53.4805 44.3989 54.0371 cv
44.1572 54.5942 44.1572 54.5942 44.1572 54.5942 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
32.7393 64.417 mo
32.7393 64.417 32.7393 64.417 32.7393 64.7021 cv
32.7393 64.9868 32.7393 65.5571 32.6953 65.8638 cv
32.6519 66.1704 32.564 66.2144 31.9722 66.127 cv
31.3804 66.0391 30.2842 65.8203 29.561 65.7759 cv
28.8379 65.7324 28.4868 65.8638 28.1802 65.9731 cv
27.873 66.083 27.6104 66.1704 27.4565 66.3896 cv
27.3037 66.6089 27.2598 66.9595 27.4565 67.2446 cv
27.6538 67.5298 28.0923 67.7485 28.6841 67.8804 cv
29.2759 68.0117 30.0215 68.0557 31.0952 67.9678 cv
32.1694 67.8804 33.5723 67.6611 34.4712 67.6172 cv
35.3696 67.5732 35.7642 67.7051 35.9395 67.5952 cv
36.1147 67.4858 36.0708 67.1348 36.0488 66.8716 cv
36.0273 66.6089 36.0273 66.4336 35.9395 66.2583 cv
35.8521 66.083 35.6763 65.9077 35.5449 65.7979 cv
35.4136 65.6885 35.3257 65.6445 35.2817 65.4473 cv
35.2383 65.25 35.2383 64.8994 35.2383 64.7236 cv
35.2383 64.5483 35.2383 64.5483 35.2383 64.5483 cv
false sop
0 0 0 0 cmyk
ef
32.7393 64.417 mo
32.7393 64.417 32.7393 64.417 32.7393 64.7021 cv
32.7393 64.9868 32.7393 65.5571 32.6953 65.8638 cv
32.6519 66.1704 32.564 66.2144 31.9722 66.127 cv
31.3804 66.0391 30.2842 65.8203 29.561 65.7759 cv
28.8379 65.7324 28.4868 65.8638 28.1802 65.9731 cv
27.873 66.083 27.6104 66.1704 27.4565 66.3896 cv
27.3037 66.6089 27.2598 66.9595 27.4565 67.2446 cv
27.6538 67.5298 28.0923 67.7485 28.6841 67.8804 cv
29.2759 68.0117 30.0215 68.0557 31.0952 67.9678 cv
32.1694 67.8804 33.5723 67.6611 34.4712 67.6172 cv
35.3696 67.5732 35.7642 67.7051 35.9395 67.5952 cv
36.1147 67.4858 36.0708 67.1348 36.0488 66.8716 cv
36.0273 66.6089 36.0273 66.4336 35.9395 66.2583 cv
35.8521 66.083 35.6763 65.9077 35.5449 65.7979 cv
35.4136 65.6885 35.3257 65.6445 35.2817 65.4473 cv
35.2383 65.25 35.2383 64.8994 35.2383 64.7236 cv
35.2383 64.5483 35.2383 64.5483 35.2383 64.5483 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
40.543 64.417 mo
40.543 64.417 40.543 64.417 40.543 64.7021 cv
40.543 64.9868 40.543 65.5571 40.5869 65.8638 cv
40.6309 66.1704 40.7188 66.2144 41.3101 66.127 cv
41.9019 66.0391 42.998 65.8203 43.7212 65.7759 cv
44.4448 65.7324 44.7954 65.8638 45.1021 65.9731 cv
45.4092 66.083 45.6724 66.1704 45.8257 66.3896 cv
45.979 66.6089 46.0229 66.9595 45.8257 67.2446 cv
45.6284 67.5298 45.1899 67.7485 44.5981 67.8804 cv
44.0063 68.0117 43.2612 68.0557 42.187 67.9678 cv
41.1133 67.8804 39.71 67.6611 38.8115 67.6172 cv
37.9131 67.5732 37.5181 67.7051 37.3428 67.5952 cv
37.1675 67.4858 37.2114 67.1348 37.2334 66.8716 cv
37.2554 66.6089 37.2554 66.4336 37.3428 66.2583 cv
37.4307 66.083 37.606 65.9077 37.7378 65.7979 cv
37.8691 65.6885 37.9565 65.6445 38.0005 65.4473 cv
38.0444 65.25 38.0444 64.8994 38.0444 64.7236 cv
38.0444 64.5483 38.0444 64.5483 38.0444 64.5483 cv
false sop
0 0 0 0 cmyk
ef
40.543 64.417 mo
40.543 64.417 40.543 64.417 40.543 64.7021 cv
40.543 64.9868 40.543 65.5571 40.5869 65.8638 cv
40.6309 66.1704 40.7188 66.2144 41.3101 66.127 cv
41.9019 66.0391 42.998 65.8203 43.7212 65.7759 cv
44.4448 65.7324 44.7954 65.8638 45.1021 65.9731 cv
45.4092 66.083 45.6724 66.1704 45.8257 66.3896 cv
45.979 66.6089 46.0229 66.9595 45.8257 67.2446 cv
45.6284 67.5298 45.1899 67.7485 44.5981 67.8804 cv
44.0063 68.0117 43.2612 68.0557 42.187 67.9678 cv
41.1133 67.8804 39.71 67.6611 38.8115 67.6172 cv
37.9131 67.5732 37.5181 67.7051 37.3428 67.5952 cv
37.1675 67.4858 37.2114 67.1348 37.2334 66.8716 cv
37.2554 66.6089 37.2554 66.4336 37.3428 66.2583 cv
37.4307 66.083 37.606 65.9077 37.7378 65.7979 cv
37.8691 65.6885 37.9565 65.6445 38.0005 65.4473 cv
38.0444 65.25 38.0444 64.8994 38.0444 64.7236 cv
38.0444 64.5483 38.0444 64.5483 38.0444 64.5483 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.6548 127.344 mo
38.7061 135.851 li
39.5391 136.402 li
40.981 136.682 li
41.1147 137.301 li
40.0332 137.599 li
37.0146 137.593 li
34.8594 128.158 li
37.6548 127.344 li
cp
false sop
0 0 0 0 cmyk
ef
.5 lw
37.6548 127.344 mo
38.7061 135.851 li
39.5391 136.402 li
40.981 136.682 li
41.1147 137.301 li
40.0332 137.599 li
37.0146 137.593 li
34.8594 128.158 li
37.6548 127.344 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
35.9014 127.531 mo
33.3608 135.82 li
33.9146 136.574 li
35.1523 137.247 li
35.022 137.866 li
33.8818 137.838 li
31.0488 136.977 li
32.938 127.504 li
35.9014 127.531 li
cp
false sop
0 0 0 0 cmyk
ef
35.9014 127.531 mo
33.3608 135.82 li
33.9146 136.574 li
35.1523 137.247 li
35.022 137.866 li
33.8818 137.838 li
31.0488 136.977 li
32.938 127.504 li
35.9014 127.531 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
42.1719 114.202 mo
42.1719 114.202 42.1719 114.202 42.2656 114.626 cv
42.3594 115.052 42.5464 115.903 42.8086 116.554 cv
43.0708 117.204 43.4077 117.652 43.5391 118.046 cv
43.6699 118.441 43.5947 118.782 43.4829 119.045 cv
43.3706 119.308 43.2202 119.494 43.1362 119.61 cv
43.0518 119.726 43.0332 119.772 43.1084 119.866 cv
43.1831 119.958 43.3516 120.097 43.4546 120.322 cv
43.5576 120.546 43.5947 120.856 43.4829 121.15 cv
43.3706 121.444 43.1084 121.722 42.7803 122.349 cv
42.4531 122.975 42.0596 123.951 41.8628 124.438 cv
41.6665 124.926 41.6665 124.926 41.6665 124.926 cv
false sop
0 0 0 0 cmyk
ef
42.1719 114.202 mo
42.1719 114.202 42.1719 114.202 42.2656 114.626 cv
42.3594 115.052 42.5464 115.903 42.8086 116.554 cv
43.0708 117.204 43.4077 117.652 43.5391 118.046 cv
43.6699 118.441 43.5947 118.782 43.4829 119.045 cv
43.3706 119.308 43.2202 119.494 43.1362 119.61 cv
43.0518 119.726 43.0332 119.772 43.1084 119.866 cv
43.1831 119.958 43.3516 120.097 43.4546 120.322 cv
43.5576 120.546 43.5947 120.856 43.4829 121.15 cv
43.3706 121.444 43.1084 121.722 42.7803 122.349 cv
42.4531 122.975 42.0596 123.951 41.8628 124.438 cv
41.6665 124.926 41.6665 124.926 41.6665 124.926 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
34.8052 118.38 mo
31.9531 122.807 li
30.2979 121.623 li
33.335 116.366 li
34.8052 118.38 li
cp
false sop
0 0 0 0 cmyk
ef
34.8052 118.38 mo
31.9531 122.807 li
30.2979 121.623 li
33.335 116.366 li
34.8052 118.38 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.4849 113.513 mo
37.4849 112.344 36.4932 111.396 35.272 111.396 cv
34.0503 111.396 33.0586 112.344 33.0586 113.513 cv
33.0586 114.681 34.0503 115.631 35.272 115.631 cv
36.4932 115.631 37.4849 114.681 37.4849 113.513 cv
false sop
0 0 0 0 cmyk
ef
37.4849 113.513 mo
37.4849 112.344 36.4932 111.396 35.272 111.396 cv
34.0503 111.396 33.0586 112.344 33.0586 113.513 cv
33.0586 114.681 34.0503 115.631 35.272 115.631 cv
36.4932 115.631 37.4849 114.681 37.4849 113.513 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
33.2378 115.608 mo
32.1362 115.776 31.8101 116.066 31.769 118.042 cv
31.728 120.015 31.9731 123.676 32.1768 125.603 cv
32.3809 127.53 32.5444 127.722 33.5029 127.818 cv
34.4619 127.914 36.2158 127.914 37.1543 127.818 cv
38.0928 127.722 38.2148 127.53 38.3579 125.626 cv
38.5005 123.724 38.6636 120.112 38.623 118.112 cv
38.582 116.114 38.3374 115.728 37.2769 115.56 cv
36.2158 115.391 34.3394 115.439 33.2378 115.608 cv
false sop
0 0 0 0 cmyk
ef
33.2378 115.608 mo
32.1362 115.776 31.8101 116.066 31.769 118.042 cv
31.728 120.015 31.9731 123.676 32.1768 125.603 cv
32.3809 127.53 32.5444 127.722 33.5029 127.818 cv
34.4619 127.914 36.2158 127.914 37.1543 127.818 cv
38.0928 127.722 38.2148 127.53 38.3579 125.626 cv
38.5005 123.724 38.6636 120.112 38.623 118.112 cv
38.582 116.114 38.3374 115.728 37.2769 115.56 cv
36.2158 115.391 34.3394 115.439 33.2378 115.608 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.0083 112.541 mo
38.5713 113.941 li
36.9429 114.317 li
false sop
0 0 0 0 cmyk
ef
37.0083 112.541 mo
38.5713 113.941 li
36.9429 114.317 li
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
36.8457 112.246 mo
36.8457 112.246 36.8457 112.246 36.6934 112.343 cv
36.5415 112.443 36.2373 112.64 35.9556 112.764 cv
35.6733 112.89 35.4126 112.944 35.2822 112.972 cv
35.1523 112.999 35.1523 112.999 35.2715 113.034 cv
35.3911 113.07 35.6299 113.141 35.9121 113.267 cv
36.1943 113.393 36.52 113.573 36.6826 113.662 cv
36.8457 113.752 36.8457 113.752 36.8457 113.752 cv
false sop
0 0 0 0 cmyk
ef
36.8457 112.246 mo
36.8457 112.246 36.8457 112.246 36.6934 112.343 cv
36.5415 112.443 36.2373 112.64 35.9556 112.764 cv
35.6733 112.89 35.4126 112.944 35.2822 112.972 cv
35.1523 112.999 35.1523 112.999 35.2715 113.034 cv
35.3911 113.07 35.6299 113.141 35.9121 113.267 cv
36.1943 113.393 36.52 113.573 36.6826 113.662 cv
36.8457 113.752 36.8457 113.752 36.8457 113.752 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
36.4873 112.541 mo
36.4873 112.541 36.4873 112.541 36.5034 112.618 cv
36.52 112.693 36.5522 112.846 36.5308 112.999 cv
36.5088 113.151 36.4331 113.303 36.395 113.379 cv
36.3569 113.456 36.3569 113.456 36.3569 113.456 cv
false sop
0 0 0 0 cmyk
ef
36.4873 112.541 mo
36.4873 112.541 36.4873 112.541 36.5034 112.618 cv
36.52 112.693 36.5522 112.846 36.5308 112.999 cv
36.5088 113.151 36.4331 113.303 36.395 113.379 cv
36.3569 113.456 36.3569 113.456 36.3569 113.456 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.312 115.751 mo
37.2578 115.886 37.1494 116.138 37.0625 116.358 cv
36.9756 116.578 36.9106 116.766 36.8184 116.936 cv
36.7261 117.107 36.6064 117.26 36.3789 117.484 cv
36.1509 117.708 35.8145 118.004 35.4453 118.308 cv
35.0762 118.614 34.6748 118.928 34.3052 119.183 cv
33.9365 119.439 33.6001 119.636 33.3555 119.717 cv
33.1113 119.797 32.9595 119.762 32.8071 119.664 cv
32.6553 119.565 32.5034 119.403 32.3677 119.273 cv
32.2324 119.143 32.1128 119.044 32.0205 118.951 cv
31.9282 118.856 31.8633 118.767 31.8306 118.722 cv
31.7979 118.676 31.7979 118.676 31.8032 118.753 cv
31.8091 118.829 31.8193 118.982 31.8252 119.057 cv
31.8306 119.134 31.8306 119.134 31.8848 119.206 cv
31.939 119.279 32.0479 119.421 32.1616 119.538 cv
32.2754 119.655 32.395 119.745 32.5522 119.852 cv
32.71 119.959 32.9053 120.085 33.0845 120.129 cv
33.2637 120.174 33.4263 120.139 33.6055 120.076 cv
33.7842 120.014 33.98 119.923 34.186 119.806 cv
34.3921 119.691 34.6094 119.546 34.875 119.336 cv
35.1411 119.125 35.4561 118.847 35.7817 118.578 cv
36.1074 118.308 36.4438 118.048 36.6772 117.765 cv
36.9106 117.484 37.041 117.178 37.1602 116.878 cv
37.2798 116.578 37.3882 116.281 37.4751 116.075 cv
37.562 115.869 37.627 115.751 37.6597 115.694 cv
37.6919 115.635 37.6919 115.635 37.6377 115.626 cv
37.5835 115.618 37.4751 115.6 37.4209 115.6 cv
37.3662 115.6 37.3662 115.618 37.312 115.751 cv
false sop
0 0 0 .498 cmyk
ef
37.312 115.751 mo
37.2578 115.886 37.1494 116.138 37.0625 116.358 cv
36.9756 116.578 36.9106 116.766 36.8184 116.936 cv
36.7261 117.107 36.6064 117.26 36.3789 117.484 cv
36.1509 117.708 35.8145 118.004 35.4453 118.308 cv
35.0762 118.614 34.6748 118.928 34.3052 119.183 cv
33.9365 119.439 33.6001 119.636 33.3555 119.717 cv
33.1113 119.797 32.9595 119.762 32.8071 119.664 cv
32.6553 119.565 32.5034 119.403 32.3677 119.273 cv
32.2324 119.143 32.1128 119.044 32.0205 118.951 cv
31.9282 118.856 31.8633 118.767 31.8306 118.722 cv
31.7979 118.676 31.7979 118.676 31.8032 118.753 cv
31.8091 118.829 31.8193 118.982 31.8252 119.057 cv
31.8306 119.134 31.8306 119.134 31.8848 119.206 cv
31.939 119.279 32.0479 119.421 32.1616 119.538 cv
32.2754 119.655 32.395 119.745 32.5522 119.852 cv
32.71 119.959 32.9053 120.085 33.0845 120.129 cv
33.2637 120.174 33.4263 120.139 33.6055 120.076 cv
33.7842 120.014 33.98 119.923 34.186 119.806 cv
34.3921 119.691 34.6094 119.546 34.875 119.336 cv
35.1411 119.125 35.4561 118.847 35.7817 118.578 cv
36.1074 118.308 36.4438 118.048 36.6772 117.765 cv
36.9106 117.484 37.041 117.178 37.1602 116.878 cv
37.2798 116.578 37.3882 116.281 37.4751 116.075 cv
37.562 115.869 37.627 115.751 37.6597 115.694 cv
37.6919 115.635 37.6919 115.635 37.6377 115.626 cv
37.5835 115.618 37.4751 115.6 37.4209 115.6 cv
37.3662 115.6 37.3662 115.618 37.312 115.751 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
33.9585 116.829 mo
34.0449 117.178 34.2402 117.645 34.5225 118.317 cv
34.8047 118.991 35.1738 119.87 35.5864 120.498 cv
35.9985 121.126 36.4546 121.503 36.7368 121.718 cv
37.019 121.933 37.1279 121.987 37.4209 121.996 cv
37.7139 122.004 38.1914 121.969 39.1465 121.772 cv
40.1021 121.574 41.5347 121.215 42.2617 120.992 cv
42.9893 120.767 43.0107 120.677 43.022 120.632 cv
43.0327 120.587 43.0327 120.587 42.8809 120.363 cv
42.7285 120.139 42.4248 119.691 42.2729 119.466 cv
42.1211 119.242 42.1211 119.242 41.7842 119.34 cv
41.4482 119.439 40.7749 119.637 40.167 119.771 cv
39.5591 119.906 39.0166 119.977 38.6147 120.023 cv
38.2129 120.067 37.9526 120.085 37.7466 119.977 cv
37.5405 119.87 37.3882 119.637 37.2578 119.332 cv
37.1279 119.026 37.019 118.65 36.8999 118.282 cv
36.7803 117.914 36.6504 117.555 36.498 117.223 cv
36.3462 116.892 36.1729 116.586 35.9658 116.363 cv
35.7598 116.138 35.521 115.995 35.1738 115.95 cv
34.8267 115.905 34.3706 115.959 34.1318 116.102 cv
33.8931 116.246 33.8711 116.478 33.9585 116.829 cv
false sop
0 0 0 0 cmyk
ef
33.9585 116.829 mo
34.0449 117.178 34.2402 117.645 34.5225 118.317 cv
34.8047 118.991 35.1738 119.87 35.5864 120.498 cv
35.9985 121.126 36.4546 121.503 36.7368 121.718 cv
37.019 121.933 37.1279 121.987 37.4209 121.996 cv
37.7139 122.004 38.1914 121.969 39.1465 121.772 cv
40.1021 121.574 41.5347 121.215 42.2617 120.992 cv
42.9893 120.767 43.0107 120.677 43.022 120.632 cv
43.0327 120.587 43.0327 120.587 42.8809 120.363 cv
42.7285 120.139 42.4248 119.691 42.2729 119.466 cv
42.1211 119.242 42.1211 119.242 41.7842 119.34 cv
41.4482 119.439 40.7749 119.637 40.167 119.771 cv
39.5591 119.906 39.0166 119.977 38.6147 120.023 cv
38.2129 120.067 37.9526 120.085 37.7466 119.977 cv
37.5405 119.87 37.3882 119.637 37.2578 119.332 cv
37.1279 119.026 37.019 118.65 36.8999 118.282 cv
36.7803 117.914 36.6504 117.555 36.498 117.223 cv
36.3462 116.892 36.1729 116.586 35.9658 116.363 cv
35.7598 116.138 35.521 115.995 35.1738 115.95 cv
34.8267 115.905 34.3706 115.959 34.1318 116.102 cv
33.8931 116.246 33.8711 116.478 33.9585 116.829 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
32.8965 114.455 mo
32.4131 114.758 li
31.8823 114.448 li
31.9775 115.093 li
32.2803 115.354 li
32.2827 116.263 li
31.2139 116.48 li
30.7896 116.887 li
31.6528 120.949 li
32.6709 121.282 li
33.6104 120.788 li
33.2734 116.708 li
33.252 116.566 li
33.0083 116.408 li
32.4995 116.241 li
32.5464 115.364 li
32.8613 115.113 li
32.9834 114.446 li
32.8965 114.455 li
cp
false sop
0 0 0 0 cmyk
ef
32.8965 114.455 mo
32.4131 114.758 li
31.8823 114.448 li
31.9775 115.093 li
32.2803 115.354 li
32.2827 116.263 li
31.2139 116.48 li
30.7896 116.887 li
31.6528 120.949 li
32.6709 121.282 li
33.6104 120.788 li
33.2734 116.708 li
33.252 116.566 li
33.0083 116.408 li
32.4995 116.241 li
32.5464 115.364 li
32.8613 115.113 li
32.9834 114.446 li
32.8965 114.455 li
cp
@
30.7622 116.923 mo
30.731 116.714 31.2539 116.49 31.9287 116.421 cv
32.6035 116.353 33.1763 116.468 33.207 116.676 cv
33.2378 116.886 32.7153 117.112 32.0405 117.179 cv
31.3657 117.248 30.793 117.133 30.7622 116.923 cv
ef
30.7622 116.923 mo
30.731 116.714 31.2539 116.49 31.9287 116.421 cv
32.6035 116.353 33.1763 116.468 33.207 116.676 cv
33.2378 116.886 32.7153 117.112 32.0405 117.179 cv
31.3657 117.248 30.793 117.133 30.7622 116.923 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
31.7344 120.867 mo
31.7109 120.707 32.1104 120.535 32.6265 120.482 cv
33.1426 120.431 33.5806 120.517 33.6045 120.678 cv
33.6274 120.837 33.228 121.01 32.7119 121.062 cv
32.1958 121.114 31.7583 121.026 31.7344 120.867 cv
false sop
0 0 0 0 cmyk
ef
31.7344 120.867 mo
31.7109 120.707 32.1104 120.535 32.6265 120.482 cv
33.1426 120.431 33.5806 120.517 33.6045 120.678 cv
33.6274 120.837 33.228 121.01 32.7119 121.062 cv
32.1958 121.114 31.7583 121.026 31.7344 120.867 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
32.3799 115.364 mo
32.7485 115.058 li
32.4019 115.181 mo
32.7705 114.875 li
32.4233 115.03 mo
32.7925 114.725 li
32.4155 114.91 mo
32.7842 114.605 li
32.478 115.326 mo
32.0596 115.05 li
32.4248 115.147 mo
32.0068 114.871 li
32.3779 114.998 mo
31.9595 114.722 li
32.3652 114.876 mo
31.9473 114.601 li
31.7148 120.885 mo
30.8179 116.907 li
33.5439 120.669 mo
33.2246 116.664 li
@
32.4155 116.869 mo
32.4287 114.867 li
@
23.6782 95.1392 mo
23.6782 95.1392 23.6782 95.1392 24.1348 95.022 cv
24.5908 94.9038 25.5034 94.6675 25.894 94.3716 cv
26.2856 94.0767 26.1553 93.7212 25.4165 93.397 cv
24.6777 93.0728 23.3306 92.7759 22.6792 92.3931 cv
22.0278 92.0083 22.0708 91.5356 22.7227 91.27 cv
23.3745 91.0044 24.6343 90.9448 25.2856 90.6782 cv
25.938 90.4126 25.981 89.9404 25.6338 89.645 cv
25.2856 89.3496 24.5474 89.2314 24.1782 88.936 cv
23.8086 88.6406 23.8086 88.168 24.3301 87.8726 cv
24.8516 87.5771 25.894 87.4585 26.4155 87.3994 cv
26.937 87.3403 26.937 87.3403 26.937 87.3403 cv
false sop
0 0 0 0 cmyk
ef
.5268 lw
1 lc
1 ml
23.6782 95.1392 mo
23.6782 95.1392 23.6782 95.1392 24.1348 95.022 cv
24.5908 94.9038 25.5034 94.6675 25.894 94.3716 cv
26.2856 94.0767 26.1553 93.7212 25.4165 93.397 cv
24.6777 93.0728 23.3306 92.7759 22.6792 92.3931 cv
22.0278 92.0083 22.0708 91.5356 22.7227 91.27 cv
23.3745 91.0044 24.6343 90.9448 25.2856 90.6782 cv
25.938 90.4126 25.981 89.9404 25.6338 89.645 cv
25.2856 89.3496 24.5474 89.2314 24.1782 88.936 cv
23.8086 88.6406 23.8086 88.168 24.3301 87.8726 cv
24.8516 87.5771 25.894 87.4585 26.4155 87.3994 cv
26.937 87.3403 26.937 87.3403 26.937 87.3403 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
46.6089 95.1392 mo
46.6089 95.1392 46.6089 95.1392 47.0649 95.022 cv
47.5215 94.9038 48.4336 94.6675 48.8247 94.3716 cv
49.2153 94.0767 49.0854 93.7212 48.3467 93.397 cv
47.6079 93.0728 46.2612 92.7759 45.6094 92.3931 cv
44.958 92.0083 45.001 91.5356 45.6528 91.27 cv
46.3047 91.0044 47.5645 90.9448 48.2163 90.6782 cv
48.8682 90.4126 48.9116 89.9404 48.564 89.645 cv
48.2163 89.3496 47.478 89.2314 47.1084 88.936 cv
46.7393 88.6406 46.7393 88.168 47.2607 87.8726 cv
47.7817 87.5771 48.8247 87.4585 49.3457 87.3994 cv
49.8672 87.3403 49.8672 87.3403 49.8672 87.3403 cv
false sop
0 0 0 0 cmyk
ef
46.6089 95.1392 mo
46.6089 95.1392 46.6089 95.1392 47.0649 95.022 cv
47.5215 94.9038 48.4336 94.6675 48.8247 94.3716 cv
49.2153 94.0767 49.0854 93.7212 48.3467 93.397 cv
47.6079 93.0728 46.2612 92.7759 45.6094 92.3931 cv
44.958 92.0083 45.001 91.5356 45.6528 91.27 cv
46.3047 91.0044 47.5645 90.9448 48.2163 90.6782 cv
48.8682 90.4126 48.9116 89.9404 48.564 89.645 cv
48.2163 89.3496 47.478 89.2314 47.1084 88.936 cv
46.7393 88.6406 46.7393 88.168 47.2607 87.8726 cv
47.7817 87.5771 48.8247 87.4585 49.3457 87.3994 cv
49.8672 87.3403 49.8672 87.3403 49.8672 87.3403 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginWGFHNK+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendWGFHNK+Helvetica /Encoding getdup 99 /c putdup 101 /e putdup 104 /h putdup 110 /n putdup 116 /t putpop%ADOEndSubsetFont
/WGFHNK+Helvetica*1 [49{/.notdef}rp /one /two /three /four 12{/.notdef}rp /A 16{/.notdef}rp /R /S /T 14{/.notdef}rp /c /.notdef /e 2{/.notdef}rp /h 5{/.notdef}rp /n 5{/.notdef}rp /t 139{/.notdef}rp]WGFHNK+Helvetica nfWGFHNK+Helvetica*1 [5.076 0 0 -5.076 0 0 ]msf27.9531 94.9819 mo(Stench)sh30.04 90.0107 mo
30.6919 89.7451 30.7354 89.2725 30.3877 88.9771 cv
30.04 88.6816 29.3013 88.5635 28.9321 88.2681 cv
28.563 87.9727 28.563 87.5 29.0845 87.2046 cv
29.6055 86.9092 30.6484 86.7905 31.1699 86.7314 cv
31.6909 86.6724 31.6909 86.6724 31.6909 86.6724 cv
false sop
0 0 0 0 cmyk
ef
30.04 90.0107 mo
30.6919 89.7451 30.7354 89.2725 30.3877 88.9771 cv
30.04 88.6816 29.3013 88.5635 28.9321 88.2681 cv
28.563 87.9727 28.563 87.5 29.0845 87.2046 cv
29.6055 86.9092 30.6484 86.7905 31.1699 86.7314 cv
31.6909 86.6724 31.6909 86.6724 31.6909 86.6724 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
34.79 90.1357 mo
35.4419 89.8701 35.4854 89.3975 35.1377 89.1021 cv
34.79 88.8066 34.0513 88.6885 33.6821 88.3931 cv
33.313 88.0977 33.313 87.625 33.8345 87.3296 cv
34.3555 87.0342 35.3984 86.9155 35.9199 86.8564 cv
36.4409 86.7974 36.4409 86.7974 36.4409 86.7974 cv
false sop
0 0 0 0 cmyk
ef
34.79 90.1357 mo
35.4419 89.8701 35.4854 89.3975 35.1377 89.1021 cv
34.79 88.8066 34.0513 88.6885 33.6821 88.3931 cv
33.313 88.0977 33.313 87.625 33.8345 87.3296 cv
34.3555 87.0342 35.3984 86.9155 35.9199 86.8564 cv
36.4409 86.7974 36.4409 86.7974 36.4409 86.7974 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
39.29 90.0107 mo
39.9419 89.7451 39.9854 89.2725 39.6377 88.9771 cv
39.29 88.6816 38.5513 88.5635 38.1821 88.2681 cv
37.813 87.9727 37.813 87.5 38.3345 87.2046 cv
38.8555 86.9092 39.8984 86.7905 40.4199 86.7314 cv
40.9409 86.6724 40.9409 86.6724 40.9409 86.6724 cv
false sop
0 0 0 0 cmyk
ef
39.29 90.0107 mo
39.9419 89.7451 39.9854 89.2725 39.6377 88.9771 cv
39.29 88.6816 38.5513 88.5635 38.1821 88.2681 cv
37.813 87.9727 37.813 87.5 38.3345 87.2046 cv
38.8555 86.9092 39.8984 86.7905 40.4199 86.7314 cv
40.9409 86.6724 40.9409 86.6724 40.9409 86.6724 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
43.29 90.3857 mo
43.9419 90.1201 43.9854 89.6475 43.6377 89.3521 cv
43.29 89.0566 42.5513 88.9385 42.1821 88.6431 cv
41.813 88.3477 41.813 87.875 42.3345 87.5796 cv
42.8555 87.2842 43.8984 87.1655 44.4199 87.1064 cv
44.9409 87.0474 44.9409 87.0474 44.9409 87.0474 cv
false sop
0 0 0 0 cmyk
ef
43.29 90.3857 mo
43.9419 90.1201 43.9854 89.6475 43.6377 89.3521 cv
43.29 89.0566 42.5513 88.9385 42.1821 88.6431 cv
41.813 88.3477 41.813 87.875 42.3345 87.5796 cv
42.8555 87.2842 43.8984 87.1655 44.4199 87.1064 cv
44.9409 87.0474 44.9409 87.0474 44.9409 87.0474 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
23.6782 22.3931 mo
23.6782 22.3931 23.6782 22.3931 24.1348 22.2759 cv
24.5908 22.1577 25.5034 21.9214 25.894 21.6255 cv
26.2856 21.3306 26.1553 20.9751 25.4165 20.6509 cv
24.6777 20.3267 23.3306 20.0298 22.6792 19.647 cv
22.0278 19.2622 22.0708 18.7896 22.7227 18.5239 cv
23.3745 18.2583 24.6343 18.1987 25.2856 17.9321 cv
25.938 17.6665 25.981 17.1943 25.6338 16.8989 cv
25.2856 16.6035 24.5474 16.4854 24.1782 16.1899 cv
23.8086 15.8945 23.8086 15.4219 24.3301 15.1265 cv
24.8516 14.8311 25.894 14.7124 26.4155 14.6533 cv
26.937 14.5942 26.937 14.5942 26.937 14.5942 cv
false sop
0 0 0 0 cmyk
ef
23.6782 22.3931 mo
23.6782 22.3931 23.6782 22.3931 24.1348 22.2759 cv
24.5908 22.1577 25.5034 21.9214 25.894 21.6255 cv
26.2856 21.3306 26.1553 20.9751 25.4165 20.6509 cv
24.6777 20.3267 23.3306 20.0298 22.6792 19.647 cv
22.0278 19.2622 22.0708 18.7896 22.7227 18.5239 cv
23.3745 18.2583 24.6343 18.1987 25.2856 17.9321 cv
25.938 17.6665 25.981 17.1943 25.6338 16.8989 cv
25.2856 16.6035 24.5474 16.4854 24.1782 16.1899 cv
23.8086 15.8945 23.8086 15.4219 24.3301 15.1265 cv
24.8516 14.8311 25.894 14.7124 26.4155 14.6533 cv
26.937 14.5942 26.937 14.5942 26.937 14.5942 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
46.6089 22.3931 mo
46.6089 22.3931 46.6089 22.3931 47.0649 22.2759 cv
47.5215 22.1577 48.4336 21.9214 48.8247 21.6255 cv
49.2153 21.3306 49.0854 20.9751 48.3467 20.6509 cv
47.6079 20.3267 46.2612 20.0298 45.6094 19.647 cv
44.958 19.2622 45.001 18.7896 45.6528 18.5239 cv
46.3047 18.2583 47.5645 18.1987 48.2163 17.9321 cv
48.8682 17.6665 48.9116 17.1943 48.564 16.8989 cv
48.2163 16.6035 47.478 16.4854 47.1084 16.1899 cv
46.7393 15.8945 46.7393 15.4219 47.2607 15.1265 cv
47.7817 14.8311 48.8247 14.7124 49.3457 14.6533 cv
49.8672 14.5942 49.8672 14.5942 49.8672 14.5942 cv
false sop
0 0 0 0 cmyk
ef
46.6089 22.3931 mo
46.6089 22.3931 46.6089 22.3931 47.0649 22.2759 cv
47.5215 22.1577 48.4336 21.9214 48.8247 21.6255 cv
49.2153 21.3306 49.0854 20.9751 48.3467 20.6509 cv
47.6079 20.3267 46.2612 20.0298 45.6094 19.647 cv
44.958 19.2622 45.001 18.7896 45.6528 18.5239 cv
46.3047 18.2583 47.5645 18.1987 48.2163 17.9321 cv
48.8682 17.6665 48.9116 17.1943 48.564 16.8989 cv
48.2163 16.6035 47.478 16.4854 47.1084 16.1899 cv
46.7393 15.8945 46.7393 15.4219 47.2607 15.1265 cv
47.7817 14.8311 48.8247 14.7124 49.3457 14.6533 cv
49.8672 14.5942 49.8672 14.5942 49.8672 14.5942 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNK+Helvetica*1 [5.076 0 0 -5.076 0 0 ]msf27.9531 22.2358 mo(Stench)sh30.04 17.2646 mo
30.6919 16.999 30.7354 16.5264 30.3877 16.231 cv
30.04 15.9355 29.3013 15.8174 28.9321 15.522 cv
28.563 15.2266 28.563 14.7539 29.0845 14.4585 cv
29.6055 14.1631 30.6484 14.0444 31.1699 13.9854 cv
31.6909 13.9263 31.6909 13.9263 31.6909 13.9263 cv
false sop
0 0 0 0 cmyk
ef
30.04 17.2646 mo
30.6919 16.999 30.7354 16.5264 30.3877 16.231 cv
30.04 15.9355 29.3013 15.8174 28.9321 15.522 cv
28.563 15.2266 28.563 14.7539 29.0845 14.4585 cv
29.6055 14.1631 30.6484 14.0444 31.1699 13.9854 cv
31.6909 13.9263 31.6909 13.9263 31.6909 13.9263 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
34.79 17.3896 mo
35.4419 17.124 35.4854 16.6514 35.1377 16.356 cv
34.79 16.0605 34.0513 15.9424 33.6821 15.647 cv
33.313 15.3516 33.313 14.8789 33.8345 14.5835 cv
34.3555 14.2881 35.3984 14.1694 35.9199 14.1104 cv
36.4409 14.0513 36.4409 14.0513 36.4409 14.0513 cv
false sop
0 0 0 0 cmyk
ef
34.79 17.3896 mo
35.4419 17.124 35.4854 16.6514 35.1377 16.356 cv
34.79 16.0605 34.0513 15.9424 33.6821 15.647 cv
33.313 15.3516 33.313 14.8789 33.8345 14.5835 cv
34.3555 14.2881 35.3984 14.1694 35.9199 14.1104 cv
36.4409 14.0513 36.4409 14.0513 36.4409 14.0513 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
39.29 17.2646 mo
39.9419 16.999 39.9854 16.5264 39.6377 16.231 cv
39.29 15.9355 38.5513 15.8174 38.1821 15.522 cv
37.813 15.2266 37.813 14.7539 38.3345 14.4585 cv
38.8555 14.1631 39.8984 14.0444 40.4199 13.9854 cv
40.9409 13.9263 40.9409 13.9263 40.9409 13.9263 cv
false sop
0 0 0 0 cmyk
ef
39.29 17.2646 mo
39.9419 16.999 39.9854 16.5264 39.6377 16.231 cv
39.29 15.9355 38.5513 15.8174 38.1821 15.522 cv
37.813 15.2266 37.813 14.7539 38.3345 14.4585 cv
38.8555 14.1631 39.8984 14.0444 40.4199 13.9854 cv
40.9409 13.9263 40.9409 13.9263 40.9409 13.9263 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
43.29 17.6396 mo
43.9419 17.374 43.9854 16.9014 43.6377 16.606 cv
43.29 16.3105 42.5513 16.1924 42.1821 15.897 cv
41.813 15.6016 41.813 15.1289 42.3345 14.8335 cv
42.8555 14.5381 43.8984 14.4194 44.4199 14.3604 cv
44.9409 14.3013 44.9409 14.3013 44.9409 14.3013 cv
false sop
0 0 0 0 cmyk
ef
43.29 17.6396 mo
43.9419 17.374 43.9854 16.9014 43.6377 16.606 cv
43.29 16.3105 42.5513 16.1924 42.1821 15.897 cv
41.813 15.6016 41.813 15.1289 42.3345 14.8335 cv
42.8555 14.5381 43.8984 14.4194 44.4199 14.3604 cv
44.9409 14.3013 44.9409 14.3013 44.9409 14.3013 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
130.165 125.065 mo
130.165 125.065 130.165 125.065 131.643 124.079 cv
133.123 123.091 136.083 121.119 139.644 121.163 cv
143.206 121.207 147.371 123.266 150.976 123.596 cv
154.583 123.924 157.628 122.522 159.152 121.821 cv
160.675 121.119 160.675 121.119 160.675 121.119 cv
false sop
0 0 0 0 cmyk
ef
0 lc
10 ml
130.165 125.065 mo
130.165 125.065 130.165 125.065 131.643 124.079 cv
133.123 123.091 136.083 121.119 139.644 121.163 cv
143.206 121.207 147.371 123.266 150.976 123.596 cv
154.583 123.924 157.628 122.522 159.152 121.821 cv
160.675 121.119 160.675 121.119 160.675 121.119 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
158.016 126.375 mo
159.509 125.973 160.724 125.414 161.522 125.046 cv
163.045 124.344 163.045 124.344 163.045 124.344 cv
false sop
0 0 0 0 cmyk
ef
158.016 126.375 mo
159.509 125.973 160.724 125.414 161.522 125.046 cv
163.045 124.344 163.045 124.344 163.045 124.344 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
131.614 127.107 mo
131.614 127.107 131.614 127.107 133.247 126.318 cv
133.75 126.075 135.055 125.524 135.676 125.264 cv
false sop
0 0 0 0 cmyk
ef
131.614 127.107 mo
131.614 127.107 131.614 127.107 133.247 126.318 cv
133.75 126.075 135.055 125.524 135.676 125.264 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
131.284 132.111 mo
131.284 132.111 131.284 132.111 132.325 131.223 cv
133.366 130.335 135.448 128.56 138.573 128.702 cv
141.695 128.844 145.859 130.905 149.98 131.179 cv
154.102 131.454 158.178 129.941 160.216 129.184 cv
162.255 128.428 162.255 128.428 162.255 128.428 cv
false sop
0 0 0 0 cmyk
ef
131.284 132.111 mo
131.284 132.111 131.284 132.111 132.325 131.223 cv
133.366 130.335 135.448 128.56 138.573 128.702 cv
141.695 128.844 145.859 130.905 149.98 131.179 cv
154.102 131.454 158.178 129.941 160.216 129.184 cv
162.255 128.428 162.255 128.428 162.255 128.428 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Helvetica-Oblique Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Oblique def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 66 /B putdup 101 /e putdup 114 /r putdup 122 /z putdef/FontBBox {-933 -481 1571 1138} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/space <1C60D8A8C9B854D00D> |-/B <1C60D8A8C9B64EDFF440682FFC01E299D663D9838F44C423AD31E8830E9B9DFDE2E33A579860EF902CD85C732710640334D7DD7A61833502698CD633CFCF236E6611183F914A23DB4AF7C056C50BB9119EB3F580A141FECB6935DF101C496E0FE8BC574C72D0F9770274C061973096AA479C174E45A71AEC8E91A4440624AB0F3F1C20F0F0EEE07F3A7460A6343B18B9F8506FC5223511DDDAB48E7FBD77> |-/e <1C60D8A8C9B7EF3224F670FA38A1BB4E90223B6A6298634446E63C8919CE3C115A06C150CF8C57A88CFAE23A2E8EDF85D74BC61BAB37C5EDB8BF8F7018E84799BDCFBD9072B11894C7F22DBF3C8A6B3DDD8F6C2990E6156A4BC103E12DB037F0C6BE9E4B1CFC9B0EF894C6A7F8ADB8204808E3684247344FE20EB6AF7E77BF7290E1451C84B79B45526E2AA9CB51A3FAFF2A0EFC6CCD416A60FB5BFFFCED1AEE1809A0CC6AC7> |-/r <1C60D8A8C9B81F2C037408F88268C7B7AD264FF61135D7DD3ACD7F6A3059E7DE5D3D2DFE05D93724B81C9BC1F29B95C6A90752351CC39FACAFB7B03C3471A3587EF6A0FA3DCCBF7C02041A2BDEE7F4A83AFF> |-/z <1C60D8A8C9B7A73DEABE546362E9B9631374FC6ED50195A5D22E38F5A68979D3C51AF3AB8333B3E50BECF8> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHNL+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut/WGFHNL+Helvetica-Oblique*1 [32{/.notdef}rp /space 33{/.notdef}rp /B 34{/.notdef}rp /e 12{/.notdef}rp /r 7{/.notdef}rp /z 133{/.notdef}rp]WGFHNL+Helvetica-Oblique nfWGFHNL+Helvetica-Oblique*1 [5.58229 -.50957 -.50957 -5.58229 0 0 ]msf136.903 126.749 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.54845 .797737 .797737 -5.54845 0 0 ]msf140.403 126.535 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.42901 1.39551 1.39551 -5.42901 0 0 ]msf142.144 126.769 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38879 1.54356 1.54356 -5.38879 0 0 ]msf145.122 127.568 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.50986 1.03106 1.03106 -5.50986 0 0 ]msf148.349 128.516 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.58115 -.52194 -.52194 -5.58115 0 0 ]msf151.825 129.11 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.37728 -1.58319 -1.58319 -5.37728 0 0 ]msf155.418 128.633 mo( )sh.5 lw
1 lc
1 ml
72.8003 62.229 mo
72.9121 58.7642 li
@
79.9683 71.5293 mo
77.5186 65.3794 li
62.7681 65.3794 li
60.3184 71.5293 li
79.9683 71.5293 li
cp
false sop
0 0 0 0 cmyk
ef
.5268 lw
0 lc
10 ml
79.9683 71.5293 mo
77.5186 65.3794 li
62.7681 65.3794 li
60.3184 71.5293 li
79.9683 71.5293 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
1 lj
62.7681 65.3794 mo
67.6685 64.1792 li
82.4185 64.1792 li
77.5186 65.3794 li
@
.5 lw
1 lc
0 lj
1 ml
78.4229 59.5791 mo
77.9229 62.6792 li
85.4224 60.7793 mo
83.4229 63.5791 li
88.5225 65.6792 mo
85.4229 67.2793 li
67.5181 59.5791 mo
68.0181 62.6787 li
61.7183 61.0791 mo
63.7183 63.8794 li
57.418 65.6792 mo
60.5181 67.2793 li
@
82.4956 64.1777 mo
84.9077 70.3257 li
79.9658 71.5322 li
false sop
0 0 0 0 cmyk
ef
.5268 lw
0 lc
10 ml
82.4956 64.1777 mo
84.9077 70.3257 li
79.9658 71.5322 li
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginWGFHNK+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B6FF86FAE761919412E75DCB56A17E0B647886E974BE0CD2DDC55247C89172C0F24B317CED95A1845F91927547B6F787BE4A81523EC6B90B7AF23F6F8A8BDDC51D0AA285D7E086AD8E028BD7D16A89F17742D556071D7D56166C6C8A71E0DFC3DA3B4DBE27EC4E6BE207A1EAF47A71BE409951D1C5060119CDD071AF7E9076F56846B6D62E52B2CB6390635FC230> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-systemdict /gcheck known {setglobal} if end {end} ifendWGFHNK+Helvetica /Encoding getdup 71 /G putdup 100 /d putdup 108 /l putdup 111 /o putpop%ADOEndSubsetFont
/WGFHNK+Helvetica*1 [49{/.notdef}rp /one /two /three /four 12{/.notdef}rp /A 5{/.notdef}rp /G 10{/.notdef}rp /R /S /T 14{/.notdef}rp /c /d /e 2{/.notdef}rp /h 3{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 139{/.notdef}rp]WGFHNK+Helvetica nfWGFHNK+Helvetica*1 [5.076 0 0 -5.076 0 0 ]msf64.9512 70.4819 mo(Gold)sh132.139 14.8369 mo
132.139 12.708 132.139 11.2886 132.848 9.86914 cv
133.558 8.4502 134.977 7.03076 136.397 6.32129 cv
137.816 5.61182 139.235 5.61182 141.594 5.61182 cv
143.953 5.61182 147.252 5.61182 149.611 5.61182 cv
151.97 5.61182 153.389 5.61182 154.79 6.32129 cv
156.189 7.03076 157.57 8.4502 158.261 9.86914 cv
158.951 11.2886 158.951 12.708 158.951 14.8369 cv
158.951 16.9658 158.951 19.8042 158.951 21.9331 cv
158.951 24.062 158.951 25.4814 158.261 26.9004 cv
157.57 28.3198 156.189 29.7393 154.79 30.4487 cv
153.389 31.1582 151.97 31.1582 149.611 31.1582 cv
147.252 31.1582 143.953 31.1582 141.594 31.1582 cv
139.235 31.1582 137.816 31.1582 136.397 30.4487 cv
134.977 29.7393 133.558 28.3198 132.848 26.9004 cv
132.139 25.4814 132.139 24.062 132.139 21.9331 cv
132.139 19.8042 132.139 16.9658 132.139 14.8369 cv
ef
132.139 14.8369 mo
132.139 12.708 132.139 11.2886 132.848 9.86914 cv
133.558 8.4502 134.977 7.03076 136.397 6.32129 cv
137.816 5.61182 139.235 5.61182 141.594 5.61182 cv
143.953 5.61182 147.252 5.61182 149.611 5.61182 cv
151.97 5.61182 153.389 5.61182 154.79 6.32129 cv
156.189 7.03076 157.57 8.4502 158.261 9.86914 cv
158.951 11.2886 158.951 12.708 158.951 14.8369 cv
158.951 16.9658 158.951 19.8042 158.951 21.9331 cv
158.951 24.062 158.951 25.4814 158.261 26.9004 cv
157.57 28.3198 156.189 29.7393 154.79 30.4487 cv
153.389 31.1582 151.97 31.1582 149.611 31.1582 cv
147.252 31.1582 143.953 31.1582 141.594 31.1582 cv
139.235 31.1582 137.816 31.1582 136.397 30.4487 cv
134.977 29.7393 133.558 28.3198 132.848 26.9004 cv
132.139 25.4814 132.139 24.062 132.139 21.9331 cv
132.139 19.8042 132.139 16.9658 132.139 14.8369 cv
@
false sop
0 0 0 0 cmyk
WGFHNJ+Helvetica-Bold*1 [8.2013 0 0 -8.2013 0 0 ]msf139.394 20.8657 mo(PIT)sh95.3081 124.336 mo
95.3081 122.208 95.3081 120.789 96.0176 119.37 cv
96.7271 117.95 98.146 116.531 99.5659 115.821 cv
100.985 115.112 102.404 115.112 104.763 115.112 cv
107.122 115.112 110.421 115.112 112.78 115.112 cv
115.139 115.112 116.558 115.112 117.958 115.821 cv
119.358 116.531 120.739 117.95 121.43 119.37 cv
122.12 120.789 122.12 122.208 122.12 124.336 cv
122.12 126.465 122.12 129.304 122.12 131.433 cv
122.12 133.562 122.12 134.981 121.43 136.401 cv
120.739 137.82 119.358 139.239 117.958 139.949 cv
116.558 140.659 115.139 140.659 112.78 140.659 cv
110.421 140.659 107.122 140.659 104.763 140.659 cv
102.404 140.659 100.985 140.659 99.5659 139.949 cv
98.146 139.239 96.7271 137.82 96.0176 136.401 cv
95.3081 134.981 95.3081 133.562 95.3081 131.433 cv
95.3081 129.304 95.3081 126.465 95.3081 124.336 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
95.3081 124.336 mo
95.3081 122.208 95.3081 120.789 96.0176 119.37 cv
96.7271 117.95 98.146 116.531 99.5659 115.821 cv
100.985 115.112 102.404 115.112 104.763 115.112 cv
107.122 115.112 110.421 115.112 112.78 115.112 cv
115.139 115.112 116.558 115.112 117.958 115.821 cv
119.358 116.531 120.739 117.95 121.43 119.37 cv
122.12 120.789 122.12 122.208 122.12 124.336 cv
122.12 126.465 122.12 129.304 122.12 131.433 cv
122.12 133.562 122.12 134.981 121.43 136.401 cv
120.739 137.82 119.358 139.239 117.958 139.949 cv
116.558 140.659 115.139 140.659 112.78 140.659 cv
110.421 140.659 107.122 140.659 104.763 140.659 cv
102.404 140.659 100.985 140.659 99.5659 139.949 cv
98.146 139.239 96.7271 137.82 96.0176 136.401 cv
95.3081 134.981 95.3081 133.562 95.3081 131.433 cv
95.3081 129.304 95.3081 126.465 95.3081 124.336 cv
@
false sop
0 0 0 0 cmyk
WGFHNJ+Helvetica-Bold*1 [8.2013 0 0 -8.2013 0 0 ]msf102.563 130.366 mo(PIT)sh93.3335 88.8145 mo
93.3335 88.8145 93.3335 88.8145 94.8125 87.8281 cv
96.2915 86.8413 99.251 84.8687 102.813 84.9131 cv
106.375 84.9565 110.54 87.0166 114.145 87.3457 cv
117.751 87.6748 120.797 86.272 122.321 85.5703 cv
123.844 84.8687 123.844 84.8687 123.844 84.8687 cv
ef
93.3335 88.8145 mo
93.3335 88.8145 93.3335 88.8145 94.8125 87.8281 cv
96.2915 86.8413 99.251 84.8687 102.813 84.9131 cv
106.375 84.9565 110.54 87.0166 114.145 87.3457 cv
117.751 87.6748 120.797 86.272 122.321 85.5703 cv
123.844 84.8687 123.844 84.8687 123.844 84.8687 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
121.185 90.1255 mo
122.678 89.7231 123.893 89.1636 124.691 88.7964 cv
126.214 88.0947 126.214 88.0947 126.214 88.0947 cv
false sop
0 0 0 0 cmyk
ef
121.185 90.1255 mo
122.678 89.7231 123.893 89.1636 124.691 88.7964 cv
126.214 88.0947 126.214 88.0947 126.214 88.0947 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
94.7822 90.8569 mo
94.7822 90.8569 94.7822 90.8569 96.4155 90.0679 cv
96.9199 89.8247 98.2241 89.2744 98.8452 89.0142 cv
false sop
0 0 0 0 cmyk
ef
94.7822 90.8569 mo
94.7822 90.8569 94.7822 90.8569 96.4155 90.0679 cv
96.9199 89.8247 98.2241 89.2744 98.8452 89.0142 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
94.4526 95.8608 mo
94.4526 95.8608 94.4526 95.8608 95.4937 94.9731 cv
96.5347 94.0854 98.6167 92.3101 101.741 92.4517 cv
104.864 92.5942 109.028 94.6548 113.149 94.9292 cv
117.271 95.2036 121.347 93.6909 123.385 92.9341 cv
125.424 92.1782 125.424 92.1782 125.424 92.1782 cv
false sop
0 0 0 0 cmyk
ef
94.4526 95.8608 mo
94.4526 95.8608 94.4526 95.8608 95.4937 94.9731 cv
96.5347 94.0854 98.6167 92.3101 101.741 92.4517 cv
104.864 92.5942 109.028 94.6548 113.149 94.9292 cv
117.271 95.2036 121.347 93.6909 123.385 92.9341 cv
125.424 92.1782 125.424 92.1782 125.424 92.1782 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNL+Helvetica-Oblique*1 [5.58229 -.50954 -.50954 -5.58229 0 0 ]msf100.071 90.4976 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.54868 .796074 .796074 -5.54868 0 0 ]msf103.549 90.2827 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.42907 1.3953 1.3953 -5.42907 0 0 ]msf105.313 90.519 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38878 1.54361 1.54361 -5.38878 0 0 ]msf108.291 91.3179 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.50978 1.03148 1.03148 -5.50978 0 0 ]msf111.517 92.2661 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.58121 -.521313 -.521313 -5.58121 0 0 ]msf114.995 92.8589 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.37739 -1.5828 -1.5828 -5.37739 0 0 ]msf118.587 92.3823 mo( )sh130.165 53.8145 mo
130.165 53.8145 130.165 53.8145 131.643 52.8281 cv
133.123 51.8413 136.083 49.8687 139.644 49.9131 cv
143.206 49.9565 147.371 52.0166 150.976 52.3457 cv
154.583 52.6748 157.628 51.272 159.152 50.5703 cv
160.675 49.8687 160.675 49.8687 160.675 49.8687 cv
false sop
0 0 0 0 cmyk
ef
130.165 53.8145 mo
130.165 53.8145 130.165 53.8145 131.643 52.8281 cv
133.123 51.8413 136.083 49.8687 139.644 49.9131 cv
143.206 49.9565 147.371 52.0166 150.976 52.3457 cv
154.583 52.6748 157.628 51.272 159.152 50.5703 cv
160.675 49.8687 160.675 49.8687 160.675 49.8687 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
158.016 55.1255 mo
159.509 54.7227 160.724 54.1636 161.522 53.7964 cv
163.045 53.0947 163.045 53.0947 163.045 53.0947 cv
false sop
0 0 0 0 cmyk
ef
158.016 55.1255 mo
159.509 54.7227 160.724 54.1636 161.522 53.7964 cv
163.045 53.0947 163.045 53.0947 163.045 53.0947 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
131.614 55.8569 mo
131.614 55.8569 131.614 55.8569 133.247 55.0679 cv
133.75 54.8242 135.055 54.2744 135.676 54.0142 cv
false sop
0 0 0 0 cmyk
ef
131.614 55.8569 mo
131.614 55.8569 131.614 55.8569 133.247 55.0679 cv
133.75 54.8242 135.055 54.2744 135.676 54.0142 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
131.284 60.8608 mo
131.284 60.8608 131.284 60.8608 132.325 59.9727 cv
133.366 59.0854 135.448 57.3101 138.573 57.4521 cv
141.695 57.5947 145.859 59.6553 149.98 59.9292 cv
154.102 60.2031 158.178 58.6909 160.216 57.9346 cv
162.255 57.1782 162.255 57.1782 162.255 57.1782 cv
false sop
0 0 0 0 cmyk
ef
131.284 60.8608 mo
131.284 60.8608 131.284 60.8608 132.325 59.9727 cv
133.366 59.0854 135.448 57.3101 138.573 57.4521 cv
141.695 57.5947 145.859 59.6553 149.98 59.9292 cv
154.102 60.2031 158.178 58.6909 160.216 57.9346 cv
162.255 57.1782 162.255 57.1782 162.255 57.1782 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNL+Helvetica-Oblique*1 [5.58237 -.508673 -.508673 -5.58237 0 0 ]msf136.903 55.4976 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.54838 .798175 .798175 -5.54838 0 0 ]msf140.403 55.2856 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.42916 1.39493 1.39493 -5.42916 0 0 ]msf142.144 55.519 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38889 1.54321 1.54321 -5.38889 0 0 ]msf145.122 56.3174 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.51009 1.02982 1.02982 -5.51009 0 0 ]msf148.348 57.2661 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.58125 -.520861 -.520861 -5.58125 0 0 ]msf151.826 57.8579 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.37742 -1.58273 -1.58273 -5.37742 0 0 ]msf155.418 57.3828 mo( )sh93.3335 17.0645 mo
93.3335 17.0645 93.3335 17.0645 94.8125 16.0781 cv
96.2915 15.0913 99.251 13.1187 102.813 13.1631 cv
106.375 13.2065 110.54 15.2666 114.145 15.5957 cv
117.751 15.9248 120.797 14.522 122.321 13.8203 cv
123.844 13.1187 123.844 13.1187 123.844 13.1187 cv
false sop
0 0 0 0 cmyk
ef
93.3335 17.0645 mo
93.3335 17.0645 93.3335 17.0645 94.8125 16.0781 cv
96.2915 15.0913 99.251 13.1187 102.813 13.1631 cv
106.375 13.2065 110.54 15.2666 114.145 15.5957 cv
117.751 15.9248 120.797 14.522 122.321 13.8203 cv
123.844 13.1187 123.844 13.1187 123.844 13.1187 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
121.185 18.3755 mo
122.678 17.9727 123.893 17.4136 124.691 17.0464 cv
126.214 16.3447 126.214 16.3447 126.214 16.3447 cv
false sop
0 0 0 0 cmyk
ef
121.185 18.3755 mo
122.678 17.9727 123.893 17.4136 124.691 17.0464 cv
126.214 16.3447 126.214 16.3447 126.214 16.3447 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
94.7822 19.1069 mo
94.7822 19.1069 94.7822 19.1069 96.4155 18.3179 cv
96.9199 18.0742 98.2241 17.5244 98.8452 17.2642 cv
false sop
0 0 0 0 cmyk
ef
94.7822 19.1069 mo
94.7822 19.1069 94.7822 19.1069 96.4155 18.3179 cv
96.9199 18.0742 98.2241 17.5244 98.8452 17.2642 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
94.4526 24.1108 mo
94.4526 24.1108 94.4526 24.1108 95.4937 23.2227 cv
96.5347 22.3354 98.6167 20.5601 101.741 20.7021 cv
104.864 20.8447 109.028 22.9053 113.149 23.1792 cv
117.271 23.4531 121.347 21.9409 123.385 21.1846 cv
125.424 20.4282 125.424 20.4282 125.424 20.4282 cv
false sop
0 0 0 0 cmyk
ef
94.4526 24.1108 mo
94.4526 24.1108 94.4526 24.1108 95.4937 23.2227 cv
96.5347 22.3354 98.6167 20.5601 101.741 20.7021 cv
104.864 20.8447 109.028 22.9053 113.149 23.1792 cv
117.271 23.4531 121.347 21.9409 123.385 21.1846 cv
125.424 20.4282 125.424 20.4282 125.424 20.4282 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNL+Helvetica-Oblique*1 [5.58233 -.509187 -.509187 -5.58233 0 0 ]msf100.072 18.7476 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.54872 .795835 .795835 -5.54872 0 0 ]msf103.572 18.5366 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.4292 1.39479 1.39479 -5.4292 0 0 ]msf105.313 18.7695 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38888 1.54325 1.54325 -5.38888 0 0 ]msf108.291 19.5674 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.51002 1.03019 1.03019 -5.51002 0 0 ]msf111.516 20.5156 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.5813 -.520307 -.520307 -5.5813 0 0 ]msf114.995 21.1079 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.37751 -1.58239 -1.58239 -5.37751 0 0 ]msf118.587 20.6328 mo( )sh55.7017 125.065 mo
55.7017 125.065 55.7017 125.065 57.1807 124.079 cv
58.6597 123.091 61.6191 121.119 65.1812 121.163 cv
68.7427 121.207 72.9077 123.266 76.5132 123.596 cv
80.1196 123.924 83.1655 122.522 84.689 121.821 cv
86.2124 121.119 86.2124 121.119 86.2124 121.119 cv
false sop
0 0 0 0 cmyk
ef
55.7017 125.065 mo
55.7017 125.065 55.7017 125.065 57.1807 124.079 cv
58.6597 123.091 61.6191 121.119 65.1812 121.163 cv
68.7427 121.207 72.9077 123.266 76.5132 123.596 cv
80.1196 123.924 83.1655 122.522 84.689 121.821 cv
86.2124 121.119 86.2124 121.119 86.2124 121.119 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
83.5532 126.375 mo
85.0464 125.973 86.2612 125.414 87.0591 125.046 cv
88.5825 124.344 88.5825 124.344 88.5825 124.344 cv
false sop
0 0 0 0 cmyk
ef
83.5532 126.375 mo
85.0464 125.973 86.2612 125.414 87.0591 125.046 cv
88.5825 124.344 88.5825 124.344 88.5825 124.344 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
57.1504 127.107 mo
57.1504 127.107 57.1504 127.107 58.7837 126.318 cv
59.2881 126.075 60.5923 125.524 61.2134 125.264 cv
false sop
0 0 0 0 cmyk
ef
57.1504 127.107 mo
57.1504 127.107 57.1504 127.107 58.7837 126.318 cv
59.2881 126.075 60.5923 125.524 61.2134 125.264 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
56.8208 132.111 mo
56.8208 132.111 56.8208 132.111 57.8618 131.223 cv
58.9028 130.335 60.9849 128.56 64.1094 128.702 cv
67.2319 128.844 71.396 130.905 75.5171 131.179 cv
79.6392 131.454 83.7153 129.941 85.7534 129.184 cv
87.7925 128.428 87.7925 128.428 87.7925 128.428 cv
false sop
0 0 0 0 cmyk
ef
56.8208 132.111 mo
56.8208 132.111 56.8208 132.111 57.8618 131.223 cv
58.9028 130.335 60.9849 128.56 64.1094 128.702 cv
67.2319 128.844 71.396 130.905 75.5171 131.179 cv
79.6392 131.454 83.7153 129.941 85.7534 129.184 cv
87.7925 128.428 87.7925 128.428 87.7925 128.428 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNL+Helvetica-Oblique*1 [5.58224 -.510095 -.510095 -5.58224 0 0 ]msf62.439 126.749 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.54851 .797322 .797322 -5.54851 0 0 ]msf65.939 126.535 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.42911 1.39515 1.39515 -5.42911 0 0 ]msf67.6812 126.769 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38877 1.54364 1.54364 -5.38877 0 0 ]msf70.6597 127.568 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.5098 1.0314 1.0314 -5.5098 0 0 ]msf73.8848 128.516 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.5812 -.521374 -.521374 -5.5812 0 0 ]msf77.3623 129.11 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.3774 -1.58279 -1.58279 -5.3774 0 0 ]msf80.9556 128.633 mo( )sh57.5898 42.3145 mo
57.5898 42.3145 57.5898 42.3145 59.0688 41.3281 cv
60.5479 40.3413 63.5073 38.3687 67.0693 38.4131 cv
70.6309 38.4565 74.7959 40.5166 78.4014 40.8457 cv
82.0078 41.1748 85.0537 39.772 86.5771 39.0703 cv
88.1006 38.3687 88.1006 38.3687 88.1006 38.3687 cv
false sop
0 0 0 0 cmyk
ef
57.5898 42.3145 mo
57.5898 42.3145 57.5898 42.3145 59.0688 41.3281 cv
60.5479 40.3413 63.5073 38.3687 67.0693 38.4131 cv
70.6309 38.4565 74.7959 40.5166 78.4014 40.8457 cv
82.0078 41.1748 85.0537 39.772 86.5771 39.0703 cv
88.1006 38.3687 88.1006 38.3687 88.1006 38.3687 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
85.4414 43.6255 mo
86.9346 43.2231 88.1494 42.6636 88.9473 42.2964 cv
90.4707 41.5947 90.4707 41.5947 90.4707 41.5947 cv
false sop
0 0 0 0 cmyk
ef
85.4414 43.6255 mo
86.9346 43.2231 88.1494 42.6636 88.9473 42.2964 cv
90.4707 41.5947 90.4707 41.5947 90.4707 41.5947 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
59.0386 44.3569 mo
59.0386 44.3569 59.0386 44.3569 60.6719 43.5679 cv
61.1763 43.3247 62.4805 42.7744 63.1016 42.5142 cv
false sop
0 0 0 0 cmyk
ef
59.0386 44.3569 mo
59.0386 44.3569 59.0386 44.3569 60.6719 43.5679 cv
61.1763 43.3247 62.4805 42.7744 63.1016 42.5142 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
58.709 49.3608 mo
58.709 49.3608 58.709 49.3608 59.75 48.4731 cv
60.791 47.5854 62.873 45.8101 65.9976 45.9517 cv
69.1201 46.0942 73.2842 48.1548 77.4053 48.4292 cv
81.5273 48.7036 85.6035 47.1909 87.6416 46.4341 cv
89.6807 45.6782 89.6807 45.6782 89.6807 45.6782 cv
false sop
0 0 0 0 cmyk
ef
58.709 49.3608 mo
58.709 49.3608 58.709 49.3608 59.75 48.4731 cv
60.791 47.5854 62.873 45.8101 65.9976 45.9517 cv
69.1201 46.0942 73.2842 48.1548 77.4053 48.4292 cv
81.5273 48.7036 85.6035 47.1909 87.6416 46.4341 cv
89.6807 45.6782 89.6807 45.6782 89.6807 45.6782 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNL+Helvetica-Oblique*1 [5.58227 -.509804 -.509804 -5.58227 0 0 ]msf64.3071 43.9995 mo(B)shWGFHNL+Helvetica-Oblique*1 [5.5484 .798088 .798088 -5.5484 0 0 ]msf67.8271 43.7852 mo(r)shWGFHNL+Helvetica-Oblique*1 [5.42919 1.39482 1.39482 -5.42919 0 0 ]msf69.5693 44.019 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.38895 1.54301 1.54301 -5.38895 0 0 ]msf72.5479 44.8169 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.50972 1.03181 1.03181 -5.50972 0 0 ]msf75.7729 45.7656 mo(z)shWGFHNL+Helvetica-Oblique*1 [5.58128 -.52047 -.52047 -5.58128 0 0 ]msf79.2505 46.3579 mo(e)shWGFHNL+Helvetica-Oblique*1 [5.37754 -1.58229 -1.58229 -5.37754 0 0 ]msf82.8438 45.8828 mo( )sh60.375 58.0215 mo
60.375 58.0215 60.375 58.0215 60.8315 57.9043 cv
61.2876 57.7861 62.2002 57.5498 62.5908 57.2539 cv
62.9824 56.959 62.8521 56.6035 62.1133 56.2793 cv
61.3745 55.9551 60.0273 55.6582 59.376 55.2754 cv
58.7246 54.8906 58.7676 54.418 59.4194 54.1523 cv
60.0713 53.8867 61.3311 53.8271 61.9824 53.5605 cv
62.6348 53.2949 62.6777 52.8228 62.3306 52.5273 cv
61.9824 52.2319 61.2441 52.1138 60.875 51.8184 cv
60.5054 51.5229 60.5054 51.0503 61.0269 50.7549 cv
61.5483 50.4595 62.5908 50.3408 63.1123 50.2817 cv
63.6338 50.2227 63.6338 50.2227 63.6338 50.2227 cv
false sop
0 0 0 0 cmyk
ef
1 lc
1 ml
60.375 58.0215 mo
60.375 58.0215 60.375 58.0215 60.8315 57.9043 cv
61.2876 57.7861 62.2002 57.5498 62.5908 57.2539 cv
62.9824 56.959 62.8521 56.6035 62.1133 56.2793 cv
61.3745 55.9551 60.0273 55.6582 59.376 55.2754 cv
58.7246 54.8906 58.7676 54.418 59.4194 54.1523 cv
60.0713 53.8867 61.3311 53.8271 61.9824 53.5605 cv
62.6348 53.2949 62.6777 52.8228 62.3306 52.5273 cv
61.9824 52.2319 61.2441 52.1138 60.875 51.8184 cv
60.5054 51.5229 60.5054 51.0503 61.0269 50.7549 cv
61.5483 50.4595 62.5908 50.3408 63.1123 50.2817 cv
63.6338 50.2227 63.6338 50.2227 63.6338 50.2227 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
83.3057 58.0215 mo
83.3057 58.0215 83.3057 58.0215 83.7617 57.9043 cv
84.2183 57.7861 85.1304 57.5498 85.5215 57.2539 cv
85.9121 56.959 85.7822 56.6035 85.0435 56.2793 cv
84.3047 55.9551 82.958 55.6582 82.3062 55.2754 cv
81.6548 54.8906 81.6978 54.418 82.3496 54.1523 cv
83.0015 53.8867 84.2612 53.8271 84.9131 53.5605 cv
85.5649 53.2949 85.6084 52.8228 85.2607 52.5273 cv
84.9131 52.2319 84.1748 52.1138 83.8052 51.8184 cv
83.436 51.5229 83.436 51.0503 83.9575 50.7549 cv
84.4785 50.4595 85.5215 50.3408 86.0425 50.2817 cv
86.564 50.2227 86.564 50.2227 86.564 50.2227 cv
false sop
0 0 0 0 cmyk
ef
83.3057 58.0215 mo
83.3057 58.0215 83.3057 58.0215 83.7617 57.9043 cv
84.2183 57.7861 85.1304 57.5498 85.5215 57.2539 cv
85.9121 56.959 85.7822 56.6035 85.0435 56.2793 cv
84.3047 55.9551 82.958 55.6582 82.3062 55.2754 cv
81.6548 54.8906 81.6978 54.418 82.3496 54.1523 cv
83.0015 53.8867 84.2612 53.8271 84.9131 53.5605 cv
85.5649 53.2949 85.6084 52.8228 85.2607 52.5273 cv
84.9131 52.2319 84.1748 52.1138 83.8052 51.8184 cv
83.436 51.5229 83.436 51.0503 83.9575 50.7549 cv
84.4785 50.4595 85.5215 50.3408 86.0425 50.2817 cv
86.564 50.2227 86.564 50.2227 86.564 50.2227 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHNK+Helvetica*1 [5.076 0 0 -5.076 0 0 ]msf64.6499 57.8643 mo(Stench)sh66.7368 52.8931 mo
67.3887 52.6274 67.4321 52.1548 67.0845 51.8594 cv
66.7368 51.564 65.998 51.4458 65.6289 51.1504 cv
65.2598 50.855 65.2598 50.3823 65.7813 50.0869 cv
66.3022 49.7915 67.3452 49.6729 67.8667 49.6138 cv
68.3877 49.5547 68.3877 49.5547 68.3877 49.5547 cv
false sop
0 0 0 0 cmyk
ef
66.7368 52.8931 mo
67.3887 52.6274 67.4321 52.1548 67.0845 51.8594 cv
66.7368 51.564 65.998 51.4458 65.6289 51.1504 cv
65.2598 50.855 65.2598 50.3823 65.7813 50.0869 cv
66.3022 49.7915 67.3452 49.6729 67.8667 49.6138 cv
68.3877 49.5547 68.3877 49.5547 68.3877 49.5547 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
71.4868 53.0181 mo
72.1387 52.7524 72.1821 52.2798 71.8345 51.9844 cv
71.4868 51.689 70.748 51.5708 70.3789 51.2754 cv
70.0098 50.98 70.0098 50.5073 70.5313 50.2119 cv
71.0522 49.9165 72.0952 49.7979 72.6167 49.7388 cv
73.1377 49.6797 73.1377 49.6797 73.1377 49.6797 cv
false sop
0 0 0 0 cmyk
ef
71.4868 53.0181 mo
72.1387 52.7524 72.1821 52.2798 71.8345 51.9844 cv
71.4868 51.689 70.748 51.5708 70.3789 51.2754 cv
70.0098 50.98 70.0098 50.5073 70.5313 50.2119 cv
71.0522 49.9165 72.0952 49.7979 72.6167 49.7388 cv
73.1377 49.6797 73.1377 49.6797 73.1377 49.6797 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
75.9868 52.8931 mo
76.6387 52.6274 76.6821 52.1548 76.3345 51.8594 cv
75.9868 51.564 75.248 51.4458 74.8789 51.1504 cv
74.5098 50.855 74.5098 50.3823 75.0313 50.0869 cv
75.5522 49.7915 76.5952 49.6729 77.1167 49.6138 cv
77.6377 49.5547 77.6377 49.5547 77.6377 49.5547 cv
false sop
0 0 0 0 cmyk
ef
75.9868 52.8931 mo
76.6387 52.6274 76.6821 52.1548 76.3345 51.8594 cv
75.9868 51.564 75.248 51.4458 74.8789 51.1504 cv
74.5098 50.855 74.5098 50.3823 75.0313 50.0869 cv
75.5522 49.7915 76.5952 49.6729 77.1167 49.6138 cv
77.6377 49.5547 77.6377 49.5547 77.6377 49.5547 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
79.9868 53.2681 mo
80.6387 53.0024 80.6821 52.5298 80.3345 52.2344 cv
79.9868 51.939 79.248 51.8208 78.8789 51.5254 cv
78.5098 51.23 78.5098 50.7573 79.0313 50.4619 cv
79.5522 50.1665 80.5952 50.0479 81.1167 49.9888 cv
81.6377 49.9297 81.6377 49.9297 81.6377 49.9297 cv
false sop
0 0 0 0 cmyk
ef
79.9868 53.2681 mo
80.6387 53.0024 80.6821 52.5298 80.3345 52.2344 cv
79.9868 51.939 79.248 51.8208 78.8789 51.5254 cv
78.5098 51.23 78.5098 50.7573 79.0313 50.4619 cv
79.5522 50.1665 80.5952 50.0479 81.1167 49.9888 cv
81.6377 49.9297 81.6377 49.9297 81.6377 49.9297 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
/WGFHNK+Helvetica*1 uf/WGFHNK+Helvetica uf/Helvetica uf/WGFHNJ+Helvetica-Bold*1 uf/WGFHNJ+Helvetica-Bold uf/Helvetica-Bold uf/WGFHNL+Helvetica-Oblique*1 uf/WGFHNL+Helvetica-Oblique uf/Helvetica-Oblique ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Jon) ()%%Title: (wumpus-world.eps)%%CreationDate: 11/3/09 1:53 PM%%Canvassize: 16383%AI9_DataStream%Gb!!klZ-RGOXBo-HjBXj7!G.4M>P9l8sD<q3HWHl[V'n]a+T%V;0#Bp`Tk%UXa0b/?G6Qn?AkYcW_PsK6KD`r/1_p+a?($Lq9@Me%+'u^0p%l_4TDml[kJ?9O)#SYqjZKqkp7't;f2r!"s6d8=L$t^6_[@Q5)6NL!&#G7UnjVomO6=6&])1uAs8)[9hEKcO^O(1to^MMH%h/CWSI^m)g\)lrAVq:ABpqPZMr,hu<e_TUo?U$]d*8gc\'=@`(X7-&YnESmqgb4*Rn\^hT&$PD.IR[ZtI[@gaIe@Z0rUfgRpAMOG%(QO#0I/ikp<t?tal,2Ogmbe$;4I/UtpcVF9cgPb$]`7@ZIhqPB?JdnnG^9=E1!0<Z^O$r-^S<IIp\aiJp[?uM,`X#\K!'S&5QBUU%3PR_$(H&gUI!8G&0.l`"(IAr\](75=s22VNoDO`RhS"Dcqu5-pli6X=3gdBPD]WiSrnHYhNW4kHkHtQjmSES<D]WfRht+uZ="_Mh%p.R^6B5KZ+c`R+I7sCPO3j1E_GB5M-IsQ8;\)3eWrq>d1lh=3DrqcR8?JPqa?G(^da&i:Ri5;JRSG\UirqXILrS'QOIRT14TJ$$:%rR8se#=aG3J,O?`UJ>9?0Rl]I5Ma'Pnc&K[`i"S&2#Z='2nWS#cctk'pM\r'DuKS%hV>mFe'ig0_>73Y;]5V-qp=AKFoFK;mQ8DX%A[`J%r01Ne&*a1$O1##4+3$?jp\*-uY?q7[O,'J]msfW[lK):,)U=iMi6bo=jo:A@AXHuIn)*$;emT)0]DDKma17,cs&!+lVnW]K%I!tmLckT$b^7;YeR]crR]`.'erTsU*Z!R`Ms2Xre5JJSOF5pVdoWo8.ffT/F\cO]XqAgf/)^BbMUO7E:9i&r2V,43jkc[m_<@QFt%Pj<,WffQV+S_E`+O.Pd1>4kXmkS*oj<``APlKX7u]XjhUY-+_Joeh/EI9d1CI=4iI?XLu411D-)N(;_QhpR_`5*#</T@Ab\6pIXc%bm?1kmq>2_PM4BBkU4UoR#krp:@sbLU)D?Sl:LIj4k#AR-dA-0'9qWImhBT\ql(=TMgeQnlYD)\I;%\nA&4mIM13U2134>HN*XFM%Dl8_-NR1#k;(J(WrM6#q"_H9USZE\,VH,N<XKZ)$Su)81:\ou]-gOPmA`NufT@Ab\7mCQ"Kh;KOnpYm0BRiP^qSAWBp]Tp49(3%t%aNS5f1iaJ#]N9F!H:\MBUGaqj:aXGISsEO&[kp>G8ZdZ[BmtXIH'WnW)k,U9Da<".4+]J<K2=L?(pj?ZUQGq\#VBFk?qggn1-37_%]N=Sl,KG[LDDHBMKss_Do"9?'s((2r1PM9/blp&S__qH-qOP6(SiQZWG3dpd^sf*-Tl/6UUd'0OdL^Tu>\.;gXojXhR&$W-2DA0j%([mW<j[nn]s.eJg'tsSS6,&c%jW@&HqDWoI^U)hY/<K[3rm`KJcen;s2>OjA]Y!FC(GFj=q-3iHrO)PdJ'5U5hgG$T5j!"\p[,H\%p\ZWCSGa+M:2<?aAR4D9r$B+ur'Iteq>)$hn6*L422>!-T:Vq;J)=2qKKT5-5IJ6&;kCR<opb8cI(d8>JNpR.lPDpM^1d)*@9nBS%hr>Sl?b`#rd@,P@4jW<crRYtJH?VfL)CtDG=qKanhC$'DP*(M\5(@Y0!;kghn9QV'0jaY4-]`eM^:pK=HdD/q[Wd2;g[3g,9u\,:%l-5)ASi>!l>2G-\DgU6!7.<YFf5GoIAR,/B^;kO\)=t7b1\r6hfl*g-qS]Th:\.end2ld8fK#?;;6'8U"2.F#6\"a!I$QKp<#CUR%Hu1+S^JNW/W;P!5^UC'9I>kR]c"!%;5bIhRKHD-bj6I'@F^7HclV4K/hCo=_gOf5A(?oOI$XD+e(d#EF;RO^KGbbrC]UR3Xkm6kr%^GOqH0k-)NXuH+NNN;Z1K#90p"^?REbaWo)>R@"+/nhT>+,rj2cZ@(;2e1rHHqe)[Ps9Ih!H9Q=bId;$ek8IhGP[Up2q2k"]4>2[%I9TigPfEBJ7Q/7I5T@qiH7NmJVZ,_&k8F^3;(K:N7Olho9+ND^3GiJRh0Xf4X:@F2YtT)HQ4Z"1iJ(jYRW4,e_m;;\$'Q!&mVkS/%$gemu;P3Mlg&KuG^WZikq&>Bbqg1%]Ng3dnhS-H^Vkp;P3B]@hIO+jU6ji4XlD,^gO5Bl-GH6[AGl&("7#!lQk?,`PbKh9Q\?k(?%7*]Cm?P@`gs!R)/=d&b*g$@CWFMcWn0'f.],Z^FRqd8M7Zo.Y?I`j?(q?HT%_H4hZ3^8%5Ek(</`G`R2p:r>jT>,)(oX*$'20S_l%r@`P8Oo8dL-Vp?6@gB48j+YV%?iGQPe>GJ.XSu^m8CiOjaMc1]2rU[ToJ<b\Thj,Ad.>`mk.:/A?"4l#di(2.n-XV?o:Bt5&tCqq%^3ua_@HRr`-M`(spIlJGmLX#W"`UUWguaUb0gebRiBUp#<m9XsStG*BSmHQZWGtXMC`;>u_pAHe(9DOMF9draOF[Xa;1%#+6?M9g%1H3FP1'p$c@V!V\Ts[mY`)"b:.<hE<d,_/FN2R.AMR,0</TR8g8?@ZS;slGaYH=n%?;-+Ak[JrFrXul*G4ItFWiZ4i\$Oa,'rAH^%-@K:_>DXm!=nV^sZRi5T#Lshi-tqo*i-*c3\p>5N,Z7GmNO9O<bH@//_')SH377G-lVd1D=,Yki;@'doBUY+uc#m34CWpqhDTn2a%79P2P3g1Wk%-mpfJ3SUoD"U3_%N2rnT)AP]Tn4&a6`9>\]*@&.ZX,[2B]4QNN?56D>=UJ`Bl^>t>;l2Dl,S/I(2_fJEF#j:CkRi2%\?V@*<pOFP>3%bICi^rh.P6ghlDbTJ\/%X@bX&8P3*u[KBs*E[9Y*.6%G&hhg.X,Y'c)6.IuM#Jf$BRmZ8Q<9D,s+`:$rhrJ.mJ$%k+&]G[[n\*??8p1f88)A]#emH8\E*peglMYkm_l:)/%M%A*n',U;OYi/%rU7pa>.s`nD@^]$T,BNE4mnG6t@<'E)Ed'!&D1I^Mfa%bUPc@*S/cX?DQ^@4CjOWVjqmM"ic!sG[l<e0u'?(MrF'h/Z)S&',eCPT)&8jm@N328S#8?h-t!606Bp>&(j:'g[.\41]hdB/_$fR%@d$oe.T6^Y.8mE/EFLH*s51>E;1YecI!Z&^eeZeS8\@<5Lu97VmX4Wu6qs._re<'5&f@.cAhRK56VV:_,dGCe9tk?`X%^CsnKqWQ%Re&QE`N3O"H,5d8^9.A?^Vc?m[Peul]]W:Y;Q%hGRcC4%c#,15:;CAFd7iisR$uTY]R0'3n?0luA^/eS^U5+X[@XepeaAnBj0TJ#%qtkYsR<QLB4S;aCTD@),^ZJN$IBK3N\io\W<Cd%bs!KCX[p5Oh/c+.us"D#ro&3Am9&q/?6EKognkpHQC4Pn_)t-U+EbI1UM@X7e%[86G"*0'q85LU4`m!;`:bJl%aL+lj!\/SU`bZhHTAIR2K's_b^]2p"tqTkeM[/=F7"POsk]hf",[7,*eIR@dNd&"N.<a0OnBXb;_%SHSffC?\<^n@-44R'tW?D%e/Ce'B6\G_#e)>0c>I`JDV+WQ-KZ?`uTUaG)[^+Cm=ek7aW[$VV!D[NJc?q)NQ*NKmmte=ucJ'oM\@%;Tdih&'=q)?2Y7[gusQe4)VEL)M)RmjuJgCJPYjKbNPi,`]i)(MHTt-9.bbQ)$_Jp[F_][nZhr?3?FWtR`Xgqq3XZ;A`su);9=:\%JG7SAJ\AYf69iLPTAr(N)gnskppBdVq65@:1FksZn5"PVkb53Y]$[SNs5_RG3O?s,,iWdeM9SAT^K7IJqg5So&&4_uFG2u@rhV!O%n"*eI(Oqp62gr61*dPm%r\A/GX6/rBO8\]0U3'URn?F@4q[?9JF&23\i"ld9q"iJ$2g-XX-E\cFl1m<dU&T;pa+WRMZtRJF3+cE?%o=p=E\QpBp/S)uQ,[<JQkMU.B%mPq=>rUmBjZ3=UI'&;!+WM(8AW6RY,@M(0XjQ`Qm3^K@O@51_b5Z2:ANLj)B<r)O9qHcTj<>=F%W:e&<ZZ4aDrKQa10A7^V?V&^jmU.X3e:3,i`?ndOLRqP84n[IL:Yh^Qj3'2bc:[VJ]iVt*BXs<:k:D-fZd5dUN6?-M%BT96Xl/kd%/9mGVZG3;u#JEe`+RSoF%/adNcLljo\Cl105rDlLM#F)4glm\\W?lK]K[=aNIRe<Z2+R2=D/hZ_pKJ/tkV_i2@O*IJPEAWL9e;4K%G35B0cR0dg(C_9!k^:["Z2:`PB$I=eRqV<r/mM%n`s_,1=Qd6OimWPc"eMbn:EY%md&9uPmIY+%K_+pGjf6BF0op.BF?X>Geq;45%h?U0&e\kl^:DfgLF.XGSKQ,*NRTjjk4l><3XVLs0I_67j&Fg4R5Tt"(I#[a1:_'tSJW11F6NSgOiVIXL&2kgU.dO=0_j3rdp1Sc1%>)J6oF-*YLD&uc'0-EW5SRq!1-p%:+LO<]'*EFUZIbIf63T;WB2-hHbEm`'+IDU>V@eNn+FW(KD^T2:NA"Oh3BCu[sIZr5S)e%-u%Y9B6E^>uW38&YrLblaU#kdSuDA80\@o8hr22D4@g;dAlCLu_X>kMuQr]^AeY@.KkifSj:0BM;QCHK,ChiY]BNn-iE?nqO:/41ur-%M+U)*l@Y!is51l`"jsiW:*\O,[^P^jB<2m$A#K<;BFf/@AgLdd#G7=6,>ul]-JN2iInNhG8)=51GPt6E*+)XA]Dd3Jc$'(>biaPF%&0uRKQYItT>$h1$R%_T#U)&%V<n`EO[)BJUS^']rL6$KN/"b:K/N.,L?YA&]^\RTr901->T<=b,l+#D.*-(hmgS]h)+6>T]bhr?g%rr%U2BE*8nqrPSBG^=l>ma^VF+7@I%\bu!bm8*Iu>3b[tb?+FVa#EH>?b@Cd?XDRE^O5_DE-qEJmG3QlpQtpPrmep0qoeHTm-O;h%p;F'i\`M[#Dsq#G^&.<o_o)G&>i*aao)((`IYZ5;q8otdH[574H1]r7I3m^aOuBM02Qs4,C[V2gnk%P!8_^/>m?=r+P+d8bVB;Vu%LY;=dnq4>uH2HW_pMV]lNWJ"o?eu6>?bUl:s7V"Una?C:Nn@Y:jho!RrVObs[r2QTDuP&CSp7nrrUMTP"&!S./E5m\jlP=IS"JTP%qXLcX0AjOXI<eVd&MI](p:?16:[_ZIs)@engWT'B4l!dKl^<=\4FDDJq!.O-fa,?B^41S,pu)p7[VLZU:N'V>E'Lp[p%k7D5Mj,d%qsZk#TY^#GleDI<_u2ZcjNFI9]tV/ZO1U2%8,bKHldahY_g&tgqVgCI/FIs(5COGBIK0*7ro*j3p[^&S`;RTkX#Dm,GAhBfmOqqg%@_>NHdpM!=4qWdeIQ<.)H2kt#R#hQ1\PrDLII^_Y0#3gWIX4Ec@Rr;Fs%iOa_qSBud;M7^IH$C[:9eg1?ejJjjU\Q7KU"[>RkNZX%pH6,7!o^PYqs5uFn*Y%Cr5WLIri]*>h@1)X]6plFkdSau(IB"sg>K[[eGN)"^K\hQGLku%dc`c,o\Iq;k5CjXpp7@&o@hH]jf=`T%;X`JU\m1hmKm:8DHV=#1p0O3DhXQ>^/M0'\m..>%?N59Ip;>q.m>(FG+$RBPs0p1`g[X(PT>'D3U\VZQs/1&_*q+T*r_MQI3BPE#%lJ'p7:NV-`\*)XeO!gQk<rU^oP6R@$mH(G7TDh(>I.0LFIK$.R+7B1$o:,WlIjE55kk4oGec3Cs'rS5Gc=:dsTYSbLK:aitJ+^c2%M`^Yj?4KlDs7[&5&*&^kq<IV`K2oSaH!rs+*o(/EO8E-*Gl$IE2c"g7nA4k&DBE3!qVd4Q1!`?RL4/m[mF05hGCrQ&)Eke^IfD[R%MD)_k]`7Nqr+q2]bJ=mLVk!Wj05oa,#Q@(\dG*bApCH_2c\#$)OTu!b5PM@2]KZqK;<*G:[D2b%c]<R$HMIJ;IW&hi"i]@0PlG1=%.ifZpqklCF:&Fo#%j/ems5iXsLGutprPR+;5J27:oU#H+*]h(7j8!nKq;6hPs5Wo>-t%N#j+g_)mk8Qc^%o^0G'*\%qtC"o^)R[T%TD8B.:OdHc_pdA\q7&])IJqXn_pb*O>D!?mErJ:@hnJpJY5e!1qtg$R3Q%u^Ro_s%pquL7dHl4s5,$H[pO>@+qI+@/GLi\i\a<1#%^YI]gn*'E<g[hW+IX(V=o05B$4]o2JYH2pO1R-VnkBP#hpjq&S]bUb<hkU]Vht5pqqu:bV)6KN\_t`deF732>6fh]=mFC%?$P'n[%2p$8n%q.1?HM-]GdaJ9n"*)JqL\j=84>b!sO7bup(i9!/+@Kg&F0n`(DlE*Fq&fW_qrXLII/hf6DYZfg0GE2J=l3:fr=VoeDg8!K%0PCFT:\T>plLFn!k0@=ms8V2!B-5Fsq271E-q5q!5EA&.g\C9Qcbi14s4_f[s8Dc.r\&KpOrjD]Z`iYuU+TX<rOh5mc6'NW'J?[!%k;NN\km/u7\_6XrF7sng`Q:rj4*)4SQ0c])]?&7IR])fG)$5diLU`j)<O]K:\[4[\6kZ'(Y2b.Q.Je/c0=PS&be[Z)PiMSsk\[S0%K\ka6>Gf]@Q\!2#&UW\\p'Wh!3FF.>eC6:jg-qj8"Den7caGrc8'fe3_,VogfN[)g#2?ZjZmB)_E4i0^&C7Q*2W,Q-8oBNcg+RjB%J\^eb?mtO^l:":H$S^Yq(mlsC63iWVo"YI^jmE9l>*V[TMqUg*i3729R&UYuoHihpm\7)PAR_VqIM]+tG>WlNQZ=],>\6fa@OC5q%7'ksjel&>]\8]E"!QGhaf.aEKASK"MF08(>".V.CXZ:K?l^QA><gS&76:kn-iRQTc%#cuW`u*s%8*>.+0b&N>T[TaGLGX'rp&i]S%F.FeON*#)F*(5u6O*<N+f@['m9dl^49H38?95):#TeZ?t6@"h#^@BpAcnlCC!mbkJ,0&%:)hK;<0cfs1h^f.=e++t^E7,W\F@(G/%$plAR2s[+n+ht9"HDjgm9t.q%GJ&h=>Cln9Kd36!X;a-%gG(F\ZQ4r?P^GMmBljnRS`E^[B$1J>=;r2r$h\''0nkhAa+R5hJ&1nb%r@tY<69[V;0jX_'A5&n"DE2;TL5?u*hTUln4D%gU%F-a1Z/kurP8NFS-6oD4WY7+XcpDk*/Ms6MAudglOn-1`AC\-K.a(^"0YdCi%D9OFZE)<M8a%#=oK#m8>+>jK_V9$;'jbl%JN.?O\<hYT8D-dR^e%H")cF/q&Wk\%TX@Y4`^aU]=\qH4n1$13W-q#l5G+s>uhF^C[%L_\naV)[Js6pjqk,7u.<h$d%64q)Vo1Xj_/3pr)a(oaDi1q2,rApe4N*cCO9G-GU"H]DRV3[DU1JpiB`%l_AQN]BH"ZO:i]KY,dk%e%j`YLE,QGG9-1`?RnesSV'[KnSM&%]\>ROA^>;%kP!uqmQK@i7pP#7J*_I*.1>\_"**j1)]IX>92N;*05K!:e/$Tj87A9Z?m/i5%VZC\X/;c04_8C'5b!D8d!'HsHV(F,Pg,9dP=]gL*i.QJ9]_.'e9l@A?idSk3H:f1r*Ka,g5#l#7/Oh1k(PgR0&h8X0l`bm`>!&Q(%0Z=\D>'T-P#Q>ELXlOXrQq()$DYg!FXRCTUV8"-(^6!kPW$nakGu@nOm4h1RRI<J^>r[Z,Y=\<`U8WU7HQsO"joM94Vn9!7pcO:X%]">7e9R7F*FKYh+P@6s#CL!+N_:`?u6h:FrcH^T,iMOJpkPOZ:_&-1YSLpb*2MRIfDS^JjVcugV$9\nm&5A0:gNY?dI^)(D3q(bC%.03+#El=H=@:P'DmuTQt)<iRR/@[_dTd*`fL+Ej,plO-hE;eS'*3S4;Ytmr!'cVo:qN-saZ2J#]S6%24CVSO6[eB%<0c@FfZ71Da%40n'dQDH)JDSPt!1Y;Tnmt+?6pXjq3b4fT<b!ltA"WQ0c2oR>c.Bu!2pp?n))Gi4t>;XX1+;:i0(*aU%H"jiqAY$X$ilc.6m(>'*%WgMVH)I**pH@<584lpa3!iT_fm9/U,QT\m#LTGjKk4dZgn8q2dLSXVP=WWaq+gE+4qRK$T>e]#dn(3%][6kOH,\mmcd[.92lUC1m%atDnbA0M34!f#71fgZhHB#d?HAX;/O1HsX8k[:a[%h/EA]Aa[5P!ZTO8!:"_-g8#(h;1"PUn`QMH9d,$(b`\;;R9,^;<UFD!8@%g%KN!uqMnUYN0iWOa=*\/G*g?q<)YC'O6h5dC*l-_3.@S:R8?kn8hP;"h:J%N=LAo>S?tCZh_hmdZH@HN$UACrE)UAYpo6Z:<s.BQC%Q\!B1FL?O;@fHmD4/A2QW]7uJYjM`sFP#%%l3Rpm")0O3i_Yn:2sO_>G]fjF-*ME\D%-\hKAqeKh&oLX[`3Q]H7of<bRqFY?(/:M%G48*BlZ,MIG4$Dd4,E9S%".A[&pBnR]F8K/YM#8h-<_$R/F,O0<ArrPfmq2?k%:eLVSp'LiOIN\J5[4Mb^pb)nrVmVcKQtA7rQn^%+.N]=2pq?SdM?"OJ.titei294[,ofp`lq-`fqIiW$$PE7Ve\"ig`\I9k*q,Wp5g0\)>EB!$lRl217qb]!IP9@jcC=YFo`(ufMpJS%rAb^-1*2Qp?t3Ykn?2BG..7GlcRm>epUp5t?8ajlm2:=I!im@E(q+f5#SHQNYeq9=>Z]-!K31YrMQ20;PmLl/?eqZRn?hS9r=^."%IWP&5<b#'\"FK`S!CCE>41oFbP!^BMQ!a1I1SX:n=Fis<`i$7a!aVTYG\\mB97<dK,;3KM]K1FWOjc/d-M=3KUpEHCP:6)Oe<d`p%V@r3;$WpE29sdkGkmXY.4/b+p"q-h\A$l\S[i!rtp_(kn+rW?X+jk6En[Jl<o&rkZLH8M@0'sJ5%I4ot$YpXK!q:kg/T$8b_eMm\%HFMV#bIi"c3XpU8U`NtEGb'jqoP!@\7'`_])598&THApBT*`[_L@C75rC8$f/c@6Zi1n*X501Bt4jQiB8:nn#\u4jIA<e^U8YTTU%DRK4<A0PBc*J[)0=PiSUl>>R,<mucSLS\4BZ5[i10'maNG1a(c-IS2Y;4u1,X16iN$sX@($kt"_8R4h?IJh%W)%7%$+=h(]K%j`&%$cMU21%Mha'oJ,@,X8UX7r+G!_Jm[B(NYeb.=K1OS7L9ioT/LK8*T9p?<Ls<rD9imJ@(?1Q1SrEh+]C#7HVQl3!aY_fda9:4SV_[%*jF#S\EtGHIZB1*nbY\qYa6P\iA,-:OPGoj`PE&\N3j;lhJhllo!ubtVo3>rb%ljD93.qBe@[cd*nhqZ,uHfa.7kO'i$E`Lph7%D%A3(/0[rljk:)(+l:`6R":=H66eiM>`jKOocf?;+K:mRV)>7]rM1K,u<o3nBNbt]K'^i<d;VjrFj6aD@pR)p/@H%`ZVA0mn/@**03%=.Km5->],Bm?STC`2Y\I.`3?KP\ik'ng(/n,pHM*E`Cu$EmG9\jg3L#?2E3tN&jZj4%r7n5(@E>XG:>71o9AI^IQ^Bd()ek4&1Vo%8>#cWrl54,0kcrN"oOE1#Sr/7671#[idVA*2p@qB&JrtU6!e[)?jJ:FVd">q">7<jMK4!R3P3q`Z8pBsRK\7"'AT&D[nSKFK*JTV%buJ!'R:(eOD%seegc1=U"m2\1&XKm&'G1=@\#)n:6%81gCArdOQR'>"B:LO*(Jl`-P<I#M>ip0f_F&,]0$M]MmMGaW9k[8I43Utm%b]5g@LcitR4Narl8FP<]^lf"KPV]hq00H(^Q*q4Fka:9<M"?D.6\0indU)\gMQ(5Vg7e:''U3s<HFfYKZ9RCULV2Z7boCc"6f)sm%D4]Qm8"4M5EDP2,<?_pLos%adciJSTqt!rTs+c(ds-Na?5&n15\$'.VP4_$gLOYf3J!e">&$u#"qX-s*&t5tUKZ54U"ak@mp-\W9%[O1P5+nhjFnp`Uts7)nS5q&QfI4=t""P?7/hC((DatC%X4dcO\h!go6R?IX/2ag\rjn/>Nrlg[Sd;HrG^#GlBq%L/qK-UU[jD$fD%QE`Akl%\&JdL".Y-,YYBjRYdh)d+K5Su9srB9$5]XVZD5Ya"2_4QLV3=#o9t18lp?]YC1ndW;ei&)pYDVs[1B[J:#7jL>?-8g@kD%Jn!:s&8rgsOtPAmWj[m><<\[$FTfE(D]P>j*%N`bX\!M:LFm*g1$5IAbH^qc/5O(i98W_8W\<G>$!6=ufIYabf;rg^%,/NO"OP!,%#d.uW<N/8=/41@LR&@RIUD((-"dsIY7"IL5N55O_A6p%)>:9]"F8S(lBWs3u0Ym4gNamUi`Q[d2(YGt'6)d%Y"Z!P!?lW:^dcY[&%$LWc(S912S#[qcZ!s"(14GYUCXWJ;E9%@5*Re,6)/"isR$p?\Zio$)?+U,7G[:4"kirr^#'(YC>(of4\d!O0+Jt#)qK3p#\<3In,%@`01m#4h;paCm"l!K<):6%QRHKG>n7J.];EaM_IW?mT:kf`BkA:bt<#^e/>>r"->=^I/QOd"?r3OH7U<"$NXAF_VEhL_5\"Sno+p%2!,9#7=4'ij?TZZ:26!uN"$H$X\hc"cK*]p4rT[L%=HS1[_WN[c1VAsa%$:\6XC=6Q&mq=V&Lu_T^PN"JN)2c:`*L'?5Br+1J$/+%:g0V*En@]L29ube\u"'^X[3;VlJN4U!ioJ!9g"i]GlaJ;TBc:T0q(U_]2r;YUJ@s`S4eC_HN9OC33<$jJ4%[KRbFOlCM=j'L@`:`%kfAL=M_CHCb.r`e3gaqf*cL@<C9B0c0Kqk>'S.<jLm06"*&(2Gmn,YYgBq/Lgd;-bV<HQ8G9R^t74pi"8$mf^aVgp$lQFldoe'I$%?<)T[];:B^#Ak;S$?j!uIIIV4:K*0C;)VB9>mF,h!6UL\#/P$VL]i*C`>C6T^m_&bYB)Sd(d_-Gd7phMQ2qh?BZOi."1rg7P$BtI%X)I80[+&TR*LIn462o]o%aAE1hhnWN&SgbLdWZ7YWnWb8UZ-V#6\K8q7>0-MPU;5E#@b":'aC]g2J1o?<#VO!F>Efj:$B"rAL2G]%_Gm/oTN]e.KFXkD<`s]+JUN7-a<J1YGXF?sUD"WO@<*keGS_&3F:uHG7DoIn:L_JYSEs\d[K]d\6F..oE!j#_5k/TmXP"&J8qAuI%Hbe6h%Z%"eljMMSg/e%.GZh1@J_`Dl%%(c4/g5gAHpcZJ]g_r92!Hafq/f8#]@(X\NN%T.4%7I"<-%Y$`;"Un@/Si5KrA[ZF#0hG%X0/Ur(2RaZ,g5eSgY-JIl`jo:SKPLB<Ydq)=c_Lg5h-1SJ4]o4`*iccOm4DF^I_P^BL[Y7jI%bc`%->SH:OEc1p,"A_-gNE/&"d9%O)\`AF:lBAl=C*@d0#BE/'>Q-_a$`kfK*P?kCbKF//bs=R"IPM5K5Pr/OJ)Z&jdGf@".DO\N/DfX[^*cXX74aBB7Q9he22&pc9E#%R:3KQBAbrM#dE"fC;pgHeCCS/W2aO[Rr\lDk@Ok%[L%q#4\je5EVZaU7SAZN2Ku1b4@oLOU'afQ%$_+hM[[gk4S6O]k6R$D_55i_%J65HELIJPkTMdT=BK)?\A'8-3RVk(nG7U@BX3mto!tIj5Qo<^"i+n-lhm=t^<sGo&<UVdbe@o`@`A_AMfrcmD^f$is&;^_*LJe:;%oXn'i:t@md]/GXG:frL[cO$/*5p0.`a1G^l\=rgNg%E=3Lh`/NX>^i//#%1eZ-R)f2sWA61[ZQAML_dL8lI+K(qln69hZUCbQ'_'%'YDNFTk9b,5--a^eBhN3ei.0nIKDu><"t07^r_>C=.W6J0*O)<d)"WNkgtZJ;2/91Z'Cc(!U+&q2i@"1)ZN'3*j)M!`aZZOBbF:d%"H);_:iqdnlN;"o0f&M>\gmc$TL[X4LFZqda3*Yi6?V406b.pE5d;[?VHb;8gdE?V*^R6B;Lnt1=RW=`>Woo*oRlq'3_@AG?-)5=%ii4&.-^No#_()G(TMO1m)b[tTQpsX&MG6Hb%2tSoOO6gjr-g'#8V'VKUIl#>NOm)s%NIN3Q:=mKR`2TYD^&*^*H:G8ba5i<9WXVn%:@cL4_Yd05*=Q'+F>.,R(ULUqP(L5YJo)8kO0+k9TTg>ar(?M9M2FZg`m^9>AKN[W$.)/_>aGraj=/gFA8Ot\:b-=b$Ck-,)$>,t%PmH':@r2kIP6I>%/pW96!\dZB_5!ES'^.VhO5pm,d!80h%\oVYF>GgKbi/o%bYZR1N8e@Z@#<OV4]]W;$5-AnDYUMoans0g8[\nD%/g@?!+siDW4\jol0k5R5Gk%LO[<.&S!R*9+AnJMN&oRkl7o`%4FGc4rlQN0Nm:FHnEXp5QI?M"sm;')&m"&b^c6VT3,,2Nr%'%Ys%C&@6sXfT4E!B&q[A<.(O=:<"9<N8M*4tcU=I&U@P^Ud"p'&d`sR+^!Q>SM71hO7hSYRuJTH#lkDF_qdgRF1dd@4.H@-2"9`?qfD'%m'$`TMGRF)M_@?doNl5:nF`fV?%L,K5pb0i.&RO%TuqF"Qq%=(F%.l/<FCBAU9om8GGMU)IH&J?>%CDAbS4&7><".F5eTM/R=er(%fQ^nXOl]KJiVIFiLs/-C+h^8-f&5@S(u+[!Yo?&]jtG/(+Su0>Oi^Qhg>Np*Uf=YTYXI3cBH$s\;!F.R%Z#A&j]$9+U9.MqPCuuP%bD*`B]l$=o\(08e9YZXg)@s!K1r7E."rai,dZ//aFJ:;6e"YU$VTZ[IB^V!.`kMN4:DsA8C251o!r"[\?_2N:js*L8`MDnJ$K2Vu%ie\O)@t[hC/1GZ@BpX("niSs[g7!2cIY-,ZaiU'MNRV[(E$BTCb-&a0,0gK.YU2bD3:U<:#SrS\I<NF&PCQY#*5I`R:@sL\0[U-m%6aG.mX96`3@=>Y!e"i!2nu+#3/_6o@)!(L%E>ZQ/LC>,Z8AiBWlGIJ;4QcG%c@h\Z"uD`cDm6!CS_9O,UB;#Y*BM5S8a-@-6HFhG%%PhT,kcT+a_(qP+NiH8%SIdNj=&/A_Pi8aDl547M$Wdq?H[*ca2%)l!)unF9K;dPqGcTceX8rE'`Ej)RN::[NL!=NYG*/MlY%$>n%ngOboG]Q^%=^7\.`/9-`AjQZWA^JWM#-Gapj]/G[8MM(m+6M?;$D-OM;.<`6<n+h7-nc:A_=8W3[u&q9D&XhW.-B-Sph2prFlIQ5%:_a9Q%:JUC0t>F6GI0kuqXW.<G_N88PQ9;B[5HoJeXP2?Hd`siZk2FD7aN@BPmK-4pujIM6C/BE>oaICYFD[8`9biZR0<WEdCO-;%faI*[ZL;DWaNHW8bm+3"H[,UZZ)d9tPAu-#06r_D1<&1U3:JQp?m\,MGG@8B/-R.e"RAOf[Bj8&nPr5(=d6B:(F?jc.+UO6^1*.F%8cfe>ILX!#PHg&A_YMU."i<Ws>Bm!M`HcD`:%roSfY%@>UdYO+H9gCe]m2amCP+$A\)[)(XKt&sK1Finr=L=FAhY9a351GkFh$*)%AjBBp_0E2![VNhY:l[kif>X?E'[4UYn*+QMo?P]8)VfDEa*)paYJ.5Z6AWMd;Me/#%qpTY21X*,j5ABmJWqC_6l*UGqm82XF/[\:%,g14*4)elDF>-0\Z'q,?9"b]d(NFfPG<7*F=`iI^ah98cL-a?;'8raM&^\DIC`f=&\eq(aHi)/R,FGWnTJ%I\kmaEubXiYi[kc07%dPOpM?lt&D0Z1iAUs];:Ml;abb&@UN$;7UX#WTL$)OFL/0gQe)G'$Iop1m^\b'6pqTVQ9D"'WqiW<t(ug<KUkP.'hLGohSXl&u-m%8VCg?BI+cQ5%^:tA@ajC&esPkh4]I/dHH6`,Tu(\8N;M+@HD2i,<C>oK2)\Coh01lQ+T,A,%L!Upr8`X!A)bV01:mb1Fl7@@UgK0%2@0ei<t\$QNNNZkJlGq``&T\eR"N(S`^,d?-aq(JQKU4La'sR)K+ktON>HT"W+m_a<O[8h/M;Lt!Ts;!h=sMrlX`Xg$,L%`*&j.k%U=JaPc-pI2q-KA+L2.XBP^4Ii@MH"@:3erT8s/s3#-8SR>)96h?o6UjH,E[f9U?X3V(l+Z(@lm07@>fCVP3D1,V5[Ko_><B`CC(J%P=<<^gGHPC?QInA2ohK5hVg+\EpOaY2t*"Yi#8@lWjS>SU``cl2nh5[XG1_F"Wa\?#[];+T=eOL##Vcaaj\@aoSD=48S5'Rh^B<l%9c@SM^a9ONfV!S,qVj=NH2fpa6]^=9HQWZ\ETgG30^%$ngZb.66+3[jA94!q&p5:!]RUhe2C=?f&5LRE.[-.(h:)HN)OY(*39c"&%r/u`N^gP`lA5WtXLn989'tca_)@Ds0!b<@THX>A8).MNBSdZKYYZSG!StEmLAimdN:g;%/%5lO6\60Y*:3P?MISEiVYQen]9+E1#%.ko*P17gF7;GYBE[^^fiJ&gRTkCkA4RcHo<QjSG40)BQD"&V+PF0#]<*DL-hX09*%TJXdUO:gPUXb.[7^j`55<F;&)33LE2r3/j%%0^,!<Qk4M"=q.?gm6%g&1`PQh!d(<m'GPreIW;*_$_)Z&WJDE%!G=)M+HK:6`@UT(\f#X@m%#Si)$hBo`cL`N1'*8lL@Y\lJjII^%]W;7c6],iUTS%-bSW"0!AR;=&kbI@GdaHD'MtooUF4-:r[Db_VX\QYL>[e.23hQli7.+4(A<,`kAsap7<c8hjC*?;GV]FLLP"=eE%1_SH?.S1DUMWLNIN.jAcWGK;*5+lC^N;"Xdjjal1:fpsqEcqh$qKg>CP)\Kn7rDo^.N2o&<*V?!!(4:&G.-+#Ik4%WZ_[I/A%$t'%CM5]Aj!4Z-/bYTS?jc$=B'g]dMie=<&b$4TCLrD)j's@ZloP7Aif2F@d6>%8_Q_LPJ5f2H)9J>Q6bo[pZ3*KU#c=5."f3.A_iJ<I%C^[g]Kp\T269(dfT[nZ\oc.DIoh*(4":0WFX[;9fM[_.QX%mKprX"26q,VUROnOk^G>6Ys8M!O^(?I[%+N0]lmXk6!$&C!nVK-#m%d@,\AHYjVEcT?6H%\W*!VBa/W@*?(5YlsI"_K,+iJ4r!"qV83*\H52n:]_h!XqFW`%@h'3>GAeJ@61?pa_b<H+`:Z2>=F;U1Dh]X%S^)>!c-g/eQ/em,$`?CDSqp&XQ6<':ZP@=$aQuVb;/cWbRR(4bAV_Slf\lkQ\8SOsT`oPr+IL=2IUFc&7_smu0/d3ElE4M<W+Br,%'T^a%_E%([6O/ETOFCWO,-coN0kS>b,lr^6ksiMB9p;oX$ZB09c)1uh71*u'#YHrp-[7]V!50O/\qiDfH*lFgFp'U^m:_!U>^HNQ%#;7iuQ^"1$cYMeieLV8eQ8:GB.ef&X"WaY2h4KAD49DT]K7s"PY>0i"$`<XQOqeW^$-,uS=%s?$-FNRmd%TjZg7q!nEun0I[#,-E%-H6U9L@ge;PGIps];WYYD563%WQ[M5W]rbNh.jRKpJGsE;:dbBW.'V:8I=+s8R&.5CTe`qhs/s<Y.-(2Y*52<00N.a0fO9g2V?*<%)X:\/(\pP:PB<4Th]2?0UT6t6e+=[95Z<tr3=?0LfW7H)%j[g'U#T$55Nl)0&X1mN6*flTS"o8B%`o?o!S$\JLRBaUWY/&hc</%O%\,*g$,HR#%*BE/j*rjT>@uX9R5Y]S$b#-<epp2OKK>CJ;3T[,[]#'Upo]R//n?*WcTlN:41EVbsPN]I">tFEQ^O?MJeVH#JPZJt;%^XIJS%Ymr;MhAf9>bHs">14rQ$DN:N\E'@XT_5CK_Nr_\Ur'fZH,M9Jb/qNsF=fhOcXmDK=-k*36UfiV*s;@scR$&TNQiB>F?j.n%M5b*sfioem#c;'I,'^'Kd.I8[f[?_XO!_=^,WQJK.Dhis'=BnZ9=UhsLOsJMoE\>)-)"6P\[#Aj!Gn4!S1Y@&-KpP288]hrkWW3K%!>TS&>!V/XJsa%.<B>hnI,1Tt?/0PbE8Z=*'m:@H(@XEkjYkF,opIAS4c,kg`s4)9oog@%iF4K6hR+,PfXOd.CdP.=P>)K;MSCQJ%3[FeYob\LgSr#lsciZ;.'a5<?.3=LQFgi"q[W7P5N=H/&>#.qB`<GE!d#(`/!P)++DISAITGj)7lU'3t_NZ(A)Y!Nb;B1Z!aTk&V%D$g^_?nM`o3T4k>`L<irn4$ed86&OYp,Gf#1s,TfL=Ppf'JsjSml0R.Wa?mnk\(ZeTbGsE*)0'm#JkEaJeq;0jaYP,W)e%W$O2^_%8&[od6",\jeN,u%+gQ10#d`7VK*$.sUg7,`,%e5oj%Q1HX\GB>k$(QMO<sHD00O!S"q)GGd8*<4TmDT"*gUXn\9h[gNYueP<Il0[%h+Ad.2,f*e]ibRM#h0!!WbjGro=^DaJh&TKnq0%H(2G&r/cOrMcVE)o*Slkm`3B[6@$oCa]"WpY(mn$2l>C)S>4PNBl!RW=eRHfM%?j&GV2Q`5]`3aHPoH(/,=ePMoh4ZJPn9ci5Qu3Ya^q^Xn"(f\!9'AX#";jg^!$Or_CXYmMojj1AO-rl<j'_SfeTVO'>bR[TW?Ia'%R`pd!Bh:h#Zl]@e(P[Q!"D_VkFY1'k^lBta)7L!!eZ;/;&*0AOQGP8U.'-Q9Q9"FHc#0*ua?euh([%j],SP,0?#NBlpmbbj_r8Pd%!]tuiDZID?ct<4t*=NoSU^&CX17:7p&e%12LE2GQKu@sXbmV:kIZZ,-i3$eVR6Z:Z$\nJ/U`!MU6ElZ_Y`/^<?S*W,,jrUm+W]W!%4(nh9abjGK8k;H)%>@99aDF;=hD=gD0`oOd-ZH6N`R[9SD=h5=/0/RQklmM)W'8"Dcd';q&R,8[pF'oo2-R4D,)T+Q&1kFtd\r#S%KkMNO9Hi,%#]b;^3f(ssdV'BI.+`2C]"A)<#mo4i$9q`):us_4-B&sX\)OLeQ;(kb'j%q8[j<Rq!$-rmc\t`GofBH7[+h#B5Dtt@%9/s3!&.Gr4><T%,5hjV]KfQBiERk7FY$(:P\SXe@2'P@HrO2p<*.?)a,@Je,#M:<$96r223Q.<s&t1U<%b?!&@kH>CHl,>+1Lf3E%o+j*.RT\"!WJ4&##HgFfpXVKl/"G4fVUOFtH!^DrYYJ24Mes?^/=B&:^h3:\;tB:lSHO_jkQZ#&/u#VH!CdBDbo];WS1oZkOqb9T%<CDE=.<BYN%N$1S'`/YF]K=X%BmrOYbja80YYfkkR@+aW6P\Mjn&PPsKbMnsJiTp>6jj#o[g8et):E*H#>\PA.2#m4h61&I7eLJ&%mEBUTEc>lmGY39+C%OrZdUORW$"iQA%`[DA;Q5KB=!\A8FW`E6W`c<W<,Z!aS;MLp96+udelB"??p;Xd4U,(,Q&j4a"8HH%Ua-;/%:\;_A]B\9B%RhhA6rF7iLgCcA[B/X[1CfXGAV;NQ;'q-Y:t,HEWnLFDbIiLOjVCk^NTSWf;"hN_8&e[sSb.5)NTQWA0NOtR=TU7-%U&%I;/lS=eFDA"%&L[.Lk2lr<[[h\7A;7]!"[P_bMpo.PI?\j28V@\-S+ESIYNaD.@r524a#$4t"sXjCSCL,'jDs(rAt1Kj(X[h;%Vn'^5Z#q%c6YS+J;V[$c+)[g)PCiqO;(W3fZmgXZ"H&cN4ELf6/_#J!09;sW303(7-a0$"39f,9Oc^:p5j>*7@?mt+qD6Voqe'ui%;L:9mX63-#"IB'/j4li1)?6@)/?HPmN^pUl][[']'ng=_"?TkBjf_==0MUG*27!AIa/)]rAuS)9r;bb#X@mS70u#FP,%ASIj+9(i%cd3PmTFO$1Gus"+82m5o#i'\7Ec@MAm*N7>0J^c`.TB6<mTe]cX<#9l6c0,7!YqhPM&QXT)1KO^!'*9*JU.BMJ2ffV75qm-!BB[O%FqsIFd8"iGTp/O3B*\A^/Qtf8\R7u=Xn'-I/?QfYDn$$ucD^n>X8DD2-5d:Q/lF(Q7U*JUm[5!t&&QQm%]FfgAd)pqC?(Hn=n.3I%?A;K?2=g+bgI]\$H3XINI8$NM;*BtnXI1M[l)IgG+lqdup$9iX&QP<ni[tCSh^IS5#`,uq&d"AJSX;Z/$(@\Y[1;SKMcO3EEinKo%.i)FOnhQ"h1gN[cBn9u!.d`OpPEu(9<&#^CCf9UtV3s`NVh>q$,Fs9#.dYU1<_r&q&;R\L4HWTV-q;:8$>71QC5=(@%btNjdR$O"%QDTSmBj>u9gsfH[V;.$\1lrRXgIb/P^]82p,[C18_8nFXjp<8Kfms,TV'AW;5QjV%jAiF5&\Vi,_B8(dZcB-5o\;hdO[4Y\!uHBR%LTM5M\MA;2\d#'Y):;Uf/tk$:e%M;37n,.uRk],_Qf,d6GdrPT,$RaVa@dXu7_IX.6*R@oEmB2BAa*QlF+o1i6d/Z(1(T"8`JBJb%No?Bs1+\A,7Sl'Lm3PjiC-qJUQd^&4'P&1t-1F;I,(R^]-7h>&X8>7l/TF?]'65i,'k[G"Y-aUC*b%Z>C"*J+'X+E[Qn)>E[T/rL%VLuu8L9B",K3=@hr>!2MB*oRJT1`<b&Hc9K<9#)g1;OSQ7FEIBGn:C<P,DKD'QE?Q%\bn)q+rL@XXfXsP6/uJ(G/"0au#L^B4\37%,`-H8c*ZPr#3>S,;GR"WQ-H/r'*7G532k-F##Kc*0JC!Of*#Eu#pTMhXh\7.(%5IDOK$`q5VSH_n6Nq9:(7]E@+27c@[^BgXK5Ke%;l\Z476h<NmkbO)F6Eb+K+iW5/uJ6;*kCh-U-n$MGg-j.a3\r4+R`ii8h,sr6*%XdNTrVsUZ"_n7BA(/+9@*dpPuaF[h[#PEL_l:%)*;POc[:1$1S$:,I,_8@as,ssdj:C(.l5Hp1/RdR(=o\)N0^`!DWs3o$BZ'GP>M>af<bVsp2rh2ZZu8AK5+!@)&;TGLst/dFTPa;%?JMmj7I*)!R2=%uMF`!UQ#ag6f11JZfeV%?'$#[$L?VqiE&G=.D,2WiU"h.+K9\AiAS,nTC?'?;[@Lc2bgVqiUB;M'W\:D``/&*Z%<6-P`=r-B'ba*BAGB+Q>r.<`r%gtt<ja_>OX-=*<gRbbiO8U/oh/8NA-%rR^VJ=OFn<cnIn`TpXRj&q:TaWOS#Pot]n+!PH/5Vao%6Kg\IVTWW%@GhVXnch]Ci)H^cLMO:X/'jOB#Uf_+-(F%B%9ckuDEE2@?rV'd3-a93S!fLFBgK_X"tM)d>,27DQFooi5qSgo5>u7E%:1o0;*Rg6jTc-uA`K:pF8P)ALIk<;C(JB'aP8WK`e0fFt'V0bTqq5"T`oM,U]`<%!Ih8L2ZPW*ODrl'r='u*aJQnScabo,=3/f>9%=[EJAZQ8>^JKsGLV@1k[N^u'P;k*TaGtEhJ%I<.LQ-Tr0lIl17`LGm#g-]L6/>>kDluTlYLDNJ-PnqH<0QoC25'I.!:J(Y)*n#7>%i$O76k!HQ,%Cu?pp"(Xln=<X0\Xut4`^GMp!_d;;6DS3Pn.B:HD'O0pE.Rr1id]9A"!4JMl6Zs>9hm<8`m4s?34ar6Q#-;'2L>qD%2tJP>4,WoZ\Mb[8I>[-<%8(5ooXi@Z*0_WjOZrK:_1>n2f?a2f=GDF!N65R;//,\,V2VVO"5*%=.#;(\2i$cTrp+Lh+g7WQ<UVM)%L6tGQQ7E<pocqq"`]B!`Yq5VrONeuNO,K;2QRW<eGd8Od52B-((7m]_UU+`':*CB1dVd9ZFpcfX+gh%0mk%RGO'J65jJ!s8n!$rI%<'Mi3FQ,eEY>PD_!]R/ZoL.*Kib^<:R#AErCb?ddrh+O[V[3<3pTn\5]\M_4&A'JLQ^D[DO:8iYO3^]m;pbsZ3N*nHAgLnA(L.@1%#op%7\1nj;<Pkq=)-XBJ.XkE@,:74p!:R]HPfRIk\JA^ZkhR55F0\)lQ6OT>Q']Ic.b0.CA_E90mN,`-Im(rGm'$[!,^Ml&HbtOA%IBk]^&,Tp#?LWTh5)5M8'V8c\^BV>-Vi.eGW2%%MZql0/0/GWkSUd-mWGm@k==)XOaur?W80Vb2.9>8FXGoj3MdM1<pN[`Na;,Ak%o:e[r+;N(SJ@Ig$K$jZ^62o:j-#4I^Y*_;d06*`b`]1g6gd?.hX[q(fluTAfg2D*b_#[b"A0<sGF*2Z91,ijlY2\Dd+&)>f[!Wc&%])-&<rrN`/;LC\]'XR9Kg?3;*!A).8![eCM!,=?[JRM"k2/SfK<!smJ1e`;1AF*3Wm8k:Rp;3H%Sr;IbX=Q@^$^e-tR%\Gh7@Y/[%cQ0=8@5m's^peML'R]dc2]qJb*KR]k4%(Z&a2'MN0%e!NT0pgW$;[pT\d$;R:)@>I5"BGSLo((8S#AFHbI*-Bo2-6F9oYq]G#>G>%i0\JFm7g[8lGR\>a&sJJ1<$sI[+Q"%1np!i]1k\q+]Am5ZGK5q8s/bY)sl,<o$#oRHT]<jN2c7MFZB<JRI98,m83!9#!Uc+qr(k0%.8E>m.<<6>H'LG9q4qh^0W@u&ejNoA`&TEQ9/)U-F`sc0bpuI%Gc+J0iJOK!F@XeKOoC#r28@pG[\9q)J<G[p%Z<<Yo.=NH'QJ:H%g4$V7T?YINS*'5XZU!KcYiZ)$L!g_N\75uD06`k%2Io>^Bb\1=],U.fYNI+Td^m4ZSGBaRq*pZR,o44*leO#n+SUQ;e*OXT:&7C]%"j`,$m:uC\S'PUMHYS$m4+&n@dH5ja)A:q&a2cX4<8bk"K!]IGa+8&=Dj_H_)s3R5ouolfg9E$SrUhF$M(_bs>An1ebYa7KphZ;?%S;5bGJg&=Fcg5.SBq=f=Cak/`!J$D2MHnr^m%gOpS(59mKlpP$o2WrSUDt:fZ.-V>\]+YT=[af7;U1c.R12(."]c9>YkhJgo(K7F%Y+Z$:dtoo"K\nbZfZ6/I6`i:^-T`f_>Wk6:I^u8#0)ap!lXU_NQF8djC?IJ-]Cl#*o4*P)F%)\[oEb3gAO9)R`'9+/g\W`:]q.an%]'TPO^:clei6GiBG9lajSiRK#)E=OY4^ia^8R>,R`$OooqpH]Z[-aD('WL4,UJ+baU,ml0FAgIX-]g\^P!c3c7V\*dhC2)@m]Rmc%75t2-(AfZ9&piTO7j@4D=O!PocusRoQ!nC;mM?NXleZ+/eQ*mA-*lgdO75YX@-SK''7o3ZPmC\d))`B=R$M=X-EC6kJH%91,OJ>(%W4q,#9;87UBq7)5?iY1+nX282$ij-Qq,""Zp#u#g8+fbL_-2kc:4=@mqMJdM)@TBg@VQC@eB'=5BunJ0?nBr#3#BKjief3U'L@tj%:I6VLQ-FOVE`SK';4Oa:WUW[n14fkb^nE/;i.B90bX9tX*#h(Pfn[e"-OBG:@B1sHl2>:**,hO'c$$TIO*33TBg5bC+0<;"bI(^0%6NYmR$Y##AOrlc/Y9b1S'@5k`7s`=UOqFI)^Zuq,Sia*%bb#Djag6BXLdUR?)<0*m]+Ne8^N5IEpiG6KOE2E3Qm7(PX&VqgL#lEF%Rgp\qIRa(sb,'uk3G<:VKdcU^5D;0F/Wmo@!PoSpR?Bt`XJ_saq'\555d$o!WMk,J->T1EY?#T&]JNga!R:T)$`<SVK@SgaY+f6s%R/,,(7<E[@;DSlAZSbq"7foPnJVV(lKVK%lLfK,QZ3"!^_5j&LL[i]6?LIs8=MoQ+q(N5j%p<*^Hb6X]+STDc82*P4I1@jL#^d]H%ql'6dI/GCYrh\E%*b'`)>DK5G,LR_1C3EVMlkiQ";c5TC',J.8pKjtnH.FL%"NXYJ1CtjsW^DX]!E2Al\fq_C[j?s4,QoMDpne3s%MHSo&@BC]^9k`<Jr[h">C6b3!]KLIs\BRQam]0n^UWRJ#W7'+;+0l"<FQZ]h!+l<kJ":1=?"3fCoR=Pa?U20W:%fhE@7ABP$BMH?%]J,+6\6EiI_+B(WW8Jebi@sTV0L=\PQf:!j@\5<X-%_OgE1DTc93=/"!_)I4mC:Tl&]Gbfk7?=/)?e@GflP$p:lOd1hUU<<2SD-J%aHf$Fr!.W/OJNpPT-LXkDMoKQVVT6R?&H;fTcOL",I)YBin),W%q!DTO*1u!k*nN6HR)fjj\/%:keo$iTr1-MDB9![.WmMMS$j:e%`!RUY92,Yg/GGTq,HMqS3[0b>a]P_]-)XD9;s\7U+HkJY%i^qm9g"WX4eVQsPRT&4Ue"2q[FT*qTj[/rDT_Y@VBfrn4\F8N(&EGe%UfFE'lqS.l8$Mg[858(R<^"XTJKPPA4-]bk%CHmT85;ZgOttZ&;&PMe01q^(bOie\8f&ot\LC_>J_4<AihJ=FWKC'+Z?jJB_4g`P%<K!b+(/]b+0'[VEA`eSg>Z"#/FU)GG=$8SN7WtJOBrbMN(Y@rs]D6o\0GU48@3WXS*u3QDckCQJQ[k%pP&R<"!OYC8;8^fl5rGDr%YEt"UkL=g@eQXfRTO"'EoQFuN*+RFOD(Q]##2F14/r#XZfIkq#Hp:upn&YdpGXu;!`-=VY8<c/$/LGhS%#55!S*WWVF+D+J\hUFQ%`PK>"[`%.e3S8#[g01VQpII27GKET)lhSQ#XqB&R;#!''=Z%ZPW&4n48a\#=Vh=`^H:6<\*H6-`gm]s/I:O<@W_Nnj4fVB-jD&W(%I[JfZXe#[7/)b_m-jFL#XW9M;>O4a>CU(]N6n"eSb1\Dg]ghX&`pF$.q#TO=87D6B,d&*qlYlp;aWd)>KQ*$oF[0JmjL?/tB7u3_%Noeg2pHg!'Nl"_$MFIt-(7[AYQJ[UYhDS<&QcO!?k\P1UMs6a/)(!=2!c2_1^%*>RNm\!,KDjRjoDUn/Q5tqKGjm*P`:Qi]+4EI1%-&7t(\+-V]a83b7!%#0HI0"@p>%NFFDenlD7>/@KG*QKQ-q1*F`sj(f3>B*lLrRh3YA,Z>7u;8JdG&B5e8UBsq53N\NW"*?5!Ngn%pF>N_K43#o]pB$>M!-E#l7$IuKA:(DFS#%iGMO^m?QG4$k"B6EX@<Z$W>;Sg$p60H&%Fm)!9Z4f3"nb&AN^glUcRXPVMOpBg$'\.%0>[i%#*mb,r>:!jifKY+b?".SK7P4/@ClUOpWALkYE$[#lPGU5-(/;k=MU[9?$&QT=i&[$7=Bu1WR3#k1`WYHMh+?*.ETA&k)A(*%^%3dd]1/ULKd1<6J5PWq?,-qS*:2147oWcjM1^W<(+=NMQ!p/KR;YgZN'!$.k4?6Ed1#CLc#g:jFH!F"G.OWqWCAOBk%\+WISkF"%hC#PJpua]opJZK&HO_RPTl5j(4(5ep$"*oHr<ES!L1e.3+890E9<e#G?sk?4F*%'A.XlcYkJ4fn-mWQYLftJ4":f;r3M4Gh5DR.K%=t#\P7EOeZAq`n"M&JMYljd$@MmJ'9PjTh0;_j?><n#iLCo8!WL<CkEl:=3u#?Ph:RYQleeJ@->,=R/']$`m_2-Y/r]b_[NSK\=5%&[Zg<ct;HCQH"+2XN;Cf7?X*FTMA7p_(R-;$E[-&6uCVc)&")``UguIpj@.0_/#>eRNHZ\>)!WKF83+uScq6%S2I##q3=Ce/"+SM%;?hin.<$"`Au0Z.m8Ms`MA%F@Q_lG93CKD\'nQ)m%X`?k&T3$<f:S0+H[.o?7?!\pXR$:2%lMQG[id\5p3m@=BEnmEeSj)]AMEE`%8d#m&`k(!R/n`/8.S?Y[qN8H6Kfgco+D.9OnO;P,MK/M,Wk#G<hBu5[_0^hVXap1<JiA!db'A,Je#@g_&(gCb(Whd^;Bh6B%36P=%ldhXBDd0"VEqTl_\<I6ArkleMg*)1]fA\#;CrbuS3TDo#oT8)s_jd:Om>%4jJ;5+BcEG^fa:K%]&K-Ar.c_6-+b,@i&bAAP)4`%l%gH$Os.^Z0i;9An(p*q!U&P$3Kbr(/caP9oW_MRq1DjlBl(',MZIecIK#HR+!naGdDVe[P#+YRFH2+ZBZ*+:7O0PI1Da!-U:nk@\&%DfHn<Vd@tI_%=084','6fH^<8O1=OD0os@*CD!#15ogI8\Z$W=F.S6cC^0UPU'-b![2O\YU8d/2Sk0kNh/=!dQr(0tC/c9I%KfYo%Pp41Mkke>&mKVZp<ZbrD06\fX$ft,+*R@_L9q+QC8hP1?rBRt[(eegJq1FjN,eZ!L4nuo$J%g,i=J]9A9C_ls-9."P+=ZRu%.m6/%a;sL,HdneI_e%3A**;YC`k*<FMGNW,%?g2j(t0'%gG-=@@i@^.r*XfA=id@,59u>#;VI6R#'Rj&_$'L[oU+Y[E9AlSXCYV<jfhR>%5:k7rXWSc%KJ.YHEF\qhO;ig/%3!Hgp5o*7<,&$-/TmGWZq&7]%:QA+bm:\-](74VY]*sK<#M=<Y`O*Z"u?Xg<fk3*Bp_KW)NM;T%:.XpQB@m3YF($a5a#uY#I`GR;/33'fYI6pa8FMtCEsin]CD"%/nO\A<@=O#`<1RS3O)[?'G-!?efV7qg`6E;595BtoE)/-"5WqTf%:tSbG=VXlKFH)L[K"c6^o:2SAjX%1fZ-\o]**59EMu'_ajtA3'm'U_pbQ.`3NbCNppT1RZ;WUei'&H\idKj=6#3dQm\_I9?ijqX+%"E/,=LL#B??Y]$DpM9M`'JGV[TIL@;04q+HU@"ImnqT&sh-l#&rn^?^S)2&LkRqcSCW)o9nbkhs3OsIr/%I-b.r#KY1h]@Y@8h`,%p4X"T=Gk#RBtmQ!1Nm]E-@*(^>_oKm0&3S?4K".V:>;f!RA/"dJPZTUQ]fp_jHo+2pC/"g4=n2Nr_?$Q%aWN::o08^4Pr^doEiuq%p,GlaL!4F1alq6CY=>he#FBrcE,_,jh]8\sZ$3f`LT=od*Eo-LhFNQfA&=@GG#sD`%ZO5mcc3,S-52J]`_!VdK_a=W8Wfc%5gU"2%?5#t8=sH6A]e#i7aUg?V'H'rKCE]JUEf\=q+i;7r`Ee\_;Yklu!G&M+2;X&$(eTGbL?50!7$eXg'piq+(%oA]ke?$Y*--<VYDp$h%:Y5\8H!'Kt,AWWC:uoIo@24W;H0)S7m;Jd1ZFc+46T7G5<)arcflBTS'L$.rLtSAdlJaW&^5GPeOIAkDfZhJbo*8=-f(MdZaeuE(%9\7M8'U#MEr'4Xf%@oPabSAhh0$5+%3E6qte,+&t]kXcM>Wk$:()30'V>OWII7r*mOm3go?7'fV>XWUpgjM[GKBZ0sHMLAAc\j2E%3e1"XArnm(Ms;&+Z!*`9M^WChJcQk!TGff.-PB]Q:+e$>Z(ej9(n?3.g6LuY'4$][.bdfe?T\H;70-'T$KFud6HNCuK%:NfVb+-f%dK(*A<'EYRA!=TfVqP-N<78BtV`6aM@[0efn^KWK^g,EQ-@e^C-"F#uBf_:Am4c>!5On-EppqETWeFeo-!9C]Zfo*h?a&4>pd^Is%."%*0:V*J"oELA;'C^^#MfX=JrhQuT>Ydh!M&NBDW5P+f*`YhDs%-9emTLL_9EG_kP#B[f;(Qq(od<<"aLd=iBXs#cqJqpKU(eG*%kO[0U#$a06'QIEhB6e0uElmB<Wm>3Y3n+o[aj^%A[paH9DiNNB9ff*.VrFiR17a#j@-AStN$50lPXsO9b+&m$A%oSg157>rI:+GH%gW5i?<K__Cc\7;Ye`2iho.lon$NG42MX$HBkT2DI-&n4<3PA\1>&dK5.s=i6h/"AAR+%PiV58./9Y>p_`O$O3V3k$9-BaU>nrW8`%,PaHPfl$fqFFbXrFth`[RuM;ak9q!p\H7Nd,rIcHjAZ(nn<0'R_r@EPdXdasTQgf=$YY8C#=<[HE+86TTT"Q,iYMP5EL;8e9g9\a%gEhY=LqZ0!R5ag>dGEH<qS(s8DPt4e4+0<6V&.'1EH?CPZae-,Eg4Y/Vh/JrPE@u$$[JNM40mt<>a7^mJOd8Ka9;qXqhP<X`/(Ac%+Zdu74/*89\U;CKZc$@[>s*Rf!oSeco4#[^Hu`3[<,fat2mrBTMFn.NDlX_G%#[(n0\1pMJR%m_0OX'pRs2Pk#G2r,:g=dl7'DgM%7RRIFG&'*Ijtn5YJ:('FUB(igk3]G_<O<(s_!Yanf?1]dY.F@T!Q4^V!YdG4a1,WLHbE&`=(WfqU'+5fj2PlJD2r.i5Ip9Pph7JU%7$9Q:^iZW-Cim6_=clO^3jl;0D/&TfS4%K#WLBtlC_LP3^C95B=kB_m;er^l>*s&PZkRkb2tRSf&s`5'"i-,8"]_.iS`.Si,[[\+%3XngO:A!5LX0_*!5(XiP?TmoIod\$kd<(7unD(Z_M+>@9Z@(NNKdtS<m?Gr:SfM"dc?7!Z9nVLe:\=^GFAS7/d=h<&/9ET4>96n/%X!hK](p.L^HPC:,Ze]q!Y;B$Z:fV0['9uGG*AmPIg`oD&Nnb",l/p93>E;R'q:&O&.^uJ\psYYT0P69T9?ANPMQC-We2'WAkA]/`%?]HUb4hetMl?O"+2=ZlJU+Bm-8YO(?;eN>kK(@CD#$d)-:#SKd.<LhI&_rVS@IGVXU*iP8R6>qdKR<e(g-MC;&)n;)C1$abOYIo&%o`3'u,BQd^OOGWlGu7k&K$u%fa+9DnSk]k:l3sI-k-a00j*Kt4G[JSa,15ePDT+>`nS4S49^n$]^+nA$`qch3/c>G;leBJWQfm4D%r!HK/p_2Hk6ff]h5?;YM>3+gdlpDXgV+El!"Q+%2V)6RTDDn%J"("$6XeYgkHkF8*iN&:!GX\GQeIiiA?qP5Wqj#!_!c-S5FM\Tl%Pp<Ep)!?EHoMQ110UQW'0f[U(ORi%J>Clh_%8_S/e34*!K]eQSq8Q6S3Sc*n&7^j3"YqbKaJIpB=E<fudA5F^c'[NA78r1"KT".,%dmYQMH!mlG7g<]U>b4,*!$a-2Prhc^c(4Kr)***C&tP"k@&tA6/rdRt.J;ue:/V:3VfJQ34>$?f)`D59qsj!jM#.b#)NQQ:,-'nO%i934_b0cdBYq+2EW(9o5#0K3fp9G6U^Z>IeeY-Y<fM`SoM-akjO<NilaP-H\NZaO2aPbp>&h#O![9&Bo$#o52"]d::Ig35XK>E,S%"KYK1LIYS5]T[G0E^?Q;U`M(>M`16;e-XKGVU*8+QIk^1%"_rY'Q]sUhG=28.)ngaL;BrMhC(?\.7O>^*Z;f8e&=#On!8Np.`&nd%TN-d%.@F;1kF3Q2'[-oQ%"`aR"'HsD^O4C)J97egqPA2*?Vf&h#1kIA7SJTuqZ+LWAKY?Hbs9ko#"CXldC,J:hMm-#8*e;VkOJ,)%.pINMPcVY5A:;'\4nS%RUUN>Y%nP//,d>'^EX>"!=JtqC!36s*6Xr6%]gP9GPu8;=4#@,^glR)7eLEVY8UuGBn2Me0%UdZK+7am$%gT_":Nd*Yo\pBI,aYsPZFCd(W1K[X'F/B>L1rDt^r,Mg]\Zo#c[N#^7.<#lg!MoRLXeSrNUXe[+d=EMY*J7iu`)$d`n)piT-n1L]%!i1]jfQcIWn-W`!<+(g<U0ShV:l=V:548]>9bs-Za_a`1Erg<d56_Um*k\6^hP1K9e/#&-TO?SK$X1WldX[YCR!X%Zem^.6"l5Db%iinAX/aHek<1<QA\J2`VKt.E$7=A;jWRqKFp6p%-0[1L!Kc@=a>ipTK4bLkl5c9eL#`@_L)$T61;*gC?`SdPGSp<7*ArSDcRE.+M%[;AJICaSK%lD;A1\>7g0XQ,S8WYei\?qJ?\^c#.\=n,Hj=HWJ1.W+\>)$(4a3eP"b`o@rkK5M^Io,ROk]gQm2J:h0NGN>"YqBW.q%[T?/Y3`$\`JIY^_7>SRK>:,%*.I*0V]NkQ`*FL+R+0=1$l+SNW0sPm%q6F5`><-<5+E%Sk%pQ4d[_\**XU9HY/?"NRdt)MV+iPdm%q6l6jj?OOL>s(TliQfQWY>j"j`(rc)0kq_[pCJ%M5P?908ct=h6!H>ccTk7.<ETuh50%ceg6[B$$$8ipNGB#3j)a^`$!;T9%.&Q0%BEchD2H;h0;JK(EI("[DI)i>j'@8-."TeJ&1MaACGM5=sWZrtZ1BoP\Q"7j0&TFXmTqGRihT<*PK`7C'P'n]9+i*00EjUD_$=289%c1)!h?H_#T_E0`f:4Wnf6]&hQoh2l7SM.rCBZ`O'hG'\jnn4f!g`V,A;8'="Z,<EnS1&kt,g$C?63gAA(#A`;0nL&Y0[\8?:h.[(%=-O)!P8H3KDI<(:!7DWF(LSbP0to?(&t0\?>udP(r$qZBbkn#N^nS_hgbt&*i@Bi-Dns.p71#i<H_g9aGMnZu(o5Dk#K]MF!'*.g%YNehd`fcVt8lL^RPaMQJMn+L3pmQc0^k"S<!lobc"'UqjR^!,,m^7_LpaXKgO,sY6<oXtfafF)cOgP13;5g+<`C8U^En-8YFJ_>>%@CZFT=iSUYPIY\Pa8jKuZN=XP<j+r*Qbb]T!k-IV[Oi6,,-lAD/Zf,I`"\;^7;1&l4J):6Gm%VIg^smDRnfE4o&i?>_4uUWMC9hg%f*QD8Mk]J\e$K+g&3Aq!aW7,0Dlb,k4Jb:KYSLPh;CqW!!![W6J1_Ne&CZ[3Ml7liP52)ZKf(j#:E9>=rR[;d+3n\c6gtPn""c7K%5nt/EL)fJdTM%I8,UJP)lOeNRek$?+UMXU4,4lS4!c,hcE3*68pQHM#FP:RWB<8NVmR/8$G[!mPd=(G+MK+7hPG;15K#_e[-R\t4%Lug!i2Q!uS&8I2>&IdpP6.EI2_A*Q$$h]?R6liY)Ci3Ri1^U8a4EA[uYmJM#+i#'k4)#kjgj8T"Ni_;V#@021,=pORCu'7eGM[-=%+g<[n8lmQHBk47.&ucG"/n,P!dAO0a9=PI3."KBBn#A4dokb*GTdUDNPH8hN=Z0ch@'d9CSZ-"dlkTW5"kDq*%9TEH+1-sifT$s0%nNZ@d0;WV9)Bc;(-k[`V."#!p!X!;9!ONN-U5CcFgVBA+"N\7gol1I?.F8C@B-K?gfk\K5a`h,O(2&R[cl=''np2/jp$,TJKPA2$%md69GLMg5t(ja-)RTd?mP!a$g\LY1QB4n!s&27)a:G@\96#i0mlI7M?]P`N\0G\d=Q^!2CW.$r(2$J&$XS(r1(jCiWDTb=(Z-d1h%6%"']/-iAojI9?@3Mp1)$mO43fSWbU'XDcC0OZsj#=6&7'<mi^ghD`Jb$!XI'MPV4Ni4QbZ:?;`4f^tYh+W@44.Vhi9P3(q]V=V-%ng<pk>!:rI8.dn8m[hgAER5R_a&../m/e<D*S7.C\,qA:&1?Tb2:?7sT&'>2^h7V'3C,&l8DTRjfCM?L!'/>pA4=-GNs^n%.TlV8%%-/)b$uAr*QSY,)dO>qCN[&jKE,Yt$1h"?+<%16_%Wdb%VpPUVO9]gj>r5piH7)0LO[@_k'=cMZ"]<%R;G@bg<.Lnm"d@FS!W)._%%Bd8R_:7Zs4RYn7=1sB\fAj4HcE=4Q*3a7S$g0Qq]W/3JETr!HU!t(I)'8fJJ0TtQ!XB>4%()[YW[IuYXJ\oanIUpW-l"nOQ`-id%GQVo)#V^L#;$\R",Q[^Ka3h\eGc4Ypm$=LtHB/E19KK6q02puNN?HCQrKtkp[]8t]e^PIE3pIfpgTG']B2r0a%Yd4[@"F\Y<Hb]j%:sA<!/j<.#l!S>PC@XC$=IoG-o%2A<`(.<'QD1fIT=bhF&Z6BpZ,61tP$W,T%,fd)WacW#^i#M:)<jCs$EH,q*O%%d'IVmYkTJCU%5AD"k6DLBZ-k%JZ*_sLQQ'YNo_9!D@UI3=Y:i$9m6ULtV#AW/Fp*?+I*G?RMqJ?i>c78+lM$'anX=]3XDR%n>Zu2Jf,hMn^3X.='%8F,1j,R-1"_NAn.GSZQIaO!]qGsng"\mcE?PYTT!W>[Cjh[$^M3kZ@1H]%;TS>MOd)::`f%ba&n2[ggC6:H[pF&^^kVpXJB>BOH6%Upq$2U3,>rljNA?#Z0-C0YVXu)HI9t-CkgLeI3EPSbU?jig44E#:^ui<qF`/fUEq2<,j+o]^^h,1Dc!b4&l=b/]NSa1lHNBVktpN%&Ytq_k6iT'B[]uk0eiGQB<,MP8Y[<%1+*UN3/PSPD]Sd;hfY,;Ao;]6MpL)\k;Z#eJSu889r7]X:P")EoHeN7'>F\*]^cSVX'd,M%-M:KHJO>&l1j2<r&I-:AnDW\T*4/>48s<!"ZSGD_4*.;+mcbK+Yn0GBE"1"7_,=8EWpUVe^q=KHCW=/SEe2daRq4g9BnkbBihqr7%X?ePFBda8&i68ng[0"JK-Z.g@E0U#FYcnsq@Na9rdrH!n4(WUO"/fUQ14Zo[K5dJ`2$eFN=LAAjiT3O+i?ZW=i8io$gSP;B#GI`K%pB>O$h<QbTCk4[j'9.km^4*aG&TMbZJSM,^:eS/+])9]:LkKU2e#@$?Eq'\a]sWYt5ldFf*ofl`#2'?P!A*.1eIGbf2,>LFY\M[8%U(Ju(WbPrPE'g`[K<6M'UPliU5VWrYW64UY=ED,BPCmM#d^V!fi\Fc`D8)',WsPsR`bJm;GYIU):9lm\+jP:M__<LaDO(i&God^%%AhckfWX(jT143NOQoq/h!:XF+lCaAd=:lMr;#Pqh+7N9M+TVVTDA3L$-_J`.()g2<^qmKTK.Vt(5"6PXe+<N5_RMqs*FkAI$Bd%k%@o,?L"\qui:;d/QPAVp$O^#JQ=Zcfi\_PHEU>2:Rl3:B^WGHd9fG70\:mX`_&qpo0#>l0Nod(=9"*@ELAf*K>]h>G(19I5KlrFlp%?4:70D0#-YP.%-_6<;FJW`tY.9UeA!719hbY-TR_1Q4p"gJq0_7Chc,]3TtsFYX",bor*<_UE-<>3UjQ&XXcr!hB6scLP%E6_jgL%];1&\Tq#$d2,0ufo&=<!D5Ia&;_XjKGSeJ5V4%]F=h'oKG9Fqi.HoRNN5!AUMJ;gB\ODDR,?E+(QN8*"Q'dC2bed!9TW5"cKAK4"%MP.PM@R#r[QP9s]DPp<TRD]p[3359&7V]5j[^C@WMBT"'WQQ&oVpTWO(3ej7T02RZ>Z%8Qg(mP2-rL-a"%(/3BqU+<UIL/N[$MpW%9AsO2I#Ed#S3oh%>6c`(ZII.[Zb3$(1l<THD,l-pdSu6+>OplieI[ACHG4o56rcju4=!FR.b*5d"<EX9kdAq5rE$Sg:AbG57HqDA%C`Fs;i2%W*a89.VbrWoT=TEC^dm96;1pS40pjMC#Lpn?(,A+)kRP\]u10!!(#.JGFMO5F/Js_auIE6,h7mM4AkQVsmG+]Cdq..8^%]VZ)+?tETrG]oDN$3aU`OHZ*?K:,mSTLG(_b0+go7Rn"NJ7M:nN?@bd1+6U=dOCm@FCO+^I6hn^DU;SO/k@hZk.$TolTId&(f:G'%i7U3_5?ObjDN`C#Bdl!]SS7Ik-=9Gq:2<,E..\2"+G)#1):b*-fSPbR/O5@R&3ce/V&dKRP[%*%hFB4L+BZ`93#]Vu%1Q3rN:J$+%B^48]7q+m49tUd#*8MD7G*b<^UWoJU*G*]N``KcAOYO5CS#3Qi'LS-.]&e]TDN+]/:%?RU]L14F42Tmo_a-b"bn-T&^nO\=$h"X'%SQH#r(m]KS"g$8kPHk`_SMYF(eCGHmST!d*9I>::dRbgW6G?:PJXXTQkTW/b@*&;g;Q3e?cPGai&$N\s)i)K])QA7'7].]RAf\ZU%R-bA:#1&5L."Lrq@%)_&o;JLqk'@V>c2'"$@.f#tA^;9N)SdI*EkX`QCWdRLlsLZh?GK.!2C"AYY`R7Hl!6fE,!=]jp'RrFEKUGA%D!1F##(h%7/&`VEP>kD:MA."\js#ue(_m31nBf*YZaJ1;\0`97)dRI%ON=7HnL_?$]nmGA&s3_J]Nn77X"oi857=;O.a:r`BBU3-%-=-_ihq#cNa0tM1F-L@5oKeOp>Id<PL?q"j&R)3sHm,^`a#)=:GagMB8<],i'Xrb>@+H-,MmGJ(l-Q@iRqU%JR`5^*:a\hSU.>V;%3`Dn(&l?d,3#It5Cd:#]+:H:+Zb&-_+Jg*R;g11V4/!Qu&gDg)0WYD?^JH]ZX`(9[`0(`>1DRQE"5-@LN'QR?2$?e*+E+(i&L;E>%!Tm?5#!5bZROX*rk1G38R5tXZBeS<_pO-Nms44!8.RXB"Iq-s7o'%^Qc)JpGQbFmm.V8c'O_#V%jjRG2:oP[)g2^*%FMLW\IMmFo%%S$NpA-r"#n-%&S?O8%.&;?isNa(CC2pkYj+S8,N]Q6!FWJ&-FQ:b&t*(e;*A$R'F8fs[a1hMNO3Q;CP;U!5<lf[WGDTj;-P`Nsm%>gCJb?-L9"LS,bY8_\o9qnS^N'SH`hY#YE;F>QN%_kJTZe5f'[24K_ZLe(#B'O5>Wf\fWTKb]u+H&dCpNWA[2(0&R!"*mjZFlKsW%@\DO*(e.%3F8=t&%nt_^FM*NAs&$TrbI"n#@PT6GP9+'[Itk:3#EYGb4U<`Ppc[hc0`1_RSCCJ."W>s3,9Y2rW<eprfRh3RY;%U5%CVgDnq-qLFP^hU;cp_LYfKW"\Zeh_"i4u<1"SP^7eK`h?k*9M=m;\eTVqZMllsrLel)%Zb8t'@T1/R@TP#.[lb.sfb?5(/"V&ag&%XJ^.Q@IC*475W8;AtU1d+WmaTg)JSL[a^#6M'\!SUT$A1Q+-iqT2jF83h[mlOEa16jjfT/k,G)e2DspOQ3=9WiLm"-JN,Bt9GMlU%a!AHr]<KKC5BNROD9Fsc$S53<Me:`UOEG>A`a0&YYfFgj-_)Q,F2<"RXLs?5K/D/37@:XgiZ"kd`C!7J&1AR(F&`g9btUT:T["Y?%Vb4/Xm%On&nJ(H5BNc'sY)H8aCGo*XC_m-t>%gMm!V%YFLL`@?.(OlT8/ruudSVfFYK2rI/.hWQI6e*8JcRiqL(:f&Kpbou:*Lep%Ntc2m:l#Gk$YWL6P[.0VfUV&cH3nSb^8K7*:W:<%@gr("3C<ESqhGK6e<L^6@EXhnRT3E@[&f<\DdLoHX"`]U"hW:23l<P`n)VJJ%Z$8tn*=D#MM#$C%"!d0>W1#"5=ni>#<%S.eQ`t!t6`'uU.#LZq\16bKS-[@1];d@C,L1\7NN,'+>cC[5-:-7GF6a5C8X,(G\/R3X%dlK$9EK^1.GQQ6o\[%=*9U:4LQUaXNWC`?u'h%C"XF+P,!WsAE6E>3SR]SV&X8Ai'3LiOrU^lVt24B)2\^2Dj+p5oU"d;/n24_7Z%b$!T^.4_VpdKfA^5tr-OF/NiO1%V>=9e(Q/CT.FF)Y6\Z'K%ao+U9<!O#qkplI=9R5j'*K-,FE;JVR:97ubr+lt3j4a\@4@YfF!r%h(&VE'cp:,Y0GU]2+#)X'PF[(kF;7ViJiGA3F.:.<W]:Kd5+gY!s?<er>O^j;G)*oF#ufDl'^o0ATjbmjkLIrBUpH?:hc)W'PtB,%9?@;;#.%CMa2L=8fog=pR<3j4Y;>'pf>4[pL!;9.'f2rDVK'gr=rDL"E&$k0)!59:IYVM2?rmhP?^rg1(^=!;dj#'-+Wr,HDlpB3%L#+!fX$hN&7g6q4<FO)9VP#^)%;hU2V,C-09#-nR;GU0GkH(mfeS<0>?<&eFdiJo;?"jPX,.f"<263b2Tr(o<Y^G#1+h_>L"[q&,%!O++pnOEaA#9s7iNY2o'_^UNIOFr1HF)nGUn`fK\e6KCu14Lo]X;'L@pli;(R57ZoS[lRu]L&GEouQ,T'%)N(E7W5<6l'"XF,\4=%Na#AC/l"Cu(i`T;*U7mZZt,1S9de#J/YA$)%%u&hR3_cNFFa;S/E3.Lamu+Hr@^L4D9P$38i6uIPD;C:[->@oK6u((^Q&\$<s0Es%]`3)4,$Rl1'=6n]Zpb=RVD$>jP5mt*3M6gHK,qr/_(Ai(W/,q'?_umg_:]8$b7P0bCG:`/O?@gZTrH(q:-AjC5dSBo#;s>SLDW]p%D+M,gZsYL9)0P!%">:4XX2$@m`u:LP;5KmA4E5oAdO*L\9/\7P&fDLig,MKg$!K#V0@!ECW`pj;k;ET'<jWTE8:/5Va>-><%Vdh-%EIeVlPVB`-,[$;iOQso'F'-\7VOF#,*V@>;5gYING9K%QZc2^T(prLPKSQo)"9m?B7*[du&IP%=^:,PmWd)94!6nFd=.>'Y)Q[+[%>1,l1@#):MD+-2eOqL9hnP9t1G6qqG@:[O>+r@c.R/i;4O%?iJ;W6=dl\*t-89.Jd:giW.HgM;_^R-UiU,T@4!3BrWjFk6tP6EZX%?/oiTL-UT??*Y`S3`jFl2Sc3kjA!Gl<Z\fH>RNITgM7KJ1X`PHU3#U=%1T8-q4bs2C=#p#9[@WI]t97cFUm7BWq($JBJp=q;d@*<%1bR&`).=jh07.(LT=;`AS0Zm4XtNfE1-%oqN8"^X`iqij@n+$^NPLoD4*PVM?_!]YQDm0(<\!+I$P:Un/4"Lh$m?I.VMSZ1H\Leg%o;9pD3dGAG%`Y61j%!q+)!qla[M&kP[XAGqbMuHc=dX+VhMB-rp]?T:(pt-_EdH,k#;BBA"D<$fBa7hVJtk<0]OF@EE1\%uS8f.P%ehYuLY]JdiTt\rLP:`fuZH0gpH.PG*P!lP3FAU)R-ML=t)uHBO'eClW?p2,gW*E?$P3(hr/4>@6;Ij/oY7I$bX92@CY9:tVik+\:%c]/O6#dElI3HrbXHmreO53LU5#%/W)Ai#m1j_Y,J;n+SG&X2_$fqBei-D"jg[U';eAt=J1T`co@>:t52J;$dq;Ur6LV.I!C$`SBQ%`&maW)c8H*,`CMn#BC6+^mriH]f)c/jC0."9L3F3]C@OpFoCJeaF@/WB<4:fA1/oM31]J7_/Oa%W@W@:gfeS8qt.0W9S6`m<@e>.%H+$O;;Mdb^^dLO+=B68l3n6#gW*Nt1Q+32FY0=,-LZe1"^C"gDasbE0WDu+N"SRp*]_j_2'9UQQm=#KFB:N;j1sVTN^4-<L8bqXt%dY\P:4Xq<3d^#[MK8Fl/K3cc#_Y9V:iq@Pg01^Mb7t=Tj#^0[FJ.Xe2E;N.D&rBPS9QYf%C'[+p(1_/&%([OreJq^[ILH$jARq$'%BO\67Uu/Rd-E+=LoUn,iLgtSL:3/j:LD0\@GOMtMbE<j%IDPo<r??b:W-[GEOjXnGN<'14du6\N:BFO*pCL_P"p@Mks'Fr-AtHP6%juUuI/Em-96/]-=XB9K8nF2?=M^g%eQ:S9:9HS&ZlWF@657IE<=/m;a&+*?R=`_+#br*j*5t<,PU7p0>E.[Y>oN<[q<M2$9][89*%lF7g"Cs.39:tTaCLali)0>/N&%("[35__[I(G*O7\=5fq_:VNu4eiE-0P.-72-,q&Y&ku5oqkq=2]92=aOY\0+AF092MF1d>)PuY%8$p&S\-WshrS6?+A>t,hrq:.*Xi[YCqsuh*rd<tV2c^B)Gk((Fi?Rh+>FJ=<.DAiGY$i86YNCKUNbO=W7\,Ck6TZ[[`EgJj)3Lbe%/HMZHC-6r83].QfbCs.-:m'Up^Y]PQ;dPa"@k0]q>GQ"?6U%%j05ltgD*+[F'j/Qmg$Y0)k+t52B-b/mJU95X:sO[LZB3/3F,Mf!%jc%<>2m;DlRbde]#"J6Xd\WEJ(AC7+E5I:D>>a@QHD'9t/UV6_/LZX%KL`18lTH5P8/*i*V'jC+5q0F?8+s>N*E/Y-<pgM4<]P;l%3AookoI%#(Q"fMO$m%?HV_2o)%@/#<c18>Fi`WMk<StZ4F<R2Qf-,*LAMTp1dO"_VMM:Q-F'MXmgj^o0)m2s-YI0PR^4ODC`ChL-%Ai"ArRs?_oLfnJTLsnlk\du2B,NA98>,o^jEVfu:&GQTPThk)Ikc7ETfd-a"!mh_N6^D%X%fj`!aF)_-0>5D*Up)D`XB&UD"^NOt%O,5reNr>0.gC3/]D`on9Q[E/GgEYD'9EM)I0G>)9J`)_pfM!*^NToBXC3,2BMRQ$Z9)_QKNtUpKf(:L[,+sujmOMM7^1[e!8cjd5%)i`U^kq4ce9?m&T=kgG907D<TXM#sn6ehr<HM3D2ls/7(Fs\gQ\*.m8HAskog[n^;F@K_BAEmeR>?i+UlY08u`M@YK7Bn4V\_'ad%54iuj9+$:/Y*#LJ3[YXb[W/;c<js9Aq0]4;24O+t1r*.(U0GVibb]]8ch$tBs8!s@WJ'BknJ!iZ_an`"]%2Lj>:(uVn(1%YH<%b+%1!92YEC[=9M-1d7h_p`A'F"n=\7C+0*Yf'1,QYk4_On`XlE.q%^%UC:T(46S6j5I;'t7$&S,'m,W!rXZhPBt9J:/NJ"W^5b@Ql.*%1)MJSc`]KV5F-KXim/2_2IiJ]aAdA6=Uqff1C4.kTq20dAj`Cn,tIKufdp#!]0c5`lgM*G1.Onr*/b[LSgBO.Y?rA5No,3.>:IV4%"lRj!WY]NSf`P*f*7b`5JuU)HrdW_4X[?/Vcdibq79)q,FQck\#omZhd_QNec%7=#$f*0F%^7.d8S:l;S8bO8Nj3^e`L],04H<6X%lM_W3nb?=`L-$`pKCC+SYk4Wegr:aa<<3`Ne$pkNVWhGDTb[M1),gu,G2VT:o%2#@T\_+[*</0,GqH<YrH/N]8lKo?NOWH9m?DSV%DG/Js[RdIl^G#MeS7,9$47F;LWU'4^KP5g)g/EXfrt(L7[)L%:$hn6cAgmND;:g-$X8:49Q<O2'4_rXj**pJ*^fkn06?Ojj`#gAT%cmWGsE?[2t5<#;)kGbiRg@"JZ"sfZ9K9HXtcQcFJj18'*CS[Z93(bX&N?#(HVLEm3oPn[[dloq\;U*Ege]GJT+b"6\Xd:X+ZAD]3%(WC16kW<[;RYVO:1WWsg$+HXX#<7EoBB-IA.bg$3[5T<Zrn<#!0ELfF[rP0uXp;,<1Lda5GJ3q!-/R]s42J7L:'b]mXjYeWFX2<M%WP(^na_#d/IZ$Iu$i*W6G3l`b=JWYcF%U1IFdLkQg2BYKoXNUA%_5MI'ZK!ja.<\NDjR%(,]>EmQ?oq7e,shFa`+OVAC<)NGY;$C%*2WW-2(L)H`K-"+4H[A6rR[YHf)B:q-pHS5QN`3&"&f,[P_L*j")7`a$">ka@K6.M'(1:".":8Do'o4A6ilM*m(9?NQ0aE<LKK:U%,>h8Be=$bl#3/@SDtjlmMF.rf!KZ-@m+`08<[WieUBg7;oRJQbLGq+ql.bZVBm=a43C0S=:=L8^VHc_oD9o.PA49%bY!*;`64J6l%Vt^,V'Ha0\$G)$GdO''d,k'?ad(jRsmDT4c0#m:q]ia9lq'*AO+[#`&G3Zf_+kOLBDSS>VOe1G#o=ED?)Ic;b.8r`CXpb+mil7Q_%po,,34jNlXAJp@uXb'j!fO!b-lG4a4pLU'`I_8pLgXUYUd^QjJG5j\N(FHMSI2.3\5BWFB$6!)8YZ[NeWnj_1I@)%mr(nWU))*CC%J8_7%o#3H(LRIGV6rU%@p:?g8DiJ#YfhP>F>1HD8IiZ2'EM>DeLtQ-T^g<?rigV7,?0i@Hj)u*lDR[ge@KlV`8+uiW3W1-.gMG/m%1sIqMAF"USP7#?a*TP9&>(CSU94>1&cfKae)@>/-cTR&#QQ>G`VkI&aagnH[_E!$[REAnjnjXuE"Pj1'hbOEjDrNXdq?fih_=/mD%"krVSU!E]W\En`JlH=(UhcDK)i9c!,h:\,0_jX?,AWIf$@IBrdDs$k56!gWu6K3]_3.&=&%2>Dr`cQP(]YKkL73'te\HcPb[J6LX%;jP6F(mQt)<OU*nF2Rlp";GVDaTltfG!fB&Xb(<.9C\Ncl_+PadYr@_[m_h7EGg`9XnGEbk@UdNm`E*>CTD"5>uiDpZfT_bgs4]u%=a#B6B-eT4<0Ws?FY7de/I44T+?t77D$&:0E]$_-K6,-hnG;/V.?cMEYg^WGI>6HSP:OX`-lo!Q]hIsiT2ouoo6MD(M\Wt^%JTb^%ArloYa(96M$<`,8=h($*=#5bW0k.5cH)9(M1r.\&M/E&6eBB6IJ389B_#sMclL!*X0#HFZ?.\an@=1#o?$3<M!N1i&`qd0:Cj<!=%[X.,sCY>.O]Bj"R\%o!D`LmN-Pl^1<ZpQ6Q$'*nuDcsgLf]o<JmoM%8kpPI&E7^YMNaDu.p2"bd>;gGTCJ#Q\d`(kr]DEirCiqn#%SO/=ll%^@qD)*QQeZ;Kt3(qhTEpUZ@.?V/e4+0%$IBt=tG4K52?S[#?o9YjuVj.huBc^#[B24_XicN&c0[EF,jmeZ`e<GL1qr-9Z%1D`5Bh4:@%o,]0j[k9J5.Ckksg\H?(<k%C@])sZAFto78PG^Fc.nthj1@Bd0O>Mr^&_&Kt/OO@k2kk/7LHHdA6I<k;9JqNrS>io$%Z^ec^M"a*ARc1&P&+YP2a_NT%qg2J50^Z'%Ge;`a[`7\m]%q=lq7W0<QT>#=8MJCpl)]>m*C#HJ#Qs%)CT/54>*c8e]jPtC'>Y%U%26TR(`=pckkW*oPlS.LFIMt8$=t1'>5CT*@G3Z2m<Hs^9k</g?$cLskXBY1DH>/Z!WMa/f#^m%6KZb,jf(u[XDE$.)9mF9YDn#FO%aY($mAb&63IP]Aq9CcQfbWM<Ma(?khi%qd]"+I=_cn(qlT;,[[-5mtb7pZ%r/(q]I^r;0qr0PP/S+io^'Pd1(9]PAA$iN,9m^Z=j%'D%Rj6O/e0FPbKLA_pgbfpE*fXtM]Zm7+_FOuM.ia\oj3;/:80+1F%M2oQ`7=EeJa3rR:;m`?n34`M>2bC.C;Gr`q](Hf0_jjDAJ%f:<^lphrmtQlc3m:tHICF3i`E'Y-B8>%1;=4XeBXIdF1H4H67Yh(S?dI^n2o2nSF\PqU%==8$5UDC=hj"<4WNNf[,o9MI3`[o&^J%Y3s^8PY`%;gZ/3K"fTjZX"PgpFtmm$m:M3mBX[QWk'`g-Ulf\X2u3pq,&",#CB@doS)7Ne+`W2\FEdhspSAd=AYj@t^_1g,Mda+D%;@,3eonHb^_=^Y=OM/:;rjKB)n$CDH$P(Z/4HGQ$<bYt-\1<>Ll)Pc8;Fm,>=[6lj=@ZIGG5&$UpIu0*N9/$gDs->-2P4Sf*S[ub%(k5K4Jp9E++'DNIhIb5ebBk(?OCSlCokZ0dS(DKI!Z>=$60Fpfnk;k#GO\E]]*>m>=aM#u%^?'1`.c7dWNrl;?)/+B8uAD>XXE[*%\1;I"P9Z1's0u>uFmO:N03dEk*O"Yn3kq#lH8^tjU]1,[Ee\JpnhTYPp"!A<):kK]3.5a(qo"sd"-?18\J="o'aPtM:C!fk-;`ai%_Td[rhM3.9G.TS$d4e,J^)L.FTo9fc.P>Ndr!t:b&(,:_4<_6^XjUcT-,*O^gRWAkWufOHl\N9(]H$n;4C.+ASQ"Mni_HgC>9$"?%(atC';C6$+=[=Ki\S:ogW9!1a>HI0ZWqH@4M'Qa/1$Iac"B,ts-BEMHda0m^BJ`IU7L-"'-i)"A-Ks_hBWaLS4H9e"gAnS@R@@E5%7:(Q/ksD1S\8W.s`9lo%3?#%>5kB$P/GIoaAd^d@ak))nrHL=o\'t.^l7G8!#K.*XN$%)Z1uD>ff!*$fmT6q*7pe"EI3O+0/W-1m%/KHSVS(TNk<j(DAImZl"FK*qKdF0H/='q)[EK:rr?cK^uauW%H0G!u3Rt7bSq<nr$"K_c9gkEhdH+!FVgZ2s2h/0hq,Pa+1Y9,F\%il/"TcEKI$Qc/No3bX$K62JHt`qK&k9s!mK0g`l;\u0</FR5=X^`ELcNrON1NErr/N"r@5TbsFThX@Qk%Feso6c'9kBWL+d%B.[V%29.r<$GS/%9$D=`atG@9m:Nla2V/rb-Lt_a?U%jl_sN-5cYZ#VS:?t`!jU!*S?\)YR&@%goEW-q]!d(ns-S!\*cqKl_(ON&ia853%gQf9QZKpM)Gs"Y;k0FTgZ2![e,U^#@LtNVZF0Z$Rg09d<dKh=K59&Ml3h!;]5o8`LkI$^1geS't6t=Xon`$qa'>cL&Gh_a:E8Y%!%qeR;m7gn,PG#FJ9"Ut1]e>nK`SF&e<K1B_k\)&`Z^Ys^)@GBNYrqQ!kS\,ugmEfdLl,A<>9g1UMQjJ5$gMNf,BNgj2j7?5YC?HQ$%I-Z?%okqL8NTA89?p]k&bI+@BBN\]^nh]cmmt?".TjuAm$Nj0b,:gQlD-lnNq"c7`Z&=`U]F,0mU=*DqZ=Fi!d,o!\[#hK7p[R;*%;W$r"bB1Ce\egS.3*X^0no`qKT6^93aT/aVWWY$JM,doFo&jJqUaIlr?!*8j7VeF[K3=:]isV"oQp3CL8A4K76nplZ?9"T7E&l/G%UYTRYk!B5bbQCEMI9>CYAVji#<q(:3?YkY4*V<gA4jEE$/,;4L?U%jlhMZ)s>*=*TW!<M9lN*uk*u(X7'AZ4_9jnnPd^ME2`H>'<%jNY%GLuuf^L3Ain)JC)F/*lD9P5E==hG.G0rn=<WE^r/eU'Vk)NF!F9hb7^V)O(0$X[E[P4!7"9h(?,5l=LPj>.N7fJ,OUPbhEH7%T0*KLo1$/NF>P\q:['N=8#N,3GZl9=JhYffU4EH&H+/ZWHtn*i%icNlg4kSKQBEtkZhs6C1+%IdLV>fSj2:D@kXaHmoO?=lQ!Xk/%e&>Pc)r40tqJ?\pSh!^T7H0;Q9F&b'jCl3/l,SjOl[QBBmWR-Uq0O.Yf8l9IF>ogFVVVsBrUALodJGc3*0\&9N!Mb=ns31[jVA<T%iC_":M]81)0_;1uK?75P')1#j]s?lRP=L,L$U;jPl+K$;c\5GeS",>Q?\Un!?T2RrW2pT>SFJoS>VDYp<3KC&G*h"PVjk@9p@!-O%?U%jm`UebrR+V[50)on=iACJHlO]?j9fMFtm"$_.lB?R>=>^t6%kEuY1/L:+gNu!Y>e`,-[juI1AiK#pp@"+VD3#.D])0&NkOk?1%rSJ1D[f"auHo@nf*'DT"Cif-`A'*#&/b6;)ASr<1E[-6#p5kX+Ks0%JQuF)::,-+Vc'\r`6WFS?eHn.-'ZIJtJ+VZBiSWE$m5Zir%e_n^Bk@n<^p_</kWr6TUbuL@Q2#TFP%Y2.OY[#jE>lInfq)08Hcc$QY1b6],Z*H+s3_;r2/^/Nhs)Btr&Iu=?eD'5;YuJ3UHFj3L%k3G#\qDrb>q=V*L/E9/DEfP$r!L]j(aP"X.<R^F>C>Zg]-3@FQUbl`jHPNc_WjDq*$\StG:i4$G#U*-7/5/((r(`THQ:Lsu<UQ1A%G,9,$`Ja]d1gq1bp1<YKV/&[FT6bAli/LC:Xa0[ArT+5P:&hia<EAhLbnUMP1MA[AT/=p>>MQ$H6!NZlepTc+,^!&:$>mn*KQJ+^%#5qKHmf3'%].+HNY2IQ.^Xs>Up<_'%]?K]LKmoSTE-Yc&mr"RI/+QG*cko?d!O^,_HVluFCP3cU/Ugpbag!p?j12@=;nE2_&5'e\%k&9\9gS]O@58Ogc?kgc#jHmq'WT9tn`Q;t7%X"k[TtWAnXDOOV@kl:V5?W-#T)p`\)-uIP?O5C_"17,@SW]M3n-(180'EO!dG<(T%n]`Dnfr[1pqr6C[RLja>YEO/pbqGC$L/Ia(fTiDja@ZgX&Q(G418Kq6X">5tSs*;VXB]J8C%LleJMf/0/^1l!d">-jDKjXJ\P(`S%k4tE_b?K9sA%]YUpTELA40sY4fD1_<%$2B&bi&?.0C]j%`U+/HgM/[Zo&APU)P_\Y2tM#NF"_-NQl2k4!e\mZjYF?0P`0Otm]f8<%<dU/@^B8)m`HhqLWu,qK8nS_oKK42/VOje<%l`D?]gQ8Pc9=@5QES[*4DZUH^qha+m#sPZUY3a\87s_4]AC&>!,DJ/A\Qh10/h-f%UE*+tbP8f#]UXo7=aMm@G3=">F\eW^E#(R91YRVgNlm,[?(';H,Ol9#Fpp/aU<pDh1&1W\L2U/RG27&e3"5asB[;QL+)fY?mMGZA%=mo&C<gX/r"KYTI1274T\n5$n!%;Pj);a,f:gqIdjK50+Q/PS=[TTgI*e0^7ceG%?4rMc"?hg?G\Q1#ED_(MMcAse2mW=!sUMuPr%DegR-?4,1(,u9FM_CeRh<#FRLb,\!e/)lOcK?8A_nW(B0S0m<?Q>bC81*aOfH[!s:1geQuoQBGZTKuEh^.&rM_NfcT)7p6/%5Btl%72NN`B@J,I`"*RNf[Z[FgQ9DU+gZ77jYN>l#m5P.?HhsK>UTC.a"K!dh<NfJo^/N#[=+Y/lf.$?9V&iOX`ThlR&`UBiS@P.fYK+'%'FYhI;^Hie_s27%?oW@7UQAf+F%mntd9b.Qd$I&A,D*E5C\*4c;4oWdU]ERjSn*_]W6WH3A?pBoo<Lo5]7MtWrF0-HfL%U0m4u?k%2tplUjciDD.1\![&1e3,W0G774Pnk1]Be&APOV_-2l`Bo(=T[V=4ej$`O[)<Q9nRISmpO)\<d&el1:/-GFa6&D/RtjAlW4)JD8n#%]<<h#p7/=6*W+HL=4;7MT@^W'Vu(Rc01k>DWYZLI]!B\9k<HYr-OOp'N5KdTS#%R#C5)];>isaNV]^V5Fs?k0//7^:-\SFV,Do!I%W8i=_2o_*Rh/T8R)Xc]rB[l@eHqhSdLPQ4f2HJhm?j]YUs1=H"*)lIR@qP>piAjn/^]1h".oHa6qs&>0hX&f`e+PQhY90r[l#o6t%c$]g\2g-Dt3'6FT;eq=]Vl([d(%-$b9ZVF[r.Kr_*.!\YD74@a;rD*8ad`B=Ru$p:_?8o!Q2J'"Y25D$G2M_L0MA$JmB1PiV2t]^%Mb7X)<3,h@l#4#PM[f?lpC>gJAS>F8?;AE*KY<c.Y'oE-d]kd,0R%7N/26:\&Aoc^=6WY7Kf#2F_Aj>(3(t=^(a]4!eD@:CX4;N&%g#)c'n,HskT&2_4a7MnS1Q(1jUY>c4H&1A5TC1t/hY6N%+%".9OTme%bud=><A`FJIrOh+KLc.tE-a]qgGYI:8#%Hbq=d\EUT[1_%Vbp`4!4MoG3B^T$?"@NY;,LL^8]tW`lt:C*_9:cD?pn[!nK'J]UZ`\]UFeUI=-*jtdCN'iYrC5i,$JH\[&"[oV*o'FS8D+6moKMK%>73*+>CNC>gJF>dT!%9<F30XHk=j6fUXJJr3Wm*[rjQAn4]LOucIQ:5[lnulgZupukMXm<h9G?c.bq/XrQ=!bJ_Sl+B%kIQZoGWk%ko7&s$i7Mr[@!(O\Nr<Mou/&COi\'_eQ2@]`7d4?b-<TRN4aH##U@29ImjGtJ4`m2b_.:>9MYG`@a[7;i7D11Y@e0ANSbN=S5#](%H`AlXH_#fPmIX4?o^lXF)7f"am1<S4pNC:h-h50/h_*4A1>WH6jj`'\im!.K[1b'0S3S^-_J2J+%13WJ/+p`YK8W>OR53fmd:8+)%&OaNpf;DG>1`%rWau2P1jB*Rth;KjBd:=jpdD)qed,AEW#hV&cqsn4*,r3Y/>C+gnQWG_NMn.KBn@Z+r:NO;\V+l%Lin+2PLA5[n%k26-ldDd6D`r>'q!?Bk+=@='Ed&_"-l<A!gOZUK'%q:1?FaN92Tog/N;^2K:-66TpA;15*<%8Z1D$Ko_qN#07X"N(k/bo!'5`:^^%0ZlABU6A5u$0.NQ)B7UXh]/\CNCBQ!m-5!s6;h(&s*,:a;WS<pc%Qi=#R;dl/Y+`n.n&CZKTp#9Wp;SVPsP%76]0O;E9VXimf`4<%8&O5.QCBf\akI99$"6ZUANVF]GduMEaT>"[-dq^g?4/!Jck5dREi)[l<mMGY[3a61Tg1Y0YmD@Pcp5o?8BI"s(NKo_!/iKenR3cM%7lg0u#XujaASGjh5$ic(s5`'aaP8/?&[C%&^BpjL"b!)B82&DZce?L(C_;V46o.H>HmcVaq!H-&drhuS&`1nY*de+fqa$=.$\!mj%"-KunZu9ce@h**-7ur_emL:#rRmT7A[4DU@-treQq9(bA*?*\:(&(dPr:R!_FLNi8jSJ$;cZO`n!8u[:"o5+ukN5(;<9rfR3-nl9%qk/raCre#O"3miE7l^]fL408P.tL%s7$X"b`SCK0T_&u[dj-A",$%I3?0GFYZ_N,)_QQmSQ\p09':R2\')?3%"l6WL7O[l1Ob%Q3%NCC);RON>;2;i<^N`'@Yh#rGdKAJQ&Z6@=t:I[R\pt&1J#0p2#.GTU3XVICj0QBcj-]aup)prCNd9d,7QsJp"M?sY-i[GQRUXa^R%3lj<39Jiuh/m;e()knX$@Gnk'$==T'mZoPRr`1%-em0Qk1Z?^WY9eq+j\X>4b*=5@c<pbLejVN=9@c6mnh1-7hL@f'JeT&`#J8@Q%"@rjcE-Eob6RomZ3<$XMgGq8-?/`78Dt@7OH^,%n](FgP#!bHW*FpDQO.inG7VTnp%:lJ3#A*f)"tZlhO<n>9TRnn3dBU24%Lcsd%9EJ/5D;L@WZ&;QI!FsdaadKuDVoJ+Une:35'-8_U6EgY%7ZNCR#!&eA?VI0>F(Z?k_^8]9a6NC'[N9,])=@tV(+9h:bhlA6<i["`%:Us;[..HJ[9BUrer=kIH$?&-[G^Pu9(TbT`RuePbFuNM/ef/u86T>-;erp(VoV*Q9Z]sbkI!Il"egI`)_0]-9>NV1j@+dB.<4kM%%B)t?P3UkV\"mLae37]um%os64:t^TMBADu4BS$^-5rc=O\Dtioed5BH%0PdW%I@;i"Bh-tP*RIoRg?P/aBu%S@hoB;W5[JIbZb44%4X3J+3V0-?o*jX<Kdsu9WlH\kMFD5cJuRsakI""3RCNGqT*c$;;;kB+g=rRaG&rH6^f#-+o!aGWpRjK(5HCH1(X2s_3<?kok1o0p%TQW:-C]U#@9RoDe,]\'a4l2#8`0K;A@'ff$cqg&*Q\NacKdWbp-%Otf]XftBXHU+%@c\\*X!u\W$pn=Y1A-O^_JhL$B7k[dKku;E%KO.%qmBrqkFu6LbH-Q\K]1(<p**Fhf3M4rUU!>p%P;S1@)(Js5WDd_Yi2:fjRR#PY+tjm!$rrO=`j#l9oZ4I4)@r"+RoHhC:mp@f%\P2lUFl)58Q"^pp1(hq;4-$/*=EaAT`G:;@cJ\$@nP(:gQMj4bCD=Magb'`A&UXcZn1/G!!R=O1I7]7<;8r9"IKohW3X*[nA]-9C%Q5B[ofm[o>1'srHDCUq/H6j2WH!=hB.78Esm\X.!HGCV,TjOAbENoaEYFTmJ,'Mf*X;Y':mO@\(cnobifNXYk"N%4mK?_Ae-$Wb?%L8PZEA!djL$`a'A:d6Mf*1YS!/k2U2RUXF2o3d2'X,nU(OcDG[o/pU(9()uR%R7fLG_usj_DhKqKi#K7&#tfJ[*cgsC;6Y;gPFrU%XWgjMF+krqMc6'2?gf]3V_:EAbG*2O@+EId>l%D%?0LU<bb4Z>>7i#Z_UW&A;"B5#^j>S.mRNgiGh_:Qmc.J:-C[I936strd&KX3%Q8'(":(>WcYWeQZdq8-s8A.sciCQ0h`1q1`h'-<AY:rHWEXK8=a&Vm;9)EFL4+m9;AM2:GU+9G(G`p:L?_HML^b2B'!#`;O^mH1n%,EN>g91W7:pe?*Ni]a'a/k_G\7cDoWh@RXK)2J"L9P^$"C42)9\O,Np$RT`O]5pM'T:B3RmN<<mK`m':3!-K![(^rk)MLAeT5;;e%!$!6nG"-K.@=HB5?^t3^lq)IM+bAZQ5)e&"d46Vg-8>`[LG@Ps<9e[W6l#]e>9?rbcCn0GG:A')6pEJEYC:M3B?ok[^,5[eUi@j?%OX;V'<d*6VSILO?6m"3m-d2c=.koHfFR-N!%O1.Ca,5#CLoR2;'5=_lS_$7[KDk?ZD;Ib-%L+Dt[`/,eT.l.:!Lc^a$;]DrFBbD]%>YKaH4RbNbU1r<k-8P02OP;h6<dXEC<pNWh^""/WZp#"dL,o%2)l[4K93j2-OgjM+?dkiW2MGJ)qqj?"Q%f7m2ZpIU]E8p=N<:d_%FN8:Er,(N_ic3hojQG,LAhT"]@4AqR#?H6.)7@-'#Bnbr^N3-8$J)s(N6#IL-0lY,X6RWYJ&T1QVXS>"#f/2bI`CsMG5G*UH#A6R%5<6R5nYMLfNGbISEVkcMUgEnc?s-8q]Q`7+3RJ&W+>;"dGX5u=L+khdin+\$(f/@LOLJ"Dd(8-7\Up1c_L;C8J98UQeeYtNU:IWV%!;Q#'Jm/cG!g/ZQALq"77s=>gc7"qVjODO]2";?a1)qr_JGbPAXFb6.GW*-(UJ/>mBr.`D0K`dtfmHTZj6In.F]K"SOq'C&03TWZ%enkZF+&ka7TH!;e]S$Z'",CDS'$EB*,n[A*'Ni)[[mcN1*CuVY&?@]HJ.`oZgD!)c?>1Vd(sdnaNd23PA+u7,8<;)CDP0^dg7F>c%Wr4LHjO5W]).HFj3%.9-b@a]pod0V3_eqAP>@`Yqi/$rG2Q3d9<(hYlfOiiPN>W;jB*fO5ius*l9'9c"/ltrY'_p@c4WH\785/Dd%?Be2.MBOBQ<(^J?WV?9Zl>!XP_;f.0[T]M@-*-b#KriESA)!UQo>`B+Q=(Aol8$'sC_q@#MTF?kc;`;Ip!#+jS()2P9u9Zb*O:Vk%8L/@nMb/2:?%E6U];Lq,\IgLTZas`H8^";ipe[KrDf?P1U-Pl';#9%d]UF&EZ[pBL^*hO@o<R+%i/tOYMZZeea(Tusd5[!-OG87D%cVoYE.&J5'M!I%2bA%jIRqo;1\N"g'U4:CJZ;3bZVCr.tbXn;I,>*+:@Q1C1NBOL2'A7:?hP:_R6eBBi@4HWf[uCkaCD<:l]@^$o%+;@-769kW>GP.X15*!:VM)Y4*ICTl'1*eZ'JsSTYM]@%+EijM)Q8Q<4@Z]4TE1SO-!6mfp-dT"a`5&cnl<;=Z@M-6/kBSpJL`?,h%8>!e\haW,qT0e]j$3QG#%cfB=(-<db/F7Y:Z;t&WmBp&$57]?;#a,)hlLhhn%mQ8:`LVln'O0Q6`N2Tc@Iokn#r`XTG5-DiQj`N<%]NJ#Y2!I8kW<l'Ao1Wc4`3f^9W(&r[2uu8%MrG%bO-Rd%l]%!V_1d%/`La?)ds`sF5eNI/`#CRh5XpXd[0,\s<uBfh;s$.'N,XKB%KIpSAo1Ub)L8"'Pi5.0VX^ld0$gOnNis-r>F6C(Nc,?PiZW)2?%D-jPq1=%.XVKin7RVKdKWVI.[(==bL`p9H7n:92F7r<mDad5l%2%Pj!/X9.<S(6t=Puk&GPhIdJ3tS8i%SX!13)IS)_BTq2(9e,X9DY1gm-bcL&/e^'lHm!tKMObh7%4joM\[f0bJn!;<Xu]#(S8^V%#m/%07ae4AO_JaNVS'dD<r$fkZ.D-Y@V$)kWgn9.Y8gjIDAO@$7lm[cOq<hs$6DJ:@jNLD*AEP49327-@C"bc>>Ul7*FR4;4pH\l%m&4c!lAt^93XT.]?bh9-?+a8SBgP'm>8+)E]sdeZRmM3_J@GC_.G>WYTA-dO_cO`Ro@jhl0br:#lX,"Uh0oonkKA8&>s_*_MeGhR%(&!+2.IQ-&n8@gmFl]&GM1N3Nil!lS00n;8[+d3d:lbbsbO97t]GnS&4O7lDZuQm8XKmPW(.9fsm?_G:S?nFF<q;)nTa]7V[:096%d"S]UoZMWZ\I1[7!W^,C)tp4T<s&nJ.4n.XJ_J0Q9GQ=6*h4$1FWG(Z^NDRW.4.I__m_Y!X\W:.k`L^+PNL4G/3u,M[!JoNLtC^V%,P7,$^eFUX]-4hBAgOanD6'WenXbDu@Udmo\e<9c('/OomT.h\gAb'QeA@4ees.=NfIM0c/jXkLp#*TYH7"SSBLZ"V:I2nNpf+G4%4K6c;KS/ErYnf]qBA9d+/Rt!We3)i+2o3B0U:AS@&F<Yib&q%rVJ)BB-+Zq6e+du:;*qZ)Iqj9]Kf&j<JEtOf?Zt=,OB*.D(<D:V%]X3LtS&E6$n]V>nd=aZ9V>\&DQG7'GD+I%Ms'Z<,a2CEjLPaeK'?U/q3O*bFlF#d&jkGHSqs`4k,Q:>/[i7.$Y<W&I%0&7>PY"%(%/C18f.k8\cW3[e#X[UZ%A+^U2=^IX;Ahr<0@RAX@Jdn[\Y5pW2@lRs<@c/BQN^@<6$*.WsUoC@D!c-Gj6Pol?boZ6<REuXBk:PLn%>?%;=<Do5[4"=>AEh]lRD@T6#GoKME2G^s6FW73g<:@<$<<GBt;/jO.:9R5'8@*^Q4@]?&!]jNDh2#4T>#6[+%SC+\ITf2=)DR@i%\)fPT!e*-s=94_"*@Jn_[*6BbUilfiEYD!0.38OT=WJiNBY8dH+2sY=lHIF]e:8M/WrpS-T6aBE3aasD'EW^![Fsh8#<#8C;'7*e%ed_FLND_j^%1)AS*!,5;0*,=Tf"auE!R",Q171IH?U>JgFeYfU:"KBbg);AN*bDMT4u5Gnk4#uh63DO_=OetTK?P,UmSh;*U@+U\%*lY#pBV3!m6c.ZnU-WkY#b)\?(djp5(_/&Ml4!ENeO4#'!#i['7Is@tXW=lI/cd,8/`o>[[gG7i/nE?WRgirqj,a'%WQ1j8UtcMb%]S//b+a;lJQL.;cQr^hW:Q+:W&eleJ2Gli3.J17u4t^n>lFm:7AkJXJKuIh#FG6SOqkPrh:q0aFFsqa\(/X7d6T4O'\'=_OP)3;c%*`o,T-?R/-*Oc;_/5DM'%2;>^2EQRp[Xn!`D<6GU!*'FLes'13WEkoc/P6&fSH(KT9=\Se_TBjFPb,h!GHZF##IFKselIhMZW0gm%mD?k(;4Do?1Rd2JSXRd1n^foK$,QaKqUM>`c/(k8ck_"iX3Fs.3,?^e\Ic#>4FCeq!!phZ_LuQ#&*u`'!:+4=\/bIaK4Q&1elUPN%lgb`-eaenbApH_<rgZNDWuX8HX+&VT??q<q),tS`)aqo/;=V$H[*VUQU4dM8:Y(6-BErc_>r9pYX9siu*$96%iBj2LksJa9MF9P:%h<ucH]-AEM%BNF3_e;WZ<10S(]<sBt)-il+D%F'p-uHY4lA=9=29hq!VQKYmJB[,]KOP3c^aRQm/b@6l.Ss=(E"OCK't^4nhYKkQ%@&h/g[Vm7C2=tGS86fik9sX&O0KZS/mHQgNoI>0N\%jN!)^+gQnLjLM5u_g==]I[o4=nu)as8)<\K/@WX(EKpQ$2htqYa[kb]cM`%2)'p#Ag.C6+mKg0T[?nN=$*!ql\qlXmsSHSlR9'fA(cQbK0^n)P@,bQ5UnAg/J1;j,kFTq,mb6$hgK;`"ff)#86hMjAZ1dX\LgQN%Wd)s[_:Rk70EnU8:TXf(o3q/0hNgmbfT7qMi<$(;A2UUoI3!g/RTto+Y6[Ne\Vcu4p]aYV2a,hOYK'XDOP:6'(,,YT0AA%OT?O:.%#F@0j(<pV>Lr5p2lN,gI6rRhJ+Kh:R7B<lUJrt)BhULqJ$jMqfKBC&]_'W^T`OhccRH'ifIo(oIV<",4A=o`1A^tL-!'f-W^BLP'%-484e",Y';$=L_SB3,Dd>cnGjRaAi2D,(*gGboYhPgfQ9<qDEJ335G"E\=_*jK>pNq.a3KL!Hp.n"J2fe#<?\bh@ecJ:SRGJ&\P'%7KG`Eg?$6gC-XMCY'Q.rJ#HWQEkC$+%u<)/O8VEL^>%N>dZ>p-m\jl%hL1HabHOQ[X?.tm*%(Z85m&nq"Zp(#UG<,-D:!bYi.(:>%@agPoYh0["*2$&]\$MO;'mf0O7rf)OFN['dC)(FZDZi#_FO0`_iIbT?A@h#^o3eL&5`/\LL"$CB;d2"8g;J5G.eS=V-'H">%YT6]%5Bo464h"OrUH7$54(qosi8$76SgUtW9(5aa4J6hi_;$`3=ci7MS"p>.=-`lth:)Gn1qU25>qdj!O<$66%5sQHR<39u]nO+f=rneV%i^(1:S0&V>NY$*'L+uCV$M.CR:5qIneNi6QTUf[]_\l;+Ao:FZI?S`g(+-/9YOB!<1*KDo+?Y[DTT$!V#!D'dR-S(f#*s'*a4uH3%>SVE`O'q%mA'j*%Rn+"87D4pgiSI<bF851A=mG<`Tm9dZpeZ$?FMKL*+D&Nug^Km>7J=63@NT-7Gho<7`0>meF,J;_T.F9<WeY6.%;DP/K\C6VL*a;RTIO3GWOXY:S+o3'T^H="MlZdIG2OPc04`7JES*jlfNF6...B:E-bGZCpMBkHfWWD\]g1DTCQU`CPWdFep`+c[@%:T6SAg6IN8kG-SQ-CM%$!0>dYOBtqh.'dD$<`@Uc'E9/Hi3%N]'j)s*[YtclNUaV1PV^F"eHn7YEsGXB5F<G\.^0,S6=h+>6*'2Q%DYeVf)K6L<)"f@4i(^jLr4Ut;!(eQnneL(K*Ju,=+c;!1,LV^8g>J"#1pe'kHO"?^,58(&5jt-d5&>"riCu*ce[1(18pGB-GPRt,%-fu<.bnH'()__`Y]F\7i;aS&W)Q9o";YW!5gT1C6FI-Q:,"gi,S8gANH<WU)MUpG3=]_c`fane"f$E?Q+-ZT4roV_43jfJ/!&]Cj%?kfU"N17&E4948:r>KPVX_7L'eS^7hdE)8o=?asTQn\\%QB8ScahZTm=8Sl_QI?44b+K#6aGuU"Qp1o5G0o-1.DnlJ.HY<SJdU:9%&/'f@&+)L3:)*m[:i+O0ih&(HYhWb1YWsGAW,\#]&7guU+_3`%$L-SW#FZK(1c9JB6b&bVWbX'[ZthS=(;`c3q4nMC_9FGM;o4$1%%B1G3p.7.%GDY>.$;4A%ng%Q3[@H4L/`U$qA9tioHb]1@$'"43<)E0%jGlYB?AVTG2[.nonOaVe5:[;IfI,p'I++(2I;Z;SKKJ@h%b"C1Ta<:,AQ9c7;GEGq6lOeK6IVR4fj!e!e!J->g/\XFNZ?]Uf;m&.#)-#@CI7I,-)8Ufk!qH"ZQHoWS7@O@_G,q(]g*7Zq"Z/mK%qik1+6**Bh?F&l'\`\JTY9PJS6McRbFIEb?CFd'Rh#i_1gK!iMTl+j]J`f<PkJg(Ms.?GFf;nB,J`d#0M'i1'3h.ZO5[^.+@6Hd`%*'@N0&sPeqO9B$58O>tn;89I0B!LpI,<AUrTY]";j!lBr:Q*%i3*+BkMZt"sK90KlDDqjLGCM=4g(1Jc_]S%,q<[XW0(cAKKf*[K%`Gu5sDYkaj37hp4i1_GWXo%tt'U[O5m^skXDH5\LS>FW:9m2sALBr<5GlZT=oFB2]L(\oUm,nQ?f>T4CZtlOig/[paWZ$d:Pb+BJ%@9kX[4B@LI;EV`&JM-G%5hTN+5jh8(Is+1T+abX_fB^4TSqN$:6<+cs6k-3.B[MHSe>c:)NH:>8G;_]'jcol1%cO\1(\7f(\EPa?%5]O?o8ScpPFH"$V>7%Uj>arOMoV0U?iF9SF'=2VB,d[SDFe+M=CGe#+$??.,?,Fu;/T,Hq7#gSALCe>n&1>SjADCdiAar1^9tfX/%41FfJdNU@aFOPq],GS\6%P7QQ<8KOg$rp;g'H#<Xaue@s\L9FJ7gDsSpP%>n0g0PXO.9`.Zl2mLACe!@dFplC9Di.d"9V(i]@&r)%f[;?1Jm0B'!n?OhM8g4:mqcUG=`6sm,ZL3C:97V:A35N-Po"&/JYe15q$<'>3nijYj\*g-@,hrsl\nMA[Mc#a:Uq43JgR+F>K:D"%>VXg5)8mK7h%3M#/>^JlEL9<S?q#OU>Qh-7>:eFcFYVa.aNeJC'h5f-%O%RGnPQLf'W.s3e5H#%.\]qGHG*J^UEcJ6QFJ\aXPq>7%n"q=q@78XrAHP.@)R.:UY,Bt,Kk1X1FTVJ*dSmTAXV=IP%mo+\-GpaJ/6q'-H=R_,.%?!2FXcgr4.p2i.j,dR`@aj,f<tA[_`:I3%PPFbgI&%Y!%+$9u4XO`IP>Wli2mTCbF4M\k(*r;*W3]<A6n7Tm3JGC?iNQ^#c/jXfQiSNDf`8mK>qI:HYcgQ![TEb#`Y[URqmgMT%J$TLn#n(=816rGnA>PVXM-h\[_Ym[Z0@W9aW1Qs:Ll5tYR@</'[7i#F)q_%3UWN=QIBUC<.oYfm,8aGmNgTE68^J-Y1)+?C?DKs=%,86P;PpTa)F(HLG#[>p3FpGu6)`U`nEe/#<N%e'@U5feFn;Rt3PK!;3MNiTQ=iuOJ<f.:3F19"f^dM)dCt!]kE,=19S!#ZFeZlLh%*Gm;_2g(Ds>2RAq70Cc]ErOOb+6/"+dRJQ2H6;D.-*inS`ObcP^OAUPFnD@QD.Pa2/JhqUD9h0hj<TeEn(Go)QOWD5P8/4uIOp[;%gO(3C?,pG/rGpkA5SqeQY[OA92VRmXo0YVf<'!'Yd!QL0B&^Yd6eRK:;'<XhD.Y+Vbu^Z&Jhq5+,G#u$8)HY'<QeLFP%IG45dC^*%`$Cfd)P,299>&C2TGUS97YD3JRMf*TV?Idc(/#U,l,o_7kX4JheZ&^`%Iag:,JZJ(qFIc/V_-?b?qsW`P/p\:_Q8%s*gGoUG$N24%W1Le'LLjDaZCs]?BdW,-,!DA5fOWLX&`aX<?c#LF#+.5`%@"fl+a6qb!QO[^E]\k7W8iSH]8Lid$$hh,@,ShHT3;?;4ac9g6!7?@%<e)WUVnY[]D;F4M0X^#-r,(nX-)'t9_8Je1XC$HlJ6kjob)1T3-jd,$Rp9e'ZiQo,D(c8+L):6q*e[TQSq49m^"D?;<9m$Q_/T)R%cK3VR@c0RkpJ\9;'T8sUJL6T3qG?4/WIm!hJtco4N'4<h(4.>PcL6i)9eM+Q#FF7LTCo)E/&p&"j4fk5F8SLcG</A_HmsE!#3]Gm%G4GmW;Cg>:VYB.>NWg=]'&a_9[/@m[.^si/9f#i1kEaJAk6P6$(Ig+ZrI6/Ihqlsn44<Fp(j#1QRQCo9$kj\-f9`jYMR,&Y`?f)W%^9ji!PP--kKOm#[**/-66$Q'sGUnu*;)YoT8GkYh!I()^:qXam-md*9Ai=KFmgOk&as<"\?c$/2Mi%Vld!@eNXDJDu,Jh%D]T#G6%,N`3*ROuorR<tG__`1)rXT;Uj4e<&DNDE`tV2Cq'fReTUii-ji(4^nH\dJI\Mn/4G[?6g\S1c/26C<n:qQJaEXR<()b)/#q;?o;p%)FCVq=m*0P:)!bO[@Dh%UIheh*hb'[TJh&.n>.L2]!+[_:_2R@foFo"]E_]?r(2fg2<>5gSgY8U`0BO^_o&3%ZlIe<'Qpfj.SQAX%jnNnNA3-"n_M1Ijg#8L]%jC-t8R;;mqf\-h^86J.p<Xt0X>eSb'7SeR-,a_4n\UtT,dA1++]J7iB&MKFUHi)RlkUNKKU$n\',]8R%jNMXfO&KR'%s5]u;rsm1UNm;OG(Chu.k6`DG-jGFp6\Vb9ML.j*ec]'.08<g*_h)9?UX"jNHEmGOe@l&_D":S%N.X:VKu1ffB0RC%3q>h+/)ZiVS=6E^JVjjm>Mb(WGZ;YQ/^6DL*2=qGC-P44U'n"7o4`bZ<^A;g)/,=ZHu/lT1)L2J78,:\6b3HqOl`jjR]q0r.C"7s%UFLP'*f6QhA`?iVmTW?0TUV^qbrD-nL44V@&#<_Td$g2hP'@fpX=G1pKfkFWHNU(%96!FUlPO$;j?=1mU0$VUDD*ruJjt*FX%#K#%Rj_#@R=fbk1IY2h3u+O8Upl_8<sc9(SV$bNdkd+aCpYrt"VQFk0/GE7]cG<[%%T\Z<+VKC!]#u4=S-E=KV*Z>Vm>&JnS;?k&_:_l%b.G!&r)O%9V"S,;f]l?5`dq??EBd3qG#\d=.5_=;j,r89_Ph'/h=<5R4XsKsd:Q[JDX,B`Gj;A&[^m)elqLk'UT-cK@8[WtN`T/h%HC6dE&Y#Es1a>Ye%cuj*jhKC*(Sq('Ahk<Ua4,bl9tbZ8r<+=Z<#m/IT&tL/8cPH]G&*+uYl54Z\Mh;s9M7:$ZrHe,ISkL"5,'OM%`/JqP`-in[b#nMMDu8SI;Bq>Fbj%h?(W0[HHe?%uUiTM?NhPeqc_?-8<m&8YU-glVlhK,r3/!>5OHN.%O0PD`gfB>7nd8"^V2(%W%&(Nqj.L2,(HT82XXZ!p!?M*/L7Zl\-kVbbHFbF$?Q&?T%3H5Jm:_FRs%^#s#OfpY&NaGJJ[bNK'd/=DY-"Na6VG[lqQls?[mDh3M%&SVYX(gl<nHXj3Tc/n#WpZg=YRY%<qFi6)QXW!J;b"#qV9:HR11.Wp8OD!5DQU[!UIbfJX5po,'V^'<*54"`3lLBLI:Nm1`$JO\4%'ce/N-I*iX#K+O8l#Ea,5)]98*!6MJo:bMn7K\G6LbtXF&3+_8$q/9[!\a&$V?'Uh]b,/YU&kG;4/`dh)UX_U%ca?[H"MpK:P@-5%*PQK[,hC)*!!eFc&R@*B@>Boi\lQ^],dZYh%,h_UPCE3ReX'Ul#Y<^-[&NQ.qlU`S-(;nQR>F$t,no6a#2iN]ij<]_*9kl%pjf/:%H'Za()m2eY.n7HZN`rmW&5H_F/b?i#oo!\g=i]9ZbV@(rkO.:]+lh`l/.h]AQ,/Ylden-L6V/.d:'K!(kpNCE'M#E&UDTQ"E#&;K%NqA:N:;,PGlZ>j'6VH1gVauF]6W\0^D;9)m0JMnkSguRY$g6mfC<(K3hTsY4rcPhND_lR6;[>qWKraFc?`dYbNGAJ)UlDK+c/1Yp%jiAI(T4/f$]S6tF#;At5n(N2&""e\Y"4aI.'g@Vu?)jgf8bm,igAN&T69ZBp`9W46V:$9eb\m6^jQ;rP_3lJrF\N^"m]##Pk2od9%I"*\\k#`?_kE1>FPZp"H`'6r:BB=TdHI^#P,+\9V:c[gYP8`;i9*\5dFH$>ZKe'kcQ33\nRkQ=uEl[;Ho(e@D7R"\"m7Y8^^Q#uV%Q>:`_A+G7]iWDp3nfRUcS.:o42q4PNJh4j+)@T.Xqoj)G1]PaYc^K7@9QK_]Q`tot7@J(h/:dGi$#*K:&rsVc8Jp&mTILaXY1sr+%F4S-_`/tj!cpN1B@ecFu+MFjoWa!\kpMNE)5$/C[1/[_H$G2Ya8G5^+G3]ih[(e7TC_?);Ob/rEHeU;1+u6L,;jL'l]!e-[oF4q3%@>?Q,bu6MYD6)?M9TG]K`,m5n`Ii#tJKr.qE>N9k9WbUVArA*#Kh:NHXV"n2d%q)/I1`4T_-riM;1MDc4ntS..;QI,if)k]=/f^s%^lUnFNMJ6Q>8'/`@\T"Y<GU4=WkN%LfV>/tZ!,p4)r*\n5hH#Oc4g)[#ZGV2521u:Y`ddrTFaYPI*7.#mlC\$%<Uega'$gfFI@Yc%3aRhW\Ljd,2gU_GGf6pm,^K)^ekhIY2jj^?n0BseV%4s:_;:'IeM)%m*uu=]3nVoDBrTNaMeYh'?5j2j;I,8db.;`<:i=hR3501h%G]9&Y?7WM>Z@_kN;<jDK8"gaZ2c@X;CJd6[4#0FK3b;tX,tkVN.E.e(@*bg5XD=`=JT.D06X(`0,9tE]XK#C]bb*S=J9/1h%u.Nb%]?qdDne)@4);:C%S9YC\=Rl.!"ADu+T0cCuTjo.JhP'4_lF@+@+^_,?ls#o+L]R6]MZ?L`5n5MeGc57GUL`<2KY/7.'_?W3GWD.s%2m''<EJ$nZ;;KA?LU!C*1K1*.)JX;.Wmo*m[?XA09#"4XfVJ[:VeO57AAV4W3_bS`S94<jc:A2E^/8OTUMo0a=Vb_'OC0`mi?Z%d%]RTd[`UAg9j4j"UVj!FOLR-I31*]P/`c&;blRWF;_W0!1XrkjKr4$\+A;M]f!m-,X[am)Ol%Ho(SECe=a5V`UX\H-$<F:,fQCC6q%F?%s%UPHg7(?O_>mOfoN"%m$o&PAW53Eg>uId8^u[B>B6Jr<HmKn#rWSZDdbm,)fU$07l6R\57][jit+cZb.Zd@Qb+7Z$FBA^2'B%lW?nahubZad*!W@pRB#28t1J*^nk1.(PU;2?oUVVo/r`&+OK>[ZQhM8KSGS#<Weq)M()M(K$=Z).?:hNW%Q#LnHA(Hb;6)tcHAd9%eeVuQ692\2Tan9j4.-s-C]'p:2Pk?>1,Hi8PVL:4[UKLKn'-(UIAt*93X#pm*7[_L!XN9MStgei0=BQ/n=@BGHY6%.+"D[olZK-[%ck?QSpH#^:*/GLX#<9jU*:6r=CoZ(GKJ0\Hgf8Y]HOt.]PF:oPdLsd2"Q:MM&@L2;9[%X2"7U\(%O"HVO6?kCHDs9-<<Gt;YP+hR%fV1@26&WLL(P*iB>kf#a,/bLnAY8?XX(uUn\u:QCH!HP32,ojB1sW^U%E7[<8/bT4TI\I@r"*CVkL#MbW.J[ZjeC71hfCh(6A4&h%FXSr2>ZAA.kSID'T&_oNcp#dh3aMM:kudh(FRi-fUBn`#Lm,%P<$7_UkW+jN$.FW'F^t]D4dC!QJQi</FotI<_3O5#.DTg2]NaEs%Djl$&GbJD)FY`t34g5-Z!1W'I\W6#2N[&ZRQE(:b"fSNn/c,mRdCj`lhrk+-@Z@"mkpi].8+MTBapPU^e@n*G^7=Fdjdcp"72$J_%nD''2+k,FFW+s3VlN>"SO6AB]8iLC2Ul:XR3jLlFC=mBPCL-K)nj./uXnn"'p(k%UenWb;\V!+-O92@ReZdF'pF>h+b9PZ+FD,9\%VHO#d'fB4I3L%:ll!C]GLmqk\;\$6K!=<A3!Y`DRJgJ2,V%K-)9@&]T8;3g;aSW`++\V;@G;\Qf:'2VU7c;_53P=H($XmNWH>Wb>%LVEs?/\d?AYT$2J"<&1iFP5-DnOA<Hjeqtj&V&,k1?Jj@8>Ns%nbI;4"s?cZ+pkt=Q9\a<N:cHATu\PM@mu3"jr5"PLur)S@Qs4H%iG@%f5Zt;3fD;5/e`t:KUi9>-i!IRRCA^2j0eSNc8G(gWEgSE+#O?>hW2mN'5b$5-[b<)=mY:*RY;(J$%NclZl,Etp(ibQOckR8m%A.b2GlnG$O:u-r*lY!W0!hF8GOrYbs8^%k*UK,8a@tNA84bP'D^rHk.4l\H\4pq?kL*tM&/Q%S,'b-*kT0(_aqYE$IT<n`d$!?8T%&gAoVT;Xac<@*H6LJn;l,=$Um,9!50>fb7GoW>D_#$b!N5Q2]W?I)8NJK:g.YCa2niV]A$f?Sm3'Y&@@bo!_?Sfd]DIt3,F:W*:k%26=RQM)`@N=!HmM7ZONZ3Um0b8+&EW.9(HT;j[0S'CaZ9k79+]eI8!7aa7hrWuK;MYu(CP`uQJ<#JlM:TZGj]]K-d4DPJ_en*0#c%Y9"F/'nk=K&e>#T.:co)hXfu9$Lcq2R#Ge>TeE0#1TLA"J2NG_j8H\r++Ytj]K,mY+_9OOFdmD)'kZ:^m?Nn)Jj#>`@BEB7F8N'n%/i.lX[lk;dZ"5Y6\PfOPk_nF-J!PF<YYV@9ABMfi'U,gtNg^i18G6m1`.9]9m/^.-Y%DtG_.UtqO%O\Q\CI\.;646D2jQ>C/G7Gp%?g-33bpIbQ#`Z1CbE#lHQ#Pu=&u+s=fBVmr08f"5oHt'B1eD*\Ip;8SpM]io;-Y%T\*;s`^h^-N'DB>l]?G^Q$%[#8l^0@KZa-S;%04!]3>3TEn^V$4CnM`B3-q9/i6s4emg_gc+'bh\qg%P/;bpGA@/V+Rt68`+3n/aaI[oq7?8KCu?jOdELb&l9Nn2?ac^K?_+O'H[V%/?*E#6o]c8m(6*>Q3:$@(L?(1#F6O,I]U"U=:&H/]-/RNP@TG1L;d+o5/e\DA8$!,lepT-"4cMM,UF*^]@FQ9<W;kNIo+A3,D3!Y%'h&@b:d40UT/rhjQ[j_2Vp(K.i-si!A>$VdF8FjAnLk'7iJ[`=#'.N?>O_1CroZ[tO:f'2;8r&onP]UOMJ#m^2?NBoKM-!tHC%m[%Cu4W1:Aq,hX(i\ar#43a's;lE%7j^R,9`ia._qO8#.h7D"n2Zk\?(E_Esr:Ki9>;P"K+aTWBLH\T%_P)7UW51e@S0+:D7Q+f+fg,%j$9nh%.fPW7eG!+!I\"oL@R>]`+lYVcCRur(.L;55BgH`C$L4G&4)8OA;?>2X8glSGp5=$Er<fhqiI`FarOYp;B8M<n<9UkfaPsg%S%^0sje^f-Q]t<r((jOGF,?PTbN5O%7VV(nIEq_V-^i(Cr:(mNN`YETP#E=odSghZaR9"@]MQmZjsYRaA$!2,N/M0&HF8k2d2gKW%'=PA<R`IZjVU3eMS7/\N1Ik?K<kpKtR%R`P!G8eK/P0_QP*1A3h'oH^G+F-K2A$4k;gb'UTl@c/-X0jq#h5sf@'"#A1jgVS;5Hh6%N08O;c``rOPF3n`;YAXL/2X6mI=#fq+,*aC^]k3-WblFbq+<kCWoe#[h>jc'*[\Zp\Q\uX*\#1i4%[t_M+n:9&eM4jBeE=R>)0;H%B<R*WrG_uSS\\EF0;\4t9*\I%3r%aQ*=/p&XLWTUJ,NDbM1+1eH1`^<,%>mF>Io&rNFH;:\BpY6_+Wr,^'b<nO!X^OfUGWfBDCuS%V;&Rb"V.aESNl3IU'Ce^\)%*=^Kd.-'&24dgRW1EYXXX<.r_b?-m:45K0r3&"/.,M/Xmh.<;<^Bm`tc;cK#aWUU7(`jF2i&?aU4N%lmLB'bW2oJEN3L"*K@p"CDZM\RR[Ha-gg8<Z_4eXZ>h[RrZZu6O9[L/VRb/#DE3gef^6&d#4)q,dAiCDP)7T".VbWF7uWCs3&RZ<%_k-t_j\B6QX.<Eo"+:A:H(O]ngLPIsI;7<\HeQk4.Up[,9d`I>%0t^gJ)1(e1/\@HN'*jfG0POdnFr>0HEa"Oe$u'<>^g@Wq/E"&%a2NI`:""<C+fqK>Dh^A6-qn6DiCcY+N%A^.(O76,lNCA"$1fG2U^62_#^-P<pl#D>:EboaYp=__e]XA>S/F`'>=W9^\2V[Cp.h($%?F?!E>ApnpHtu^fPHm']<'&Ei3cOq;J8<]7D\n,<Es0Lq;Tn<PW<:7&L8/#[pEs3sE5*)BaZgG!R2NY)!t,tFY5C$mG>/=,d\%pU%!54fH"@<4alK!9"mPm;3C\eHK<a03<BVstOSTCJP)>KP)!f7+tm:sW=;-M2[b.(CZDJWqY@"8d@:?@eMR"NZ*FWVMUG@qsm6Ht&f%[irWBe$km11!BZ:@,7j80T]8.JNV.!CI58a5g/E/#-QS&4PR4&;K"pU]s\tW6>PT>"<9$FQL3tSN=;JXT;#-kA@)0hJcHk66`]fd%MmY(19F1O>p"0D;(VAS5q(r,938"h3?m7F`_'Zprm*@WC+1@Z=0=G0TAP&.E==V=Hc!3<Vb4\O"CNhB#RNeB2jhKSSA`cJWn,AAt%s-NcXcbKGUc[Yrks725#qbM_:q*4;A^G(VW?.meYp[d;BVgn]D^]2@3s87eiqQ%C/r;;nbs7ft#q/>ZLJ+rPafK];+pAb/$J2,0Y%KYR!upck4&LE1%G,UnLoR%8FA'\kL^0TCG7`>(W=GE$utf4b/.;qDnrLHVAZ6+n[A7,1ubgo@E-Ykn"Z5jb0M(Q.44SaNDm63pR\%.<*%mlkh[D$,MM/$SC'elD[c??rRR+ku;n!%ICQ6Vu)rd)qB`%]@+P*'C+`4e<Wa3'8:>.gs3b5YI(PE96>IpqNmS6_8:*i^1gdl%hn"m=,"2ms[&HTPSFCV[G>@k5GHUeCrpf#Imk.=^?gl2C2dDPV];U)4)66Ku[66QumXB2]@fUo32tF'k4FY`KNijBRR$6^:bC.,=%qYcE>4*]lXHM`#7EUeF+>e]V>:7f'e^2X?Es-lVPn.Xc*[).aT*?uXBn^50g,JT,i2*rOoX1TCCddLpp)1Y70O'6U-&nU/3+G\1_%^alV_ZRN3r!9@Do4@9[8RiMiC5_b9-\%5`'!X@)]W<!C.5r`R9):R*8:\L&nB.Z+V4H&q3a.rFZ=$n=<j3\^TcG6WZFL.0!4Y6iU%a&6<?4FbTbIbVqfm<`3'`g`&gXh?KJ(3%`/3Ia+2@Fg.'SSJgqE3WVE8"UqU/$5]YeAK,>D=O?ONusEW*1!pZ)kJS5f[l76diLcH%B,P@ZrJTYiF$:&pKAoeY'B&i!d#iYr#L_Sm4*LDrO(\"I>Q*3,n>TpT39V6/]8*LD_s_h2f&pt`<ohUbLYEAL]',TZH.C*I8>O#d%_=rr7hG7,8($Q`G:[b1g`"34/*#ZWlX]^-;J%6.3"l_Dn8UM+JBjQ/U?)*#u<O[@%8BX8[,?+'sPJ]*0X,kg>4h:$J"u$U5-Oih[%S\;bh*dm#%=`VM%V]Yi2G`@":a2^X8=Pt9f7UCo(a>`NI]rfKW8?T5ZoFT>G"TRCN0Y$sHBJ<0o55r)QiJ&E?O2(=(pYh`RQkY=J%Wph$S`nD6JZ`X)fW%%mO2"$PoM5(G_DY35%[HM'J(9*baj9)3>%Qo"EGG19&GIlKH?2(sU5K9JGkIV6G4Xf9iZ_ZMJ=\!^M3GfDB%/>]"WaMj0,ij(FR3I-B'/7"99:JLTXBJEnl6/Sd,TU=(Mf%Yi'H(QjmhhCre^1$Iq?Jr4Y?eo;[_E+TBX.+$\,O2[>2TjqXZ5%;n%N@U>O)J,:&5#gucWYg9fX78Vrj%>$^r0?4m/]RAh%k)K]YlYCf!rl\qBiqG<%pmo1Gd\!8V5h&P;[mY(dBDQ/_(B'b;=B<.Hp$7&%_k"J>hDl)p@3g-*X)O@E2o\e.^WJ'91EsY80>k-?%r;SG4D5SRnZAND0'iuUn5s1F`g9WW5b7T4dqMK/p#g/sIMF+,acX:l)p6,+%\mQbic%C6<[.s3-qM-:;me+;"2N$m9KZ,q7gCF-2lMG!U:\3NB1&WrAO8H,qn)CDh`GS1^`HtKo1n):%!ZVkW&iQJa<;F/QBe;+5%YXk,SDi+#PipLb,rbZQm^BH0bJ%8UD_Nblm%"Qm->oeS>6H>D]^Fup1:VFo%C$m4eA+:`]]SI!0JL^C""<!4TK>kJFd/[*`NaS(X%/b`d('K,i41!o-$j%^V#nW%?`/@Z!$X*#SWe)q,8\d%&*d!:W&3d"1Z/[[bQea[YZnMaWba"O#CRR`,(G)E#"H]kf\24,!KN8XA7%]AGSn?DU?=BbD6-`?Y46N]oOUl>r?@%#tV'HO@Ip4^r\qm[Xf'2)Y]i?j;DLj-VLuqS"Zp1U1OTL"Cas_gnmQP.k-c^?p]BakC^c%@Q;G_?9c(1XU]XG+s)TTWNgUUk&?-gVJpVg$<r9Hksf?U.295>/tU//G-Mj/6^TS;k,!+j^Kp'&n8,mUCs[_.B?e(2js=_dB_H>X%g]F/kFpNHGQhriq7g!'Ej$2*"*Wr!mmcqUZ0(\l6fN/F-J9fdQ;*&@>`_U6LPYK&?LX>Pp?0D:3RY#"F!P:<]W3Ik70V%bLC=4hC%4XJ'F\0HNLl;p;`bQn$qOHeaIN,+-W<8XHJLPW)Bs#EReJ0j(Z>33Vi'Wn`O\Erpo"7C:(GO++cQ%?($n+,Z<n@GMQUB(kBUJsVX%K<lCc;s.leg<Qh=J@RnGK\k1F0TFUq_2D*T`\f;ia+\!OEj=Xc\[Yaf+bU=dFaX(jl`>=VNFUSjk0\R[5?WUXCi3pZ>>]]Y"27cY%@7/$I)E>Gg1>]:g^aOYN]LW17d'8oX@PrHC]@g#'(Ta9IkcstBeNPBLG\tZ^as]*n(lC,S(W\kOhqf)7A4!!?m&qsm9sC?NJ']$T%T_fUD\A7mrKaA-m$]@tiPLmfb9#>fB6716aW(&\=eMF^TB=P&aVo]59/;">:4XrCbI1,AhOl6mGoX*.o?8)Z\,(!G2AkJA=XtQ&8%0q?ghr]G[BSckmM(`3[QK3%EZ4_W&P]e&SQ-=[mZ);^at%F^Bi4O8?n*Gl0f16[t*oB2^%ciolQ%?DW)5,F9ZpqtLXGU`r+a*1C#%H.;MN%89l0]B7;,5(d<\:YO/<mG&^m6GXh8VqMib'ftC0"p=ImH<Zd2VRr`?fBM$Wq&AC"_7/5W<VuUEeK.De5-Y!)552i(KbAau%`uOu>XpuDO/Vj&(EiUZdD+nUL^7M^/iL8,@S*8FK%d\-LGWWheJ?q7a_n5(QEV;a3G`8OAMEk7.7>0Us2!3T<SK6njbL1hH00j1.%^^uO_P.(P1NoVti'#WO8#W5mPjgR5g0Ge=C\F3@'\h)>&Sa=b)cm7*NEp\6p%NJ^*`Sa/X<l]M?2t1DGL&N8N:n?e-jBM3'0>.6c%BCKl<ktCXk/.T"Z((>p`RQ;6s3esk=d.^[FW,ghgW/ta1Ro*;P&>SEh)/lG=c3IL-_0a>rF"t?7b>MNM^0OdmGPotXmsh,*3+<H-%g.BlU=UZ,P(QRodO@JdJQ`C5fi_WgA4r*R+8EfHWF;eb;9<Gai"<ek^@^sG8gDb=rnHF3-$g32GW0)=6puf^nV69^Vn(.UkMd-]&%qK?r=R*\IC/H;F(^YGZ?@?oX>USV]?Y>),kIp=Aj=)ujDS/\hiGGK&[NZ#"\PKl!nQPn*G_'#?(in0cmiVgec4;K.D%NZYU[F=O5%cu.7*dt+1FiT_ssjuO!\4]3r"-.D=ihp;pZ*p9`e%oVm?p>QlEp+ig"<NdMFd44PV5p&MU+c[5Kin9/8n_5K&j!MluCW:cB[@aN?%V2b2KDZOd4>ghWG)504.SJ"W6fN&MTLS\Z<\#:g$EGdOT:nll7=uDAX3]>\V3Qr]ANja(V*2m.#EEH7se'BK>L9aeC1H]Yd4j@*V%[hAr(cU-b$5<O;JfdO+s8;D]K)<uODY0qo14^hk_6`/'?8lVMZ\6o$/b&Kj,e\p4@Nrc<?1qcRENQt0A55]RiC!P`lS[RHEWPi4C%536K?(\c9oj$J$2q;]t/WF;9_,jCMY4pd8dnr\5M9'+)5kM`Y%m:fKZX`PYG8&/lCbe/CSgm*oIe\[Bk5ZNhdb%"Y&BlQ-Gc.-]$%51nm(A>H/C%ZlkQg]L#qJGu0$>^m7B>G_,7a`QmSXkq9Q^\pAFG5-A"%h0`.]L+"T$#AsVpH'^\g1=m02Q#2&Lo`VRA1Z'sD3fo;%$^je!i^fGdn31YX!JAj84N9OQ8.T>S?^<OJ@%)!2c0/'qC?94>T=Ru"_099oH7Dm=,bb<qjXfA/+_3"mJu^\&RTo)KXVH&HLT@fJ%:YFJuMZ;;?mU`n-LCa3,1'/Ts\4CsIEm@#c0>qPa)m^7p+.Vu175tV!!?.*H3_((,7h(;V^ol])G\m')M&IH4Kpl(qe#i/5c?\XW%a8Eh3:i/<0Z^`n!>^NZ]UcSmWOFsn5nEi\Pm,;Nc%cMaj<KcM'1d1"cBB09SIf4,!qBn`t&,"*EI6Hgl@89#MkJQ=q?Q,g2o>P^J%f7uHIppM0/k>Mn?/X)MZPrehc($@!qP41:ia6#Fp]52g=6?f$.o:A/eR\q3Sj6f&%3q$:4DU<7ocoILgR;gYO?b4YS@%a(WRmS8[%#hA"R-;d+Y_^9Bo3W9Z\\F9:oXXEkb`mMnn8O`0i7I2>O+.#H'LtTkQFj=2/rFCe84WT#qqq74W=5tiaGO+KZp@rK9..2$Z?[M:%%96`Al:8:aIi02RL\4D[O3t!hnN?>7<LOi!S4j;SX%t6)^VIRa\l^T%eg5#EiGk`,,]/K5>eJQ2NrU]Lo+C3NL=J_Obmt9VY37t#$%d`AoOE+phK8T!KI..f52KTGCZ/a">J`=-^FPPrb:dkNksN5Em#D01*m>^l_MNld6u8Lr;s2!lrR*P:k#*Fbu,Zgl!9g6c/JQ,%#"%Q`\X:ZhW2!LT'>\(@^;-J<9;g'=a0_H`^)iZWYU\,u1QS0WnP"k([0dlfm6h0QrGXDLCPP-fCIL$uOs\-)`^cge-gn:r6JH;o!5p%PaQm-L>5m&0#C0q?#6&WB.k**1VZXY0uUHWJi6,Gp32Ts.ooE+]B]>)!ncA!QhKbbD>ej$\LjT&_&INf.^c&2kI`l=jO2cBHe@mA%dc0W=UGcdQ)UtOr9L*!9-a;%(PesX'nCEX_Pk-U[J5Uc:@9qIB)qR"YVKVF[iskIE[H0(UT"b1n'c!%sgq[eN--pXC4gE91EW>^8%AV)02.-.'!U=f:-+&XfZ/0LC%p2CqT8'e)-VZS.5BnJkjhtbnFX\u)%%e4AH*"<6"e(#FEjl>8gSGc!XH;KK'<bt'2AS!kA<;;4o%c,f$-Bj9m(4;G'>E;5c_@Ldr"p+V(!rgq/_kDY!Q)E8GRN$CAVH#1t$c#kTXK0;s'#j;L,QGp!R"PGm=lQHBgqQ-I;PP$?$Sij!_%(W*O_N%1_h+(t*%dk*eFFo<X98^"i<AY(a<is`#fn2ZL.m!Q9\&a6Q:0ZC>2Xf/%e:I31c=I);oI`DRVQfH,(:Y.PVLMb%]HG7Y=%.*`.nq%:["07gONe'5W8kDUW(&0+`1MYm>,^u`W9k#\g`XY:s^e'dJP_&%[)^(l(<5KoIK7e1QVa>[;N@5@-r^LS;X=W]a#o^uZ&%e6O<VGYK3*G@0MS5)3XC;Z(qA,#3<OhPJ)p7h%rXa,fDe3S2SAGB3o=JJ3+hn#tgL2Q`<f/Gum=\4LV06]BX#^MsR@C[#O>Fg3J_%niRb-kB/p?_=PLX[ekK$[VWc4rI"85GYjpApF,+bQrT5<&*]\siXsZ>d"Kh>+8VWU\SK7"2)Dnq;,<`]B"3eZR-35-^Tm.\Ed6ks%T)OMW6IYr_9OV?LqYpi*0<;LBL<u'j"ot3;RcfH,qsf]WFR35XaW+MJp%^$ks%u^c^O@@"7XcA:M/8f$-T1Kan_@#jhFd29QR\r-%Fg$f&>)s.\kgce#.Y]<"Vu"f(IhFuSna!8LM<&Tf;SFP*>3"Y>E;nMMbuZW+3oB.QV'fE\)"nR^X7idNXhEmW4Zi3_4'g!qB"tTm%hWS^=j1]O6EZJ<V9RW8,UmZ**>j!_m@oZ7Y[el'+RZTdCHmP*%s$cJ?W#fFc+#X*u%,;]1.Y@`M&:2p?$g[(M8e79%AZ?nRVR9]a%:Kq@V)XO7]M27maPjDjAm6oas]dh^AXc:3*,$VFIeB!)&;JDVaad8p.>#MHJpc_`6nU*F]Q0puB>!`b";)?k!%AT()OTEc2%3rn]%)#?:Ghrc4>^K^:]]XR:H;Qr<=0JE1N.2hs<%`7S!YU,krcdt-:Woh-]J*#W7&EU/X7M(Cj]@!DKn1[c8TffEO\HC)3%U%Y-\7kP6%&Ct+=.7`Q#",p<Aq=#uk\\kt>e>cT#p^FMZ+3gdk)]7f]B4)tLs4nB<e+29==oTEqXg^M2ds<W>g"F1&g%MBLM8@t>n<?99nL1fA%bi/mkRWp!92ZE6m!4:U4ei6G58U-c'n;H:;$5-ggd@JI#5Xc`d2in+g-WT2n:(@+""(K;%6N]LN>_G_0d=ECnbg?G(+Bie<FtZ&s%KA:\;_Qag_>B->-RfU1Q`5\"GjqrU'=l4Rr7It2&$b"Ae>am_?M%FU29nUVsZqL3W2'nAh+;#;(@aY[_Hl>J_"F:EkamI;LoD&45%fB(Jm`+>1T(jGBI2pP+ul3=5j82O`,_pMuA+rd7r(3u+rfaZ)7,gM!_F2"u3UWXiO[oRi+&n\QJfR[sHGE6cPpZ9n6h.P.S[fL)Z%'DAM5SWD=^@CG1u6C^Oh@/>;*B=l=S<dhEX'+'CT_dqWB9'&T\^G)pg)!3#m+3,<pSCg<BU[..D^R/0Mh?.+he&9h2*PIJ=:;X*s%=o4Z?)Uj5RI@dadnH,ffs5fsAo+$(.k@cJf+T2$B2@2_WVm$;tI1'HcpS;l`MWi]#p/_m-C^!+r+]i5pi9keH:/j<]VN4%"."a+p%;`#6M]J55R/BZ;cmoJMKDE4UA)AlW`B.<t4SRHj<8^8Y1h)+(Vb&$U\3k.?oVZj.Ni7B\ohl0pB:DAl^C`Gb.U&_T$$Nfs;/6t`)%U7O:!&#EmCPRfb+GHn]Z`LE:%e)-RT.`I'FDA8Db`:bHg*>9O0:OYt6Z*\ZEolu$!m\2!O9qV'f$]>9Y*J>#W8kDuMcGFV2LV@VP%RXH@59@(?#7;o#LMn42WQq'f3YN/j1[cRM.5ICXY+l*Wg9G<T,pGcd615:Bnd4'ArO(JfDnRFK?Cc.nfJ<GJH4kOW4c&'Hrl'&Ic%/Vjt)W)[*Dfj3M?@KT2sh-['9)CX*Z`mU>(LYKtIcjAni?)4F,02kj]bfl[F6#!argCl@jW82@Rqch\#[isn-!&Dg<Ud-^j#`bdK%.#O8=q=B&TFM"NsC%q6&$@*ZFR9;7-;oGG+GGPM4Q'/D'9g'mf\cl)R2L!chapW4YM1Q9L_l[[hO^[\?i#>\l^^D![*:./>*(rn.%K3S&m16Y4e)e-C!1QE7!ru,6VUFOU8ll`Ua#&<@,^i%!Q"o7R=F@p#f:-TYig:&.[#^-K_BYZ-c9h5t@#ZIED20a4HW<@C"d$[NL%,YNKmWjjBffe+VTg]4(dDkXSEeX#Am56c/'Cu>=<JbAqB2,JT0n_3!W\TEMR+l#BlQ%dC,>:,I*1U'GV=D)&\lZVo.`l;Sq%=1+3%Ka*CcD-THc:0:RU"mj^,!$B7:<FigbS*I#K5+p#;%-miTa[trmiM?IF=E$&5.WY\S5'N^!1UDc_eUUcNE^-*L'ZISd=.QV%aV(t!%M`+XC9p9_$pIY.S#<aD,e;uksD*DgSf:*o%2C&[+Y=m,9gT[7BEKDGL^U.?-d,XZ(Fg/Ji/*#&N@S=#)o"aaTRfPj"s0;YXb('[W%DQutqi8s_N;eA6Ga/X.OW5<T6i4565I7+V>s"W#U3C$?+c,Q"X$Zl[k\tb3rE=>),,h4N$?)B_>j<+TaQRq01J62_B<'q%L/*mu6%r(PacZ2$`fIr>-d1HQ7_b7YgFXb/oohRpZaUV/h?J7X^R]%,DQGS_-aJrg+t2VCG\.)oJYq.#=fe0Q7_%6nI@bJ32K%YVn,LN4i0%,:aCG0f'SXjD(#'bP:),WmL$gD^XGAeubUt51o^hq*G_=6JsY/%cTXkVjgJKNf.i/cQ=f(]l!B6n)*d1G#U,-5Vp%-,Aa[a1>>ts%I1"qAoE\:3`I;%%fYN3mkR89RKWF$R#B#jnG%!%ni"n>re)pLr+0RT^m?W1*]rg,)6u:,Wbs$fH2d+Hi*KrJE4>?WX:\)u[<6,.N%-Ehjo%,t_m\-DB"k31e=HCXMhoS\@a0E'<G>fO&,4m51hg%1'<g@_X.?q<n7SJYTBM4B?0pcojA3;.RTFBBPE.%Q.K)_g?E"]M_"%M^D\Z6?1t%7_$g:[ChRbiUf]H%6lJn;Pu76mE[q/Pr3PCoV)#R<I9`ul=03:IbPqWGf7Gs@Ek#9Z:##r/tT:@n-[>ma_$BV@lsJ6%\)>dn!l'c#RpS@3Xqs3]et5N'AjB3Q+1(a"S#m(c$cbiUhmP4WHI8Tr/I#`9LF^D!&DH,HCDGca]=?mSg>86DjfM-/LjbV,#ZRGt%=a7s`$nn_SnQOdn^@"KAD\QW#eSEcPosPco^#gSLE12T+<ne<m[NS<'phY1,\?O,o14V)6<Mqm"RkO+U\\;e91i\.0+f;EO"CJ/B%^![nifI>Euk+j%L4?ch4L@M1EN)E6S.:RM5i5e3"ogt.&(/#@;_kQkR"YKRR5"SK$<[QR68Slm!,=Rm1Xa(a4/K+VBT9"0'.2#N6%Y%N+FC9Nqr0fKIh3ekLp(Ts2eg/Pu,)RISKK6Pfa*X0rr8JA9EfY;[?B@BdjJ*P4<_2?KCCi7X[:7&A]E/hF@NaV2'nUfcfAs5*-%3Y6M'%BRo!8\;E7r3j];8T95H=M)3uQEN=$J3UmnUh5U$*u@h]RX]%8R:YmO,?$-L`u<$Y7':jRR;dgsY_?!XD:?u[q7*jHmropB%Gd;ucEK@`.rqYU9[kCp5d=^31hN$oF%P12GY[cY<++"+\B/r-FRlgGYLG&4'nX[BY4\Rcl!D!LnI>\2rLkH,/[4:WTU/,5+Naf1%%l=uuD&3V%W[A!J7EaQDiRiP.S%Eu'D2t/mrW//;+Yc]UE\\/SoasSNiX"QT>$a)nODkfc(Xm<gB@$V71Aj)U=h93Xsbb%LUN0qPg%l(2*_7XNt5)_he]m'$5%9epHo-62G[/&d$!n7oZJce0*+`MilN(Gdl;^eKSCD@9,I1_@+L16RR)4-.PMN8HkM>@Y7I9j4h7_K<at%jf0^X*nlV4`YGa7o,c6_H>qIm>rh)'Ss;9MM*nQArU$G*Z<N96BHN8"[O'a4SfPXi%jh-1K\$h+5A>GX0b3X"T+q;E@c@h9`r0-0%[WJF]%^V'X*lQ='5AYh!kjP^<e"?VL7)=dM\P=S`V_g.:L<j.nm$cKMiT]NTr*f>!1/<%K'rh)$B4'4h2fGNGdpA>?h"J)HdiJhK%Cr?:$T*MmDs)7X>>)AUC-&m_KY/=s]H,D4.B1d1t\Y77XpQ?J.Kd/#4_J7fV:63?ql<k%<T`MJ1IGZmcSlrrsoGC'PRWQn5j2>mS%G%$,\</ssK9\m\<!3Hqb/8ams]HdU2.I@haD<l0`;rO.dd>CmUT+kn0d21p:0!=WdNnU*YEKs?.)@ZbB5Yd@#dpf0o*sB-qHul=Q%3l3)_h7(N*?\ochmU.ft4olTuF%>p13blS<T/92(/S=HO!QdIjg'qPomR?e,p]'%+J(AAh[m]Q3CUM"_[YpV"GF0rImgUr`:7F"i%Fh!p)aYNtef3(:85[O:XX*J#WY8_]a`%>Ng]]H_N2s$U\'FcnKR^uV)?%_Z"^=`qP'2^:o3p7_KarkE!aG8ZbAN0[ZGjT^5cPdhd%Fb3cQD#_BfAa/b@bKC*+ZsA&9@)UpX!t"j_dCCb,+R=$XRC,8#4Eq-9QZ$h5@,.[DYA#GGl<;VuBAl_\bK]&IL1fhVM&p!p9Y=YE%bFR2rShi=.[nBN81l-_Ie($#jN?Z+AHj8A$r+&L"&%>@RWi^MLn1JAl:o5SH*)YUpp71F@LafmLDASe#P+bE&%t"uTK`1J]kd(N@%Wo8`]<;*K3!&gp'fHM)qU;+OYKp0l*$[o+bF2h,--%X@o`D2g"6*ZnBPngtD\\$CGqjZ)f5uth/r,#IBquT&8L6+QG\V^E>]@4dL%'@TqIcJ+e@mY,bJkOCn&X:5R[/p=CR?"Vsdc;1LkEnmY<cQE2M&%i7,V(_6$FuS,\)]&lT0=trBA2.2!=5TFWf:G_9TZdVf=W+[$%#G"$8VIgTUqod66hH,-Phd%g1ldr@NGNTau'G"gEVds1ahu&V_W3RTH(1d=oqKF80rTCIOE-8GUS2kf7r]<d@raASX30X%<?D'5H%6-KSSY$-7d:')I5&Y--(cc"Un+m2H<!:TdFS?2&t-nPM5%I>hH4BZ)N!ej[%P%M`Le'6#(q;X^+b>9`83mO(imD7N&P3LPW/_Mnu%C`-lf,<sqR&'dE"WmBQ6^+:l%`F1a2?;KcK.\G1-G9\HgOuYING7S1JdbC]4m`NM>=]iC9Y.@,'cA9[AfT-C<U.&?Ic26B/k+%eS%Kpb!-d7jFPR2UgN3td3EW(c47`mfj1[3XAc?D_W<4`HN@bER5,hiZ9<^UN50]uLNjljTbMFb`X2o\T'HeM]+ZI<&Y.;]E)aJWdF_%:)enEKO%[;o6t-I@CJ:3,rZ>`>-)1KN.:8NC7$fpDt#HP):N^cZ+m=#RW[600!'$9kml:RVHe(q(:/F/0lLJH(JdaGcq1j;_+^"I%_1giOYsX#O*t&=oGrafP>*on'i!q:da(d91lC)u6l#X;nZLIu]NiMiR_qX3U;GMqoj;'I0C.A&YrWl]Xe$4g#OSYb,%sccM"e#<`%@HlQ<A@"KrD?nnaD[_$GgL9S=!u1XnT@8a84VWYZ?#*St2dJ!^Cet]Qk(4Kgn7&tKZ0Aa_JhFDMD9:QriY.]K;L(luDm#[`1mS\X%H%@E<d:3B0!Ll5`*i=a):`\4s'0J7odgXFd'Ks^seR!]^rpnEIe7nFJ[Vaa#@k*rB["Ua5G;cnBh7!Y]2S4tc80RqLp:FrR47]X3%[H^e,2HS[mr^KEQ1)]M/?K&ckRbh>_OmO.6KC4:nl[,UWUUTYLP9$XDD6oRUk((KEZF]7)[g9o'1:qnMd.j*&oUhB0VG&%d-"<;S%#.FHap&aGqMjbI"((o/Rg$6):%99mR%^?"eCT78MFe1GB9O#mXV<mXX2IK:tc>*Tg@[h2pM>:\/an+<qI,6N8Xk<B^Aq/rup["OA%R^K(eKl^r28NQc/%EU%5IlrPS&a!uFO,$22Lej"4P'?p$gHRRC)pd8'o(0Wg3(/=eAj=#SDpg:22qWf\8bW32KPpK]s2%F^SPtQ+%@eG`Wdr)SQ41B+s!CF:\$oSB6lZP>Mr>"JO-,`;ID*\3kIGk@_iu-<^B4dPEb_U-=GroFn^_LJ2$OJsM]n\OVU[+N'G!ceaB<uiW%9cr@4@o',0'SkH0:$LL)e1.gdZeNImO<g3I?i3ghRHO^$nP=h4Re(]K"4cUGr,pPW]o.6LbCOG7/8Ut/kZHGF%92G,R4p-V<f[Po%7ag/hQM"bk(Fi$^D/WCVXXB=r)K>^)CeZ6emqSap^IS%A@s-WQeOm83[$%>!i#WlDJ1Xm0or3`@k4ZkKA>Yd>J_(6R"8cu$m:,l:%)oZ$8?JN$97(S3g*C?ste%HpoCAa,uVEcrq4'/NFLe([2P<n<?J`8luTdN+9"[/&Yd^Ed"N[Yu&Z4N$q3!XaZfKL.VE!@p,1shNK%<G$IWc)fRQ282k71b`LLe:qF=1pBq);2kWu.4i!0M@K<_5;M\&oB21Lg6KNnXk%MO_tLg6?KbG+[G7p'q`uo_hTbiVD_OtkJjnR"%Om'f=4-O("Db:=T6Y<@e?B,$OA7(ikd.H[Z!9g:m%+B)2)&L3Wb<Ks;p2eN'\,H1g8.f53PY$lNN"`,1p95jEr%#O!Ll&]],>2`1%RtmWG>o@JU\,X:8JCU["P%DJ^Zgjn"ok4-#a3D>D4O:j7>omDIW@/X[JA)\p3>GsMmC$B<7WP*H5O^@<7(Q(jkquT5Koa/nYq^/!%\YMEYar]=7^Fs$3n/NiZo>YTA3u@%#rWapg!C*"nBf"]jFq<*\Ogb$5VV->)/hUR;S*!/sb_EIurkJ"lN>uT"nO`>,D2%\A;[WLS%mEd`&`/JC,>\;9Xk=OEcgj?m;lK%sD:]L6/s6JS@eN`uf5Q5$eIK#l=kMO/Vr>5LWb>8,h5Q'-JHRR=u?dp#9Z87t7nuhPnm%YZO%4i%oi3c+l:H9Lq3C'0jVZ`&cB=Y-/fcOE.#Y6hmmhhAtl,/*k:fA;c^)CV;b++n@T<!F)H[09Wo4`=M`Vc#!b2JmhWfjh$W$>7=P%/(R!nq4uAG2$S50?5kY>?+hg#o$nt4@eHIt'\t+67"j!1T7C[2_O41YcQDfHPR4&/g'^&j#ha$JMDMUIH)K@&mmjt4RX+uM\.DAO%%!Qqsb=q($hjhU4-%7m=GuURuAcsA`Q\30CiRBrCq`TG#<]/h.$8.X4DRHHgiU9sZVCH"EJqnX+>%HuAATR3a?R)\t%JR0t(8C>M%$B&B[3U8@JQl'Wubl>T;Rj]Q1A;S2'$h+YcMR)=Rl)oQ0ikCYC<@S?Y+:;6"hgP>ccA<hlPKY:TWr(Y@RH^lW$6it?ET1eSQ9;KX%!6uLQgt4Lu1NXXSN<GMCFa7MQ%4%QT.jpE>&lY[qk:CVF0u"Yc)EHb6@R27P=$F-DPslc+Bj\$r6f"FU)aG6-J;#I57M!!d%IQU?%AlhWJDEn[B"h`P?oW$_5fes@I_*GD"X8`X[M,][k^Sped7pKKDZ-H&\.KlubfF:6GMLkp@W<6U(,89!eEhE[I<+@dX\<N6$+kMEg%f'JqI'Pkm(+pN,:LIT0JruAQ#:oB-,@>d/jko+bn7la;A(oV)7)[Vmal!#N?B&SULGY=Y6FGjTi73VXni2>\X/NU4>j*NbPE@`TQ%nRg[uIs>=8jaoS4,Zk/^a%Xd?o:0+NI'+IQVVIc/@l,;u3<f:DLN7uaYr'\S`Q@6Y'6lD7*c5E>MUEqhUm=n4)"H;D[0"6,=&[Mf%a$:(?SJ5N.UUL[8BkGuuWLkXe\gH[p+?Hf6.4bIhg,O/Pk\DBL"Jf!44pm(IBtBC>/aBGIGF1B2krJb.K2s0GAAYV63QJpe$]d#n%"?OM'VH&7gbbeDE&4AA;qe:&u$polhhl)(Qd//\QOE@mDgp5S=SLrPP--u"`V4*jJ'i5eQ`Q-YIR),?3cil5G0/c:>dL/S&1#N\.%^VT:>2N/!!h^'Uk7)]C6cQrd$b+^AB8P>8V(hI6('u&Rnr7NVsN@I3R9WgS@-jrmdGU.tlAtq3HWM5SA)Qegc#j2A,e=]R,``377%K(#ts!B"7Y$toVu(kP/KlGDOOD$JoJR^3ulS&#@ObOi]*"!L\+?nsWjb/ks`jrW3T)UqJ^e*4amgR"=<3fU;sgr#@Z/b%,(%YL8o%:6ok_clpn5&TXSb%GdE*!.cOQ7hm"@fX$k-W8)"AB'7.hZTtfQF`t)gM<1(&Zgpe)@#n`pQI4l:i5@XQX7]o;UH`cU"8saY-7W..%&W71\T)%Qc.Y5.>\BU>.h3!TLr!K`2;\V44A`n(k_Z?<C>>6H'g/a5V7KZSQ0fY'E#%\:O;;kb%MGus35MjTn!BQd42R8Z]?)I_k%J!c3sU[Nba#0`O1b"qC3]^=.]-4a<'ICUL$6CM"`Pt#*XiPo4/#Xu6MW>>6$KLSLhqM2aaj=RrLBj>nsj2s5/9"Zf9"k]nQ#BdkY%DKZp38ND=k0bm!r,t5?@H"q\WE(E<Js7i36HX@q_LH,P>;&6FR#5S]]ZH>1pN`HZ[J!j2&\OBhl70%j4f#mn8_5(tT,DC=_l=Q^+%qif/aKB\,NCs^3:hTT:.^f?4'*)m^cEp+6Lnl6MH!AIVJkP>=fgo8LBoFE`=&[JFcjui5Y"/8K&7hlet6MiOU(g>1p^TfC"/uf73%?VH^f.>Y"7i,b?^*!YIMC(17e'%!$A\Ep&^1o!WrdR#c9ZG)&B+AC-OS-B^Bd0ca*hj,6Pir8P&K1>;IaA]*H=_\<t]nN=1j<Yp/%8c29GQUK7J>o6Yl\981Q"F*/>=L1T:n3H>JYC$hB"&TCnCM(qt<:D?4K!,Z5$OZ`tj$Tq<1jLr3Zs!a4#"L%RH6]%lVFlqQ>24(^%\%%&!'@p#b6I.]sX$UJC#7Z/qcdNAQ_u;r@)=Wq%TWejT`!9mppFZ<$$*Q8NIDq_b5f=k)J;&UlQK^p@m"U-b7r&H/ouP(0#kfbA%?396r?0>KNI^).sV*;Am%k`U*r7DIBWe/)C7C=Rs<_mXSAjcMcdBu6G_I`m/jrAFl6H+[:=up`_EKJdK`G?HpD9agYV_M!\q9p+-%R7!\,=;q$d6c#pWJdk7:k(JG^\7OU!%nL/'B/4S1,G:^_<>>eV!hQB";,J?,+Og80NFSA[d'QA]UVLgKg]"E#=<tWKq#:?0Bd=Au%!^L[WSU`jfW^=W-2-\,b+uD3?!WHMC?p7,M:#?A,fDEnHG6HpfWJVk4PeaG$r[?#YT&?;p)X_a6.=mp8%3#":fb-6OG__jB*Pq$n%2Ikji"^B4!a"8e[^#-3#5pHq4?O+9[!1^NcAV8_a9MM$qNg:4O-g&$TDSNTI^o^OrfT>>sY4)FrB5n##KFm@kqQ1%H,*3[@@Eq^)%C6G@ki4*%)AUi?m/PBO;S])""rQq6g-V>-#1%H-tl>mY>L^llC#,sVoJjP2r1mer,,NK`X'cM<m\#SN-*AM9"(?Aj`*i$\B!8Wa4%,d=AV=*%T%JD^JoD,+8p#2B1:e<pq'/PdUpRLCgm+$it]Y9?l[VGS7^A9l)'Ot?S9S<AE!EYC1]%&k'MJ)_bhWlhc:=""ODgG;+b%HcY!&W;j1047G0?Js&Y1!%=*g3GW4]Dn>S:"Bl\#4uu\8\M'eZ.,5/tB3buGJ.Dttf>#-AL6`j%XAL!&'U;R;>m_t/\3E*#k4$ae%4?'>Ylu#`d"I6a1".(_W*YQ8[e\T_Ve9S8%=t.f;'-.Om?N="Jkqa2<[GktVQ/cR8d+a5r`YQ3WE.&.2Gglk-3hb9c>%?70o16-b%U5JYR4E5>.[(/4dQo`Cn6D"L9=bsY@U61eI-h$k.T/)"T7+DNO99_uE%I"E2-=MPOIEE7sqaetB7fU5Zn_Xm4L3$:D*'NN\q7kSO%h[^[O,Te,"fPh,QTaJa-4=MLeJ8p7VC4[mr"^bt%NO>XDi35djc!X\4^o*Eb!5Y4u3Jna)[*P!BKDM%*Q3`?QQ%?YK_](+NgX<f:%"s)Jb`M7$F")8D%bj4&hl$ucn]l)MfmJ:^ZMCB44XT,%\2?qG%T*)"ZUi%F#fDr8lU'Fm"m=j8l5d"W8lHmWqcO>GOQI,m<>,Y=%%E\Pisrm^:*_V@`o!2DFtN<Pp#%HhF.1-Wu4VQ^T;piq0d1qDWXHdGY2%hfe1\rEc%'O5.p]`0h$MnKI$&?2R9!1P:q@OhtCpIlL3%V<Qc+O&9aj7>lGT6K[,eN=F&mq%kS'Plbk#-@[2C$m'?o+cgH7OC!Hl18*MQ2*t]$%Ga0oF>>G>g($fK)H/u<S41]t#5+_\4hD#X%ErV%4s1PXG%%@%-W:8[M'db3EobdjW!"kEt+khQpTqhEQ24-%P`XNiJObK[U#&#`j'sa0).gPQP!]&>.U[PtiTo(-D")F1AK<$[Y%LKfj>p,i`iB]rC#+nCuh85*of@G0;s1J.VL-76S-:P.3>Uum.8OLfon$c%ufEo7'.M.EJrLo$h+LKL@*dpacu!RM/Gmr->>cj3BV%L@aBkT<'n`ZH.rQ,"1eNdp8Y5MU!K[7@F@,"*L_aVLW:KrKCk7B&A']5&ffZKuU`YJ7d9`=k_!GK`T,6(;X!l(/7#b`f+02bqg-8%ltldoMhjLj(]]F5#A[Y'go'Kr*g;fXN0/jpEZU%^n203,;jf:JIkqP3JN%/3,a)3u_F>fI1t*B76dMb0I1n+!MMQhR.e8.X@V7A4%oc!u]Y[EJ2bND-SWpq&;50\1X-4M39B$7!LXe<V/5uT2$h!Z/ea&'rCI'<()Uj5C>?8Pbi'_&+9RH8PYGR*K?EkK<n51%[FF\\EF%LGU5f?5I`3<#X1-:)i%-Fd2Kr%)]EmQo*s3`TS>V:pT3CoG75]fkgJOF,CT-P6QkR>ne@B"!qDYem_"b'No^M3J$UTq/TUr9oqe&%ATN,'ZHa=EYI-]h0^&PAi$$:cN<:J!B_]3)QWAW-U9`8Sp_6.o(4?:i&^r4.N(94/)ur-u3*6plOCYWo4LC5r<ElnV%aU%In$#iX%qt"7a0oC^CE!V+bFd,,P<$=fp<Q[M0&Q<3//MP4]aA]!6q^91N"tW#_#O7c\kH8S/g?@*^&&BSXU*8rlQRKla6-]":`&S]7P+d=I%Qk>Qq&[Vu7DB\,Q`@,VdG`jC#a?p6@_)!P&F=q_M]#-XDUeHXmO9M1,$iNS0,MHGf=s4fR&&@LeQpU;_a`Na(=h9367"4c+;oF(O%=D6F<?Nl#(T;!p&hCEp7-JNEu*<N:u`Bf]_fmsaK$jK.)6#[uj;.!%rF[Vc0&\BTK>rdU#OWnsGi?P6s3m+[b*`u1r_(UUMW\"EO%Xh;G%9":O7&,#lelnX8aP32h<``]kR7_LBX3&b%[%teqbbHuOE$q)^c?&"Qb.BM31,Qa!l]!168`BlTcKBA[(g@P&L)U0SWW)Hom%6UcZsP$m;_)!F1X:A"G_@Bnl^38[P1X\)Wi:;,U3R%=h9SQjN!)49W(6L`D&T8&EcL/39hn1jn_19p*ZM:K?f&Z]5hfOq4_$[s#J%"+]M^bYa32Bj/^9%/E.33!6'("ILM,$#&IR<;jk7.i]%$OR%rR(bmJWD7Q-Ai]W]$UZ!!ic$YVQs4EK,!Mp$(W]rj#;ilW:Ha_^'%AH?+3a/&(Nh.Y1M,[>6Fc$?lMpSa*6UpL3SprEVE<fBZ9X%B]X`2HG+CB[J>Zs%*ABjZ9B?u4Tn!N]`A4lcVRDg#t7b1p-k-6'!Y%Gp/sP*+fgkT]ciKW17G(7PA/F^<U>]5t.8YHDacE;iE-nVf2#4-m3<PGA7pjXLo*6S3\]q3rt2[UaBeU:91^MB1-I/cKm0V&BqQl%1[jRDn@TF_TVB[g^!eI^.7TQre$o'8TQ"^aH'[P7Z*Z%eM5<ZZM5=ehM5=&i,aMIROOt"1WNQD@BiM"X[0!7/>-0T\[')Y14F4;L%9NK.g4UEBhPp.?;S=s$t^N<XQbaQ^']Zr#UppY9EjVj33;T'j^o<`NV"=sAIP#SuI/.\&E>QI@UF\4?QNX-'>M7P1`9V(TghMfRn%/KVE1Mu7sC1Q5$1+[A&Cpo1.jPfsSBV68s+9`rYdO7Cr^Y,Fue%EG2XLFFP:Jk-MY/-mHk4>Z^j]*<9<DF&b;U2/l,WE'23(K_]G%^s[7@B]gQ=JF5hJjCp5T\l4+e2;VNLfhs*I7sO=GNP9!Qeo$;FXTH"oI8*XVDmQG4`'p?c>!/5phT\Kg+6h_[(-).fi65/Od\q32%^$lK[R9=$N3oD$?;sh<]^-VUV@MCZF)dWrn9WYlJQ\47_b5J2BW17pf-ZV#P1c`YERV6eNimjrAX,PY<>,1iLKtpsQQ!4$upSK1(%/>9Gj,a;n9U_&<7NSHD:Ba2-S&Y+kHhqu:8Xnn)<&UI$aa\osd(+M2Be@<V]!HB&)GJE:16.oA(=`+[)-^JSI$mkeJ*$)5eg5,.E%D090R!t.&&H"Vu8=\S,ZIPP!R3@IW/>$MkQ(0?nh?thrr%oK%R4.9CY@9G&@Anc(HB!LkaMm5c!HTD(?D6]HiDHUSJ&_o3LbhV+B%)W^?nf:;$8NdY=feaL@i]'$f=)Yf):f+jc>UjYnfFsO`0\96,L(CSD%)?g?AZ=Y/7LqWW_7.n4W56s]IOm%TQl<.4Uj^X]q"Qsu4%(g#]JatV2O'pk'/9/r`:Ia'^7@nrqaTZt4Ha2EFt*?1lJEmPrLjE.chF6eBC1Xs"^50oEP8gYG4_M52hcW9uP8bV^bArV";%DdK%%k>,"s)mnC#?ut2F36'`N/Ci%XnqG_HR!H.uat<$0pnC70!Z;\0VS$CUBp6XP.XQeIW96*04A9rA`h4l6V7iZ8A""rqJ8mks1Z\"r%(tUGu>%&Ch(;"rPXia/9n:KEVGTmB;&PsJLRA6_ua9\MYhmdJdGW?@G#eM2^i6hAYfce[eJOWpKWSLo8%ds[>A.6j@fo.p4,6cr^%VTrPg3$:%Tfd18l;9jo;&s`X=^2\E([e!%k?ksK>iAR%_OQ/ERS1grsI>d3h1c;54[;T<A;HMtZT9qco<tsbs"$4HQX?c\(+'IQ8%U,_=Ki!?^?(?['QJj5]5YSCrJe[l$o2FWtX"C>qLr:2Q?_SK6_eNlo#PH*:57)XJ$j#3>(=&Z>RJjuo0l([I1K$2_E#de[>^S]0>%R0XL^/&Mk>Ajb%]2FC^'!@L]SFsJs]%Hg>,)].AWq,&(@H<ST"3[BF?ei9otaBLs^!8NSVPNLW"&l;Cm[V0\_INT&1/a;i*$=<nr%)!>\]`0CH='#2/l3,#iU;+__CK!*8n)Ig`B=YM^Q`=1q`Qk".0.l0m#oc1S;Pkd;@@LZ_gbOKnCifa#+-;VBlo%-ige'7F[_:.is%i;&$uT&[Ja'dCm3:5.>`+V?rMFjL5E1nm_Eq'^,!R]<#<JdCM9l(<MRLQVmS7AP4T--_V)a?b;TnPEY53/GQEH@^A,b2H_X5<#&q%!-?<-d4arb--P4!()AKX`t+2-'R4L"7oFg0m".Q:>;YYnEIa>VWGE^_6'cAAGKpLM0<lsF))_0s"\'8HUsMMBX=)0"_TgW.6a"4m%<?/=h-KNkPdJ]m*%qAA[9aPi$pI0\<0@;9;N$bknE>KcGO'j%2S.LXqE*IB#:u?(/MnuqqA[R_TL]AL2N#bPj#uW<7</KKC-SnZG%G2NHda*D!HeY+#cC>arbciOh<kF'X"b8O!B/ZDjLe-ls&YM+k*be;7Z9qU;7h&hi!D;DSL!&<<(OjMa80j[OILY+O8<+?A+U"hBK%%#ZFRU,]%!6@tHD6-:sCH7Vc!*$bb4)1sqWK5F2=d5N3b4DY%<8;D+;e1jDK>1fjB'(Uh+_=J"Voq2P#nHJ&$3<`;bWr-^+XA?*H%8i4&8@XV@TK):DogEj+/:rMt6g=L.5'[Yiu:;3AtGDAKkDR7UN;g#fmJ\r3%*))RdS\mZ^h]/*aTPI/+JS\oGbAgk"n]nI@hSFX`%Di@=]4>*PT4APBl6f,NB?.mL**Lm2L<2#\\N0r7T!equIS!7>P9@]k-)1ibF%]KY5aC),CE^(g%V2tc9-^@Oaq7N5[V,g]K0#TT9%lY*.`)%>J@9NiJ%CNDIe58'S!]b3bHL\XPhPtq_o5JdmUQOH78'3K/:<hZ7dQii6BdaOP0b;r]iZV"/8E;I_-$P&(=d6O9V?Z("g%oku+,\"h\]F4>-Pf763k$<gC:F`D")EEZ4,2,r7Ze(;INXSRr)H,1I0-Vh!m$7JUm=9MSYj`Wqa$8]_.9I.PN$bV;.74gO4R?/%N%*u.M6g__mI]S0+s]NJ,,F,4E9V[Qn%4AU6MeTZ.9Q8rCg2?Ri;1`$lM'r^=(%@JpQMe7G$4G";'!cDFcX/9J"k+#2c!D\t`RPXH+%c'qJ7Xdc>3?<lDE2*:8D20fZn0Y`3h,9MN\#*A=5a.)raj-Tko"cu>*(8na:M_W%8c/]jIb7]8R3Cb37cI8Fd7;9(S%Ltg\nrC-3%1LX4pV3<"s'>;Aq.>W+_(oABrd`T$0ehJ>c6F<i6SRceneqo<8S><>cie3W?SK#DCd^!rRHp+NOPE?H&Lig+W\;H%LY)ZnQF`-J$%BSeB7`c[;7n1(*n`;>ap3R+o>)E8B9,6NT"cpUVhQF(#k<cn'-LWNG>1G?i9=Jm]^mW2PO]bau'H#qj'!5lb"id4j>#YHR4Y#Bn[%bWD8)l(q3hFVYfijC:h1-ZN?D/@j`]+bDJU!Y7*C@"k&Gf*N!^EidVBMK*_]$BLU-$I#mP$Z3?CpbE/0bTQcbDpFdK`iA$T$#2_&%c&nK!l'+3"R(^8&=73LcSj$jM18jNs-'N/"Z;H4J/'%k'ag;oERDRN_3&F'gklK<ca3d2]@QAeU.#bh."Qn?E$*j^0HmR5"?3Vbh%/=AF02q*&<15,Y'dUiu,hHQ,.m6D#<;o1fY1g:U,=q8e5C%sh]9MY1QM9K-`^.Tk^/kD[IM-B@'"]r6%KWA,5Rt9Jt<Tfk9g\TQ'%#AM5aeNmrq8\>dUR_jt3UI0Kqhb]<5HO/[^,@RYX'2fUrBf0SCEVZ`Q&de$?bm_V)$?t$Mfmhts_46<+DGGXFU&T(#C70N($ift4%DgPh>8+o`u)@s![-..<T=jO]K>Yb_0Q2JkNI?dM912?rr<Xd1RXV37?f.e,7h?FXVAmu+U4J_:q(*3D#Gs-57Jhbu,bq(p(7)pbm%?,4<S^e*3eF[Yd_8N<YKH!]2C65^3W]!_I#]8:1g,9O8QV=670kOiUbArjiA_NSX]$<U79<cM"_h<S9nJWW]]f#jX9J4P_:Dl2"g%.hV?^1/$S+_S"-b6!,Z[\Z/cn3Y,qT$k^kLC;sfA9Qm>uh8#SsUrerTPul\uN<LYfj_1GM+#e.<a1kW.89P1tL_uk3WMs,M-k!)"%BrSIABAXc#W"dRt$=_&WD?S/gRB;1$!A1t'qst+sS0%-)ocM+Hb#lK_Te\n9HJ70G'5OB6Qm2`6T%4l=1`!TSeNU5kc^PG1V5^L\%i.NX<"nrejc&/2K(u8jL6Ep.;.W<PoCi1)3c;N\c@kKDA%YI;_F0?,5;5ss^0X;QU2*M#4bbipefjlSg/rp]WKbL,d4l#f6'+n>D%*>jsk@FZO12+gtI1kn!j)a(A8(_B(q"(5F,[`NqlWd8&[;e'7k:]lJW+>@K7^_gXCAs8#.4I-EW*`cu1?M*V>H'k+5-qpSX>?9[>%:``9uaaJ#TDa<5g-\uKL6mMj\!`\#QR;'TB5u-D.KDN6^1q(n4VikkIM'a3!XI1t%]5(^bPtJj[`W2d]`/fV>[i(reBd4F[F\Z(\%U+?mi+?<K&"<B_rg<,m"Y*aJ^2`067q&--*l4q=alKi>l*]39-#W@M4/DVf?aU^k9.?jN,RVgcM!JG+oO,/OHH,-`Ne:igI8O.&Q%4[T9%Q6H;IW<e1]fQ00X!0eOZ>.cO!f_]C\U'-$0YVN3hi%%eG[6.L!QkMgM:[<O^N29`@r0.9tpV>KBSf4uU/,u2bFmoNd7r?]a%3`qEP5R8SqJ.ot?MgXDq+BOtN7mnBO]_G0\\X%U9%S!<8%57pS3L+t;U&p-9'=aef))#8cT6T&!CptOoRQQ\%Ersre(r+8/2qYGY%Z@*&[b["#:gY&-N;l$+OS5Re]<F0/;i^m9`J[AC?,<q8!PJ>[1f,*hB4I2+BnUcjJ9BS%jRQ,^^l\%QY;]od,.&18Cj(>"hghr[[%r,U-hF?EDM8=E3e'jQ;ZWB;eef8(";-;[UJ^aofYlLAJp:g1FXVm)^*@0=\!gDN<O*I*0uT.q4V(%`h^Cb*aa#TAoP,@_b*Puft'%+akNIXrDTT%Fc*6"t5@Z]gi?HJ7TW3J'/I]fqc=tKsJ><Uo"Og!/BDQ@(2nVSh8,/4>njgiYhgVSXJq#I;5ZsODB3#>!_qCapZTd%Vj3#siF+8P94"r_"pp:QMh<W+j[&X<ERSU82*'b3oF05)(-lI%UBfaC[<]=eQ:QhT<h+39]^;!u1X,G3\E#?:h37nZnW*2N-@g_F%BX#IUS:e]dGdNiGJ%R/lT3R]3"9r$fY9!m$1oe\c@MhB8cVHjC/0n*j!ErKJr!hPdX-"Nhbt_=""l7!nK@4.PA7L;L1-,5a2n$@4%'kHWY$P5'!+-mDZPn<F7ADp9-QOCiY/d8L8Ri!Gho-e[GfA+N*@d9-3S#6FiKKN#Q?,-VTW>tu/%,Q7W*8G88\_p/NH/]<&'^l.a%)GS6UAnm&jA1GGGR4geeXl_-A36Tc-Uq&Uke%R$fK@g5fjoVaJ"#0BmkN"+:e:\f7FQ%)diD#FF^_`l+"(UYocaA%P8$@7bnUfM+%9OrKn-mk"0f.9'4N52O_-?!LOD$ma#7YlRA;,IAl`kXE1E"BaR?%(\9_0sis<M!*5IcG[Z-76Vm,A,fgQraD,APTM#A$`n^3Nt4k%[Lb+m@m-&qo6hKc?d]:KddkK#-Hi=o1'>?e:,d$I(q)e'Cn@:>R300u5e(N?Hf-J9/p$)A)c(tGX=CDF$h3WN1MFT%+Gq"@jOID)%2tS3=RDat#k?SYg/tft_n#/N&aAX0#'^#`Q<A'ij]J"OX4YM>QL.^C7jYVhbo;H6<<.rW%d2-1ZS1GX8gOeFCLV1/9oBf6i!Z+d8%EGM@>9thaY(fuu@(ro&!\KFYB,qVg%NB(VOkM#$gCM1^t-M6BKOH41uf9q]b>`aCY;2AoX1njI-Yl/RsH2Zs?IQXOWZl.,;ndi"C%:WX`(h#&LK*^..n*db01<k\IY@-57Wg.1P@d@!&\e/OstnDC,,O+gcDq>/mGID3?XZC^7HFu)4V:OVr6:>=YJorLs@`Mk[36LJbX%s.*c(2s&ZKeQ#VB0+N!oVq)jC?\A@)eMB)niU[(1>/'btX2,sb;l7Euchj=ti^p]#h'OiRW(g82[3qpm%aio&ZrV[YIIsD^HF6N#%R$I,@m=U"3VpPd@I])uP<%$EIh3s<P:XB"Rg&6/f3r?i;_a]>t`D6:d92C4ah!4Nl5+qV;X6Xccj7-->QX:g=cGE5Vo@U4"Fs[%]%XuH3(i"0q<@cnh8AGB9g>-mq+Iomd"$ic6"O.CI#$!Wh/XE@ib%g8-I`lE/hKhm5#PbQ`acN*%SVL.\eq4FWqXo$PFP9]M&h]&`E%iCb/bn+3=.HXG*J5e!6_Ho/F<3(3.Dn-=YZXkS8PF<EbT'kapTRuFs=PnE*!791a/Sq8S%/4!tNghlfk4F,XZ6o]o#kR.;jUINb;%V2dI?6WJ*jg_A^n7#rPlJI2A-ZncKm>?7U0Z;ZJVpMWgoOE:\B;bWZ.s.fP+R2tjU1R%c@FK:,ss&&dDZjom+dn]!*g>kIVr[5R#%-[?#Gl")E^BdM[A+mSuV:X;f+s+f4=m*l_n#Z/Qn<kp1%OnC7lP8BoX2%))Prp@)n?goVbrqAa3EYHb;<;#.\#g.#;+q>Rl,pd7'%pF[_YAbmrQPAnNP2k)?pO1rD$hRObh$29Id9[>G?PMl`F@dm`d`VTQ"^jmGg14_e"fi!oF'"UGoXtqJE*r\Lf&APSlI2Fpb$OPK+%&Y/de6Iq'E!pge_Qh]&$i(u]<K)8AYTtc)tJT*W08GJlLQ4GtV7f%)gVV>&>hm!>7.>BM5%/_CfIRbsPYkfQYq_j3sr7`Vi^T'\0%+=VgT,/2g/)ZhC;*%Taapa8$,jR<T"?R[T77i`>8;Y!cN4@HL%>(e,mVsiX$l=7p3iDO+O8`jTU1!.fki3QpTs#"Z))dIk>Dpj!)%0o9_3d@np#>0W/Sn.(0P!7;GY$b[mt*E8P+B;SmqM1DGDbXW8XLBF#=JBFZ(`Kf[AkiUOOd'&d%=St$LJSA$tQ@d[CVVo.AK%>Np%+F!t--[!S[-P'>$DW'B+ab`/5$BWqQ,r7.Ha&ErhJLh@uQ"P<,ikVA;=Z3Lof*P+Yi2]/d.>*8;!E5bCJVCC1LUKl]19p's7'8T:%rR5S)A(ggAp4%MK5Gjagp-.2`[q6/mZDUU*m+H1?Ze=9OU>ObUF(AoIbVN+WAWLV;%9"d^WGJj07/keN:')V&FC'+\oA5S[g39mt%4++r`A.fok:.3#0W<!sT"!nfB*9TSW33G+X"Ee3.l1%.%`?oItak,?TVq-33Ih7DZN;l\tgE&G*N#chpAanB-_9"/E:-P2^?"/Rd%OC)#O:M9^7*nj=*k5Sr9A0=ZX^u0%2`V/>9X7=Rfep=aVgg-6GS)=_Qlh(j_;'R!\hnO;L.XTmJ25_(Z[<d7`T\\BDi<n=mMG,="%[I-+n;L)48Zeb6FW\n.q[#+;6ln4\c;?)$gcmFCQ4LU_"g9NK!f\2nMqX1bh:2=-%\6f22__WLig=0d&PL-])C[8Tha!oSj_a0>e%Vt\Q@Fm;n9lukl-J\N!,QeCX\C0P5TJ(X8DX\Pc`GFdZN:'"+Ks2Q`'q+K#apg5UQr,iT9A,da>PirT"0<cIRq-XQ<<!t0toB#O1%.F^Q\e@K:AHWHE2V^@Mr&$ka!GH^i=d?s2VrmgT[JZ%[DVpT@'r\UM+Ii=kR5`fljTt@9%FMgUuCqb?2!!=D@f2RNu>Pj&&TdXAo%Y"q*'Wp)a$/[RT<&%-$:j,r^eTc+dM6O/!qpT<8Bmq.c9kH`M"Ot"JUm*)UBWe]tf_\[M'h#Go>IZU2NAF@b/_fq/[7lotN4i@KC%Q[1g/]Jf)H#"*T`TD5VZ8+3'G%aFg1mToSO^K)V)b!#dSRbtb.[!)WK;%4f4/>VV.fAD@%i;V9Rr=@b-\,#mQLpHE!\FuOVAR,C>%:g;<2TY:=<j`LNjfX2W;2jsefS=2TS2uebgX8hG?W8K%slN;A&?a'.Z99^I%NrS'D6(SgiXu0Tg09+THQX5nnnXfd>I;p;E[%W7u%YLdYl)c+/Bc7>$YU26t3S*6[>n'\nUp35])Ymi?i;+]^'>L:iKrP)'\Ok9T3Fh7Sh1Y_pPFGSN'L]EfSqsh?sNrg3Uo05l&&eD/f%Fg=h$_VPQ=S2GVJ\;A'!PC*?(OL>(la05N``NA)PqXU9"<unmOLG9^Up\<Pj4R54)ao3>&/pD*(Y(AZe>d=;glf7_kXQBJVV>SBM%dVADhF`Kn1Y/;<%*A_hMHAI17;J5q&k+GS$rGG?#2S/;<2mYtc00W\aad7C^X^+qt&k4k_qsR=&]:mf=@kcg4VAr>2Z"msER;5Ec%H4Z"$/Ni;4?ea*-#@X4kn(uQ8Vu?Q3g@^`4]@LbZ0cS3tf\)]#Qi1=r#EA/0YgoF%:>.E#_UJuG+1u9H/>^aMg:+s;^TP)tEV/)a%,eFCjM'e5;ldS,0T/D3NO8k:V][j!l_XKI&'b6T9SqsbaJUPN"<7csHF"?*mj'TL!;Z4")H['DApAPZEa%^E!\5]SY4FbtS)cOfE%:O_(L!4U!lVr"@N_CP5FWU+'*kPA>HLG'[?9c\LqM=P,`WNBGc$T''!a[SZEW7SSa@LcKGhe1O!*8.gp6\[i:nC2fa^"klgM49$j%iMKJ#h-am'Ai%)$p\jdVTiq8;?OU4DVa4_@D7%]34OUSV-Q(>Gr?T;X-3$<cgPS69G_Xme5O<h][AO#9Mr#\T7hK2NAnTtE=Akct%g7QC$GI.$939ulWrMj\Bs(FK;kc*/E1`a';YPdSc.&KB^ENp\JYn%KU@%f2,$h^K8U!B&I(f8A;]qgtYD:p]3,'gP>\PoQD_DSBB%e/8_fcl*^KU*!A9Jcn@6&`.*f7tX)mO!>hWB]ibGo_8$l\h^@#\&c@Zh1p\"rG"$r7N`P?T:HB*EJ*^)oVp;@4[us'q6AIqqaj8f%S/p6T[W*UNN@2$<qUEDI;oR&J+.s$NG9">@":`=gMFYubJih'^nH0;F6Im!Arj^P15@Cg]Bp#U:(=oHtg7@D#ki,_eVB`'4@'B!.%XkDWB%IEg:AEDJ.ZhaAl0W*2\O!!13OHMdj_QLELjboDMXnPL*hM_^3+gP4F5+p4HGgQXHq<=Z@WAe*QinLC.rP3WRq9@F61^S5=%L9.5@H$G%D);=2InQ^.,@08PR[Qf(O6ji2-<.UUiH@>G(e$&XH,Ks89g@Xb90:!]>Y*T.2^&I\mEP5`U!Lr_48(-=LP7I!+a7b#n%h2naKL\ga!8r)U$n-_nm$Nc@WO2jco!INE^5.Dhf^Gpt]##X@"Q:*\F(R_VRe;qTO@:VdWX&&[dSGbE.rj=`Y7giZ9)<S9SIX:*W%b7C"4+!Qk)?6.iro!euFRn0+[j?P?sgGaSjfAm>DKc_oU%KIi'`qhc0']kh13^BkD&U@6GouMd7@hW4Jq&l:'g*-SW+VISaBK^^4%C-d$-d%285LI#OZd(],YAg$PY5<X-.]g:I\4PbB2q0Jh5qYX4Vf/e=KrWi-"'/h%XPYa?H?`j4pg2#5*BF]-\I6&Ep.YrWhqFebk%*r,J_//<I<q49!)O!2XXjl[a"ecnfD3^+,gqU4g0+,1g;]hjuU`sRnPa9nEEcb\$6lPC`g+Lc38JCQ4)rLrQq09C7D;8+2DepHe@%o*8>j5HKXCj@Y%-n!41VQOXr(/("b1FR)JXF+Zjk0P!;q3o(A*3cYY>9bMl1crlHd#^nce6$H.DR7p_6h-7;4He5sr#bAr7,P77%%*MKsTC0sEL[E%`RUY(%NL4=s5@O`IKG+RD0@@&"2Z5-8uDE(f2M6#$FMc72"+NSZ;"::>b^RibK8/Fg(P]F;sj[/f@\$lCTOR'p`%$BS5!@QJhE)a#n`-e,[#f_QtS?90+]]pFK?/h--L>J.RYkum9&MB-V?[rWsV7%He5fB0ieZHt55J>U#&<nQ6QS&GS./Jp@UDVjQ>%)j_(<-(@"f-9#7W3rD].<_o$(n\^4Y)ud(9Dk-R1MbeNl]eXZ?<\$?_fB_Et/\-%>]u1RC9=+0<_:<[E/tRI7*62"3:*H36J,:*Z%bhaW'VfG81g8(\fT/X@Xlj6F*C`M97/!^"F%9Qk!\Sa"D'H<V1mo&_LqP1R8)aEAt(>gq$Y$&lEj8*S.Y4-f,np7?G4WSIu+8dO'%B#!2P/oM]4$1^Hl>$=WGIrA?5ma'F[XlZu/0.`^!8Vbq:JXCe*o%#^#j%=L^H4dX&-IB=/\5:tG^7EmIek`@>F#AB\e'@p=Q+HRf%;RpQW3h>rt7r5?`]R5&KgGmm?9!rl+V&tEUX))A5k<@SV7UbJ-_mnFEp/\fdlb+&7a)OC=H:6'ZGGQk9jqUn,mM)88^Z&Hf\*"Ph%X!Qd8IuV^8I9!nMNn1>OP<T_-nRVH24eAT&R<\REj"d4OVj2Mljm>1%hS(mUCC,9%7d:]e[S>]UCC@VVDHCH-4<'1&FlU4QMV>rD%FOAQo*+$@\D9PssaZmsCV*9B7jJN%E>3T@:IPp`o9%GspaLFNj-""r'l'j&W"Sk_;&<jO4-e.rt=P>%aQ2bI[`=E"t2;4s@+$l+I%G(/>^SG>lOp6%)4h4%bET*e?ZSb1M0GoSYTAZ#9brTQQ2CAaqjF*W1mP7el,me(+-@=>\*Zfa8]Eok\N%@GY6RCW6@B_kFAS*P0T%l^u>F[WUX=i9?fAr9T3QEpP`aZLd]j$(Q*D1TjA1.D[b-?B+9^;D*0rrD.S!lU!+l5JUo$]C/E0>0Ca1j+RYLdb#P2Wnt;1^>Q@$%,p,bI;n_Gn/m]`P(].(OphfXY(MWn@5:_(?.8W[hZoG%-W3"2G:&<MQc)XqFP9-$UB"kA8"4*d%_K9ES[s.cDMQ!nUIAfC/-T)[C%P:On96f1J5GA8I")Y4-:ZEo%d*AFHM1M>jpNIXU(n!'C:q71-91(0Y]4M*LYD7j-K:0Kj'?O#q?4rqtR1G/QOhf2qjl,E)-AuZ5\%bW&hlgM>oR`G]MZdlV8dp[C,2oK&Q4lni?e1-[pc$>O;QgfCGWPFVZK]@5[5lLeZDGLE6uUCoQNIcfs[Eb(fU)E17LXSVVW5O#n2%>M[ucM#0qn^AGM-R1s:Be".R^kP%9+(6qPSf(P`CR[uOCh^tu*:3q2t7a<<!YEt*ch.P*1#Ki,"`cf.nV<!]^I&Gmr)OlqfrL#^]%%@m'-qRjB[0^15`q-CU.qG2E^nJ[mD?_0>Qq<mqLp?F8LdWT+FnJjCMJT>+t(7e%=?KA_ETh\tf:3QR_m;rie1MkJEIF3+MP4hdF%Vj#]/HY#.6=XKC5>;%BYD5qNX7r*sbgX=V!R<5RkjYY0JlP,i\h-TYG3qm_PrIgALgXk^CE&!bGS1:AQRkd[+mO*^DC!LE"4YM%Q%V7-l(F<aXT\L'1@@WMqM,bn!.luHOl9aVi][J\tm9Ub@@e=)k5]<5,SUjI+-UiC8Kk_2aBI$,Z9inj!*H`cp8-f);2<o!a&N:lS7%NU2WrB$RS`Y8,ZT59B`O"cf[4cc>^)ldPlLA!(#bFgD\PCPO%M_/$ii7(OeK*gJ.]9_>[QT5.&A;qLNjIKKOj6`HYp(dYoS.Fn:/%jo"C(rLX8T+T<T-oQ<_cHJCXmqXmTD/%kWSIRP.:-Dd5<cGTh!^<%edRg4eC?VTW+rg!$RPt:M;ms$J&+Qc%j.a$jAI#\-j]k@V4%eh3TD)aV5>Pom@+QLh-^@Q0(b&$&Y8qYF=i3Ks=\o]r";qs*@-hld<j?TI6BgJ]T[lX.)@Ha0:MrOSu`=a,&)YBM!EZa=XkM"U^Q%9;qQtFqF0/_i2/iJ%HBdl^>>61;+J0Z,a;!po_:7HsL)YYM]':rI6\C5L*>2HU!-*VKIs[$]B?[;^I5HPGl"ZFE]7,WGJ`d?\.p]%DgX@TC@&Y0s(X+a9!2pT-OaHJ^].'3Y-^s#?OQ+p;b(%us%LqgPM>Km+f/N2CS,[2C0(2]fQOVS`qO%]F$lKCMW=i;Pe$,>c^jCn%im6%fL9rBkL$d)oTs1*D:Qj&L5.P,df7_]<F?XF$)1;P9;(@Q,AhH9:2\+Zf*ooO$L^n_'NTpusY"u)boq':>Y!">!)`V+Ib0KR_%Mcb2#[=u$K1fnj\%U=Bg9T/gVBl5fbp7KjE^'^HRHDdA-S!6M)b0KhVM8UY"8Vpi&oQj=ARe/dSdW4&bnbr=^r/@u6:3S_O'pIpc%8b3\WlD;)/-S78_i13WaP8\)?3,*1=VsSlhWu5WTmR\#F![]5I,gdW]q+ka1dk_`JP#'7%gsQ6O7GT,+;U?EKSk7nTY\>&*HY'-t%G]FN].EE`bi!"DecJeZW]q4kelHF:+9ojd6GeP/k+&J?Tpe%=oNF14Lr>(H.5>!N7Wo[&MDP`Q"m`p#TWA!$@)"uQV[o*."`.^S0%\ac/(l9\4%5AhJ<!jc/4=?g*B]]9;+E@P**f8o+LYWS$/cSf@O"Olh-F*%*]*9Ri8JB%I1h*nW@,%uuufZ@\f"L;+C3%"ZqT4<B#%XsA;IA"t9>Di/;oG8J4tSPpA>am5c`p.+D@9qapcIZO#^m!rJO_$*(Amb?E]7WAq;R#0(%$QI6+pnC.mh1&"q;MtIii(<;nP'n"O%<snTg#XHEpf`"\ppYF_Hgp93T1"Qp*O&O@2HI%XCfa!/Tn*YN/Q]AK^WY'M-\.kp\+U7utgA)o">Y,D3XC,R@8bif!(6X74hM:IZ%ld#j(jkuDG/%q=H4K6f];'@"kG6sJRJij$+$&!YADD8<MUaOXZ,<aYX:Y,_Yp\ZRO;,<qigF,]^LaBZ(cf.&rA^IQl:A)KUK<u[!%@'K6L1'-$mIU0rVA:*7:Ul(5Zei)%VC=K@_RbWr@fBJ^mXjK?Oa-lbrcc+F1Ii+N5>IZ1T]$PkK2,AGXO6j>%V9s_k&Re&33PX$`%E6$oLhIeSMccc4W*a.<A9LX!uP5rg40UGfY]aHS'_]=<M<57rDm%G@^=Q!$Jo\K7:rTq.?&)(*<4U9h)$'TSK"LT1hQ?V3o7+OFj%$(@(a5`=?VpA92`h`4G';K<d+r4s.epq7ctrOHX8$TCu<$+;,MLI<_XJLaZj$CRB69cfl#8R_&9rH,e#h&B^L8+N8?K_)\ZUk`qE%ZEL<H&7Z'5)1?J/m%p_tQC.A,m.o5UC2J-f&lj6El(Ut&ikVk[K7LB'OGL+dEr+NTm61J<M=lOZFCIft+hZ5`]El`6_"2t4<3V`-%+S3c(3'a8Yir#$1mI#S>N(dW`\&N";;#"KWb[>=C&oh3/=1SW`>55[tcmD&YRi')8Q4lJ1"u-WW)\uo,ZGl2b^%F%>ii6j&h$+K8%?g63GX)-rHlZoYC)1@l;ld)4Sn2aJSV.6f]m40]K%D>P5kZ1aB%:t#+7G6:\"_"1PY3]5hh/[&i6ra&^U_Es&]1c`k6I9&#."pHD%.*$EGXL1"qM%*Y2!%JOo+dtp0*!mscf,b_@F6eS(?iDUV\)%SQG(,l'5&'Si`TA!=Z#A(#.*%='XQOGe:k;e!q?6ad%5,QrmXBE*%)PQ4:k^pJ7qM?4Zj,:>o^80W0:]s%.h=P!`h2)_o\)#[VP(7P&cM#j_/d1Sq2E)>s;-"ONT"u[tT_r]/h+/6,lI,C\c33jmIF0%f%17G=$5URot:\iUD3.AlA")IB@pB)1Kd\S5jY_KgM/mu4CGfI;P%^0^9\Z^7.eihBkUsCYh:Ih[OK\@&BHQd]AJ4VZ76F*:_6bsm4%^gN?Wfp]J`RgW-Q,B$<6\3)t]#BXd4JO?';^Q``_)gaQfAUEbQH$QFE<Y4:*0>L3#O(n(;:!na&q_8!NJ2)hcJHXV@pAF87^6h%C%DeX0KdMpBM4c_"nDd:M3NJZF\ENh.a3ePcWiGE1EgBClD)NNXfP->J`p)Q'T]Y40p![BD9c[@_k*::IV>c]N;M<CN."NNXkD]!7H%_t2uR\=;r42\_0Zi<7pj`ZY<ra7fE*h+3(d1-,FO67r.=?%=I6cuCkQJUE9pZ9l.d@s&/ik*ZD;.@0n65hZjQ_0bn43^9[^e_)qN%'5Ub3j-IUM.#!Mpmt(dcgKT<u9*BSl)(`Yd)aonKd\u1].larUK\n2+Dg[2X=W2`HhD]Eo-TR;p8M?EJ*I5_GdS]f]pOWn5HoP5?%$ms+?`hhP2`I=*Cl?k??$qOgJ?lm!sA9J(@l@8FDpr4*Ub5/c:N@KBtg![!pHRKe0?-G_J7Dk4fW"_u"kP*[0`?ZkcA`%:r(_lAC%*D"Q\YDi=06j=U%U@h)M@$fHb^AIC2^GLMRhs^LT15`=0pl?)BL(%B_B)K,>*63JKA>MKedS?sa";^f;[bM+R%!rVMSdr(J)21^"%bghVW(!q5l]M;b./]p@In[U-2T6:=oSg-j>=-jsP.pGQ!IAn?A73o1D#\<XL..7DUbD\4Vok+DE3a@oh;fb#X"]C_=j+N?aJYNKW%.E37W"bMco<iCXWh?T&sPiE?@/Ee#3?t7ih*F;8g]aKM`QBPWm=IZH_ctN]"eQ4.JNR&&`Km>7(Bfn.0,_HPln,7K>^C:q_)b7VT%B<"^rPMfoXl%=h30euK<iH=X)-K%1Cis[Wk`M/BfL3(7O?Ke7?l?%>?DWoCSQP1h/L$i*0'16LH!D\.KZB1QIF/*$EU0d"3`sj8T%#V@EUePQR9r)O;PI3ZnO30LG6-Gs5dh/9uM3HmR+WXqX8h%6n:S7F1&=V]6Q1:!bqXRTSMR]Zn*e+kQ:M\.]k8%;kH,u*..\k[V)%;P3-j@!co:A%E.[97<CIKCjStZ56k8oMCm4gL6Z\R/slr</2n>b%o4F;4(cuDd]dt80#`<U2=75cOV70q"c+29YP]*D^,Z+E7l>E%J^1_aMi8;O*@#Pq_.I-5b8$N<ZN3)a9Zc_Xq4]Z,".G_@kb[(IXPFV(lJJEYHZo"(kC!6<j@%A6jsCa/(EPk4,DO4!U$J=MNhBm#%Y@GW"Kh'Ku[,;'rkVuK98'l8T12[M+GQ]%F(*#Djc>QT.K$HSaE;19]n-D&j/N@n^?$HLC,[H?D6Pge0a8B>cNhQ&a\WA$!^ihGh%(ci1aiZs.Fd(/8CJMD7aLZFQ$2n,h\"<[Es8>*/b9+&0#P!oh#gcfCALmJ0(k-j?3ljS5>FA'BsP(pF;*\Rr`9-4#NG>iUQQpudn%:R"SgVjU3>$4F]im#Ms@MGNV*ITU%UP9ecdO`QZZk<Vh7q[se1GMuu)dZOf'4q=l'Ke2K;/LQSn1`)/&gm6<1.-\gJ"]-64,.N49%/iM&oUbqf"SE$Gh>8l7&7CMo*`c#X!YFC*ZDBl]D\1nkQh+"^f]/EX\g0"KaUd;h76b7mE;+gtX+D6dEeIWRtOL]@6'SdXO'@$$>%[65^e@k%tKI#LP$*jkAA8hZBm"pC@FVXM/MPQRMLh<qB4350qeN):$s@"Zrq/A3Yl8V#dDD)_Yi2rur]PQ<<][s,mVYr*\pbnUEE%=F()0_",0)ikuCJI(/"N8"BA0fs772jc/;)P)WMYTkTM%+;eH_3nO\O*9I?QFR"Nm7Z-4Fj9$JeN\<A&6U[\>NoT_50I%`nm%rhc%Cd<Nq0^J;D=c>5j^aoN($l8be0`o;#a_aot%q9FoD^sH'kk&+G=ZnU)/!;GfnI+(D>kQ_TnT+WY,&dNKE!A]oipBbOhX9Q!TX*bS%K8lPjoem!q,+"i`",Mc,hT#JL6TALV8l07:YnqE.5qiV+T++"..`#0^?:I8'T"koHi9MlSmMGqaaS(<1g\B\T3=gHEOBc0\L>R_r%hbgk/($<Z2.!E7#Z+mos]g.[;L`o?M%)?Dj3eoIp8?.h#]%0)2/sto,7mqVcLdm]NhKHeT]ZYIQ&5J@kCS2a^in3#RE9<^Qa>*E>%Ng/#L?^1oPg>L&^r[%B[,OZ+XOU55)@+,Zl/-J_#/2H-F)Jr?h=_(c1o&f@BlZk';&<\lY70[b5[5YNYQTi$OQjm"%)23pG2XHE:%On$op>C0jaAB<>\7'Ll*oJ!X\/2De(JpZBb>@\i^:%q&ONY7s#eKPZr)\en\ClsPqS-/M>5\Kl]S026#gFk*fN7EG<e4@III^n9A%`0eL)P5u_4iOXSVL!qt5EXUnEFel.M4_K1jH6[9DE@C!.?iI>Qd</kopm?#+#`f`@(fqN9aG/cfJ@N0=nY;coG9;*8PXsa6%O*I6%/iZFfKZQOSfAil$B]Od>*L3u@5_`CZa+s3EiIiiGMMN5.Vp=BAdh`NR7fKY9io*4CCkD1r'C\hX&.]T!6Zqa?3%?;&,N?_qQ*6N_%=@UZZ`P_Lu6ZGtE;Xn^WGt05#%u5-?_/BSmMMLMYifm^E-5I+.W/CgBl]a'W'8W^p"udY30X=J")+ol8>=S+=,_KeE\GHEcB+\IO%K#I`T$$e63E<8Z#pC&,.KbqdL/'lUDj0?M[3+L"]j!aIEUqBTOU`%>83BRPN`s4eka"n=Gf9a/%Yk4t-%R>=H@fr9$a?bce5nf&;%/I]dj'&>EjiQLuXK[R+jfAqXhiPJ07V=?mFCVu5WK9O@\N8m=K/JG;#i]*]<6dI1%`Q#ZIQf5U(2k*j@S+U?"MO?c`d#r9.N5r\a%m'"a9#hhaHW;@f;CX]24$&kV\nAce!;L_@q,5&ue,#Wo=9ctW[SPDs+,*e*CObcsRBDdQb(hF<lW=Z`Y/If)Jf,#:=74q,%da[JU%7\X?%+V=V(n?+PZ]2erLj#;P'GnUO=@pCRB7ur"\6`KIH\Y(;c$HMe*8;d<.Tl?djQ,ABoq;rfgGUQgQ<FLKQE!,H:&bWJcD?sYp%Uk$0*GoVj]!h\6X&eQq:qo`JtWJ*i;W!5V;bsnrd7PGt&@(kKlL6H&K]h*r'4tcV!UI,SsKI<:om(>U+ZOY1MM0g6_h!A1,Vh0g;%7Skc%E;&5Rc.eW=_e2/7FnaA<*7P0WM\CB8$DkW.@WV(9r=q2].\?WqV_2o6ii0QdH$nk(bC[JL6dJ(]]mjZEfrOie@n(8$GBq<c%ioD^.-cKOl^![Y^G+;QC.(eKa\dPi]\Tk,9fIcVIHhnct@:q.j$4D$h9a=FN7C<4E[:Yr5.,P<BgTY(p\/@CX'\*t_lM^DNK&b-W%j1ds=W1@ar8s=SD`BgJ;8\39^d=duRQ9Kpf^okS,h4>@r8OYeVhj*+*]=I\&j[7Cj[?*u'b-F[KoL9KXn'(u1)ZM[)>m,^;'c(4:%]sBfh3E<SlBq-7E`Zt#fl]M#abr"3>]g4fZO4N;&7dPN[^!B9O'DCc)7);(,Y:fW3Q1-KW0\c,*QeO\1p3==5Fd2W(<(@Gcq2CP"%?+-1)f<O$<:=\^oEtu?dJMgU4*kshG^'Rc%'2+Kn:Y^(]LUAc1<K\<G$?s-:4a&Y->'b+EKCXhFr;&`PRJE/1$amh\>=:)_J"_#B%"r/)6\j(*c[?3gQUXU0<\u5Xp(o#n(jf*"mM?G=&l!ZgX3m?;7d:g,]lnD;3l2:/RY8(sQBKBdA&bEo!'M[b''+DN,,=g5)$g+^9%@n/`V7FV&EhUocAl28<uD\eOrVXk`V@YTsfU?P!l'IO_lkP%a#p\$Xk1nEh]`R=RrN/SKGk@\Gtb6p781nC9-[]kie/=LHqSuYFN%e+pu2H!a"\O/DMY7NtXs`1lMoQ:,)\-Q,YA(JEqoQnsS43kt8R)sftfl24n5-QPo?3+c\6d<$TuCkQK5@#.N4RVk6D7?+1&(1T4>%1nA!HPn[FcTkHL%!CYasM+,nh]p8fO'HTE+c7bL/?[Ee@Ra*R6bjT+R]P'@@=?:s21/9Zs+#&(Yj'tR-q8LeX7WOJ':$8u/.ZFZ>%V6Hog'u8o`S])>VP:-nT0a7i<d4dVT!:m`dC>`#IC(VCmcPaH'?*JE*aa/(AUl/o*)Hb\DKqniD!HI,6].^u,jG-&&$r@cPp$>s`%d#nSe>HarQ=EQXu_pgA5P.`qb;3A'RTI%-*beXu?"AW!>$59?Ml*L)1eu]POGr;=Fmiu0a=F[_0T0db>a/jRa-2d==72*du.<@G(%_I0(LZ*tL<)qtrS6CGG6rlKLsQapU'SDf1i`\)<Kh4cl(R6.T@dC7J.oN7r?13]>B2uc3g_`]%Q^+eU#o*BWEp*U\in[UlXCu&W;%'8Yc'O5Pp.M\8Psk^+0&f,Dq^lk2>UiP*'iVoldVFhpfm;5;RD2VeB-[V/EH!1R4=9Fe81`VKLBU0gcP8A'C@(Rc9mi4T@ho>:`T%q0PJkKc8ncn]9Q`9]ht+2\a:2O,[WPhGG8d,"+Uii$ee!kt_QP55g;t%*eA@4M,!kd;P[?$<LY',D@?V9uk)e!c%tIN#Ggqek#E:%f"O!G]Hq,6B*Et),*i'8nd'23(c'`A,[r+jY!>gTI5mmY>jjQ:Bo,Arr>sIT;UX=8.[cEHW;A\I7Z0sNQt-B<MoeD(?MF[Z%"J")%gV_5'^6+JuZ,I"h-.Ju:QuU-l&jXJTUKY&]MRQ@?OG.pA(F1Dj@C-hW,(&ui6dc_aa=s+fIae^KhY9]]NOpq)M(U/X[lRE@]7JE*%6n7!>aN*3WGL7XR_CF=M>:FKtGbY10H"12KT*fd.ECgc%6\_OY(TlQ[8/:QeAi27AqO0r_='3\fOFah)FKjU=Ru8EQ\-EtH9"JBj%@j<u/<qOI'=*4=qH*2+Vkglin*"bC^&m5#5E@?\s2L(bM]PuB.-H<<(E.!#)F%u:IH*KBECZse`"2RkOi=%9iY16VJ/Neu+Qlr7V%kG?:]MhQg=q14]&qCo^0a5UI#KJ>'[]gQfUoMsZCDC$1e4i4=[&B&\PkjDsHQ$8c)$@HYt(t3LL',%hp9e^[j$=m"d_jH/i$m3'@%@-Gg$=sjsCWbl+n^HDfPq-=CJj''M4n?_`0"!8-f2Kigb).F70p\<,.7(A7#_\=k4o44M61.#io]BHeh!q,5/H:(CX`g&)(/9aVF%(g#noY+#Y<^@STCW-16CXZ).]HEk#*HI'<[ke;-5@l'^(bj7Vt?NF[614%KB'h:4OJJe9R.l=BW<TcF6rLD7On6C2Y[V9U3p+QER%3^"Q%&(gWkcNFL3-!.M;',OC:e6r`bXp7g55Jn]FhGhgskbTV8s.0_H![jO?p[0)T-EW%+i>lg.\SN)Md'W5b9-Yi+/mhc]RVdnP%HK*m!]g6o8I9uu!9adIjfs-g[J4Zl2g!c71)\du"4#Rljqq!]W-S;7a0*<S-BI%UOcD4u(Xt[L^fVI&O^e$WDMtM>QUu]7+r_B)t%::4O%?/shp5qEe#elu#Jh0ugs4T-*;F7lnP^2?SF7fu7<?PqWS2@1N^^U?6kVrJAOB_>M.G.p&S/4qV-Li/C_[MRPBcqSLVafq]I%[>l&Hgb2]\>_YQPd(*[nh^,gJ$3r46WZu,k6PlNqjP4pqoC54sU+6""<r(EV,?U+HM?Ad0a@AarnN]&Ck?8T5!4F_hW3fA39d`_T%,^f/HH:?UrJ'82OiBX%-W)7bDmLHf]d=E@XRn^19LFju8iQ[JYAL4-%4U"]tDlfF5q'<kj/U;-/N2T@5,,CtSCkKDrou8n-EJTm/%?&!.D;;\KK'7&]M:4$8]7^.r=-BYbL@K9]CGGMn&(^2mX6.=_8'VYR4,jZN;]i#aq?>P_S;@<*FMI[fM4,p3;D`\K`f-!2:7U^$n%PLGX9o][b/&KqXu2LXLXFsXmM%%6I>!%T<0^<:%75qL6[nt,mRQBgtY(rPDH-M<'\[rKNlTBJcU,f>teH?l1E(,_1)s6[ik7Z=Tu%Lm$r:=]/)obI\dbk9,@5mTS&^N8$6S;CEXq"E`+>^\IcKKb4R@]^\3N+5`[aHtQi[:1Ro!7&Z@dIB`2j3e#Ja@=sPonbs(=(s<S@%>uHp3"9o6^\Ju5k+TZ;*iPM`6hJo7iUIp<9<n^)AJDsT>L]MU1eJL1O0PV#h,P@$/"mCGbr@rhN*i_Rr!J]o:618:#7KN4H3r^&4%+@"Ll;1MMR!*rG[6Uq/HN<'HDYmLWSBGL4:FQB-i!2IO6qWZ'k(]M#b]dVe-("l&*b3'S'3r,Lt_,c7](?LHC+r]JWj`>>$h^lnt%]d3TrU3r>V/oX[O.`r!=7OEa`@7C!HWa@c,;*M0`!>a2k/?66P=#26]\?DnSX(!uDge].orJ$0i$ENJO>]-K;lh^EoD$%8A4E^Tl%oMZ[6Y+IpZnu@0!jb@g@qLok5#3:Mr>h<mjI-"o(qLr#DF(=e)FoB0?6Xin%\c_6o7?6GtOLLrk<Bi-d)7?VSpst&^<t8HdcQC/j%VuS$noaBXgX3M9`Tu_BTJhJ`Uop\?sjkrI-Z%tSVKBi;ehd-na0P4V*E(9$3A)l,4F$d&-beg,dT^&`H(U!&_CVg5>qLq=YeF!Ne%5tA'C2h&ttPe)=+lg]s7f2%@b>LfoA;sS+>rPAYL"!^^!XQp[/e^)S1@[+HQ6#LYKWh1dPalq\4kE.84NE+R`jIM$]&G#/A3-G2:%*No>b;Fd_Pf6?7\<W1_K@>9ehB^iT^"(fZ4eFe`ApW'H&[iS`'DtnX+UL`oaX2d/Jgk3)9hl+pBhR\/bE=^?qmN?H&W-/'U-$dT:%4'#Y%n9c;@dlW,lIc4<*@WTFm_k=SiiU>%j?3J0tp%(=FO^`V&H@1jF1a:H0)_[W)\u<Y.J\$<h\od$"%K1GJU6Xa0V(e[qp%*A8%i)T_<&ORepp%+oE];ja*;/&CR3HUSWlhZ<n3Ae$jr47@!d&MO^f&I]($Fdbkhe702]VE!9n&Y1sL5NhWU6^4MrPf+tLR?$%eFhkR%d(cS&k`lg<Gm^\=#8Y9MeFa2nF:.So)7H\TR+`#]Romm586*DqG"Xd4I-^WgU/qh3f?]3V8lbi0pDtmXkDTnm2EtMR^Ho-!PH!ja%*Y@Z!aJ7>Zo*(thl5)"4%9M.7MFDO_\phQ=0Vd4lo/fP,!@LK]D3VV\TbnqQ1)d@!?T<+Ga1dfXhNp^c(<da8?g.+VE#WtOMd7lH%]r#)`(35t`*Uc."Mh"M7*W,K]YfPcC(S#:013k01A.W.9J-^_+9n*io4S_f?L:M(63h>rmf?J,MF`0pts#AICeu+GY$0%p6an+Or%-U.8T3?JJn:jh61ne09M]ko&sf"^S4lH8@6o)/0oXcuFr=f(bV?<27C:Q!:iqmB$=<^*e;8p0mt:8t[nSs?'_j$bsicu%llp[qFp%ke9/.QV+H\>i)W3.mMIK$0>gb@Sut"0R]bPhHi>oGGfa_\_"##Pl$*O8Z1#dANS^Tm?Pu+qJk3a^<7m5F5;Q*4GX-<4c&K18AE_+%8!QI=C%Loicfb)Or7oimCjr4k4a29ShOB"?T:;F\Z\OC*k2Y7"@F$#Y]Nl7RQZsW\r&aRc*8]_<d"6IG46M:6bUKlX3b^`pqpH%!%/f7sLm6WdH24i[=2P^tIXH)60[ND^ZW0RkoYtO3U9=\EC?0lYCdn.kljdd<J=34Hj@8kk4hVV@WSf[Wjo$LmH4*,1#5ic[Mc+![P%9!77dDj9V6>o[;d$&)5KQao1/o;?,[)Ca!\EaKniahIX?bH\NK>B@<8J-/c:e9^`V`RR=#T$Arn6Hj:$5$Q6Dj/L#B9k`:>-VpTM%+men6Ib9IS\+Fu/F`:?;07D*,S^tOG*2c^W@+n9Uh4.K3$L17B[?afYJ(_BEgK^_t4*W_H-1)gNrc\"7VOjF3akn_c:p!g)n'`0P%>+`3,4[hqQZM73<M@'!c\&K'VU9[>5FZqC)-/kIfi5jQTS4H"7Rf0R-YTX8ek`m4H^MG33mODGCG."ris5V.<63VZn/l]rqk8'U1%S/m\5eroeqCl\KoRk:`3T*f;q)f>K8`<Q?N2s^B,A?Y/JrkjjJI^g[/2V1p6jg?D4%K'Y)\]]\ko92:XGrJ+KSQ[5=lrT@/1UF%Y%m_4+5+&5i6VnR-_-iZ<cFN2$^&WsHfUbJ*IAr0(3NGYI<5RR+9RTB$5+<?T>4[.#?AN>I'Qi-FVLL$X0P<HY-ZNk.33r/K>SAEG7%%/cP>'4b9=p:?]Y+El(D\L.W#rCe$6[FP*7kDt=TS^inn-BUto:s2ofZJs$7="a>LD,)k>Gd4fa8*!Va7pOimT@iu1cK7IR]XV0Y%V'uG/YHLoc^ZSe+R%!p/8Q9kW[Dh:a$q%5aRN^TpPL8^T-k.:k&YS8Ma?M>`%.,.>'_S02]1DpEU[f5%m),s6DXV?$ZlWsCs'+<p%+kY2VTAkZ@ADcI?='>7aqi/JmG3`Pj"6#m&F`Aqhlal`;D-Xj1\Qc`"fBs0`k&;tk:0Wet/&>DWbQo]V-8YF'8H\hfaNQ.3D%HWu%TX6'=om,UoB"V,iZh(EkK^ad?XFP0_W3M"7ShTiD,m5"%$o]>*3n+]u'c]Qtpee'MG(I/6J7Kp=1!`>`*SdSD98nJ$doif?^.H1J%bdA-LI@r8^/0Ska%#@2N<+dS./2Cqpgr]D^?jQ_i#RQe2DGD@>_17=bU+DCaSOb;QHEiF`8>rB>q@,&[9i[BBjn:-g,@kmJ>MNG"%/#;c37]&6?HZQeZrNW,pB6R]B#sMU)dQ!LUb15_bmZ:8*bp8hJ!SiJN\[.c9J*!4X,q]R@VdIh+U6euJ]K9B"BC4E'Ii9_k]:[Bq%E0_hM]Y:)cQaWsKmp739/]I+_G#t<loojZlbk\PLVp@#!qq9SVMir8X\<A/XfIEia3U7Lp[cc2]h:Z(F?iAbODJ4r_^9t>PX-N=L%COr+sk1GGJ8kGZTnb\Ds3*2/Z.=8a4'g=b$^8?'t[(Bp-:Hj..aI\"Ph7KX<c<b@'`E$[p5L]$MXY$r.;-1hOFs[$3I8P[GUDfj(%O&g%SFDpP4:D8&;XgaU8JmC,t[A5BlCm(&8\$jgZDKVRVL9c]/l!*oF<VXc^=(.;Ci;SMV4u5-UlJp"*$IK;d>@8V"h^ose!>7hL%48\mT59q1?Qh7DtP/SP`I8NJ_]^f$\(WdPrmLdnE@)-Ci2>%\;_.Pbcq7aD>/`)_XiNk#]Oc:r]l,Y&"\4[U+R4U2pDKL*0`D(+a%59tL*Xci)&1[s@0p>ma0Wni)qg<.l1]V*Sp?4RT$n/:k*Wo.N#RBpFRV*g`B$NnW8R^Vus?R$XFPgkKOD?X!%b7.836hb4($u6_q%d^m/GS*LeUU'mH0/fVDL6&a,0.ZI\u3,V)u#$#+8^V=\Gn`%^FPU)jr@Oc2AH@t"$3*J1>\62i*hJ[Q@`&<jX]-Vu0armA&XU&1.%+8UIV&%6b8T)kim780Nh,=cO@mV.TESNQ`;C.6fO>\kXfWfO&NHeNo4r/c@uW9UCueK"^CgPW:\oLi%[bKjBbj'd4m0V`2`><F2:%[[hmN'Mf<IWR!_VDQAi/"W]e^KDG5+]rMC'Ie]^*^!L-<3o'.T<nrY#nO*(fLRc`e$MeM'SC!5+NX&4C8JJ^7[9KA,WY>]m38QC(%:h,E2UVhJ[<J%e`jD&jb#(EL&f(Z4e^:U"URfjlLK&X@IKZd]_R+g7>]=7Ou6FN2EJm-i,%#!7;_<OLN/?2fV_&_b2nYHR5nXahL%!,V&.*Rp@;RX0h.68f*H=Pm6`&tSb`m!dJ;X6%346%[`M3MSMhjMT14"%p!jh@*e,)+mP/O&*TtnWG1'Tg)DO7VV9f,E%.3OiIUJ%(Kc%GTP:%4,hkc]L_S\$,'6N9Tu80U]i\,R2q(;[nnM;j/LXDORYDAPFpN+82q6!ikt:`+>2o@0D#E6!W16a0T;d@&F/JMM3=@'4%f@aejULgR;nQ`lUaF,M7JaE@1!Q^uLabRk?0Ltn7.0DjsV)Y#<XQ>_\ng9MMRk1qNWpDB_!RM1@o[F=<9leKj[pcuP,p)OndcBgS%IL,Q4O]Aasro)Q@dT+`%OONA'IiM=+Q!3#jq`EU6Eh$$aE-G/%eC%[#bC!S[X_>\o,Fa(("E7Jsa!q)42LN#00&M^7r/b;SX$HBf%T48rU>h/6YYK/k'X#?[28"5<cjI_,`!l3P7I&7JoZ+C<IC6^FCp%i>(;&j8T$6Zua4_,*uXHBVl(H1N5&(TqlN1K&,S$Uc/;_M/X%o;HS)FsFo2mk_2bYn%)deT%Of43GR(Y3He5&`uqVIJ?bJ7MK`A[JM&,`rP=7fE"8VIC79:k&Q</A]+4hL+ae>&(L`tjNTMmd"G$D%AHI]T)ErffH7nJeGAdUdbM=?Ca3l<-&u+g*qJ]ZnVOnG=;.`d-[rro5h9=R=W[tmsic;QB9BSsoG'C@RY$Re'J]'6b_J.,>KO5P!%D"\`VR(?J8]cosEW"muuR<TTe-.5fL-KMp8j@Ca5/:S;LD9lPjB/^._]N?I.p[a(,DlGuMeUAQi7EGMQ%RJ1&cSaK"fg0D?IeK.X%hB?i?0#5$E%s9'p/QM:-=D4f<;Wom]8$MN#%o>h"M/#O2Xo:NH!`+#qgk&`1bj$>PbAN"?"@V/k9I>b[hZ@+EHNeV'HVXX=_MG,(%!IX0R%kOE?#G-L=;1fsd.<8+*+S44!+Q)=1=tRM-%>*j;I4G(OhARa!["ZokZKD0NrCB@oa_2n<<OMi#(H;.8BN$*Z5HaJ@o<5J>%*oa/;]pABaXj67oT[-l]PFVX'rPfme,J2_/<4>9Jc1NOEZmUO04C'QR!QD#`6%EP8Joj:C"2;9<-?o[Q;BgMeqKA?"?A*R?IGs6c%h^YJG67?tT?2X2/O3+\OjA\dQL\ko%;S#1_>9*kYQ!DSAD=)eo#+A`t7/B"I*>pk!-_Epl@=KRUP^98\ln=X!DC4GNRgm5A4qVoH%poHf,KoYM(,D8Y5'9^_=OqPtuZb1j5bX4LLS?/'e;!Oac-$$oSX':Ck*o`#ai?DtCA:Bqoaq,$]O;Yd5QGB3tZ?OeK[JRJIT3Qm@%Xg*Y+;b\rm1>20I2rO<1<sGii9H^iCB)LN;k\!TAfPC.a;G`'Q<ra(K\<Ws27pP'/,rbX;f(=+:M5Uao;Xd/+dFpfpN+[E[NQcFp%ZE*s8+I!JB9<9a_f8J/"iq=Lh+t;LJj8uuB&FH@k7PJ:_p'BP[I6Aae[haZU18;?K,`Z%DW%&O,nFD]q'))<LC@*csHuZ_k0QkqC%);pnV_p`1;]2+G8>qK-Y[Ncdp:eSr[TkhGV<)URp90Tsk,t,6H5#Bi8&M&(r":t,[P:[*3Hen`/5mP-/06;:<?o$X80dXl>:Cr+6%$Y:pnY9#)f[p=uC#1>K]2K%.)QB^SgiA9-0lhq]m^36t)h\5@2nAUf#J_f#Em4(u4dt^K7@A.JjrS\o+#*\E"fHNZVC7]j^I_*_j%D"X3$_UWaZ8kR:r+UHm_..Rq`Z+EEVjJe\_HuXRONSW9?373.52bkc/a?g3J^8=4UE2dqJhk%SiVY^He$1BE[YI.@S7lLqq""-/E%+qJG@KRm4jC*,Qj54c=kBXnJ\[?J/-e@3Kmee6P3hZ,*a#a;rs'kVOG=2<u#(ujPH0nYf4pBh@_e>oPF0cn]p#B%r%*:LJY2_"sM%Rp1DQGMRCH/\/:8"ecM;[p$MsGp:7s$$,@GoK3ZgPW6*RXQ[TW"h%Z".[0b?p<3IV3?jm9Ot3b%m_Rl($+C,/('uj'bln__OC9>8%h!UCIP`"rkCW2Lg2Q3kAW2IYpq"i+6;MMfuXqdG!^#-8s'k]r(8iUFHXV3^IE!B_=2IZ%bDe6'GI<.U_(F(>N]+/)I?J25uV3nt?%OBAZ$I\F*HM>+OkF4VjZ3<FHmMpI],9me&$f=11)/%[<[RnT$Sr&=",s-V]1%M[[W]gS2OVKS$t"u)@c)5FLf;X/<F7@7Yg]d+[@%^*p1^WP\d$+_qD]>'GKchc/dIB8\_P);oMKDh.5V1]Y'>4'-"DH.$<.5\nsX1sH\SHr35LN_!U%lhL7qgFg6cgN=n@HM!?LB3/1'%dEYJSp>N_q?:I^]qQTfhH9Y\@Bq=gme&<j4@>7#-?6%+KmQ9<#\fo9D.h\!tD>mY;&a#21+[;nCUrgYor+RmjERT"06fT`e%.r?&%4%n_9IB,'d1n4.-kQ&gYdsW*NH29]/Z)`+2>G=pISaG_^rgI]<,T^PnIhCHjb.&ME]u*NS'Ekm##dib.!J6pR#fp=[4YdR&Eu"qr%VChmXDDcmhJRE"/&AW&;*=u%K-8u2AP?gH+=FU;.5ZjIr"!K7H^a=3PqhB^<akhQ!lA5DrE<cbhUO+d="V5;&9gn@8`I.c=b4!RH%gBD0l73H-hJU"sS#UpISeGrPU)$$T]ej(1&#^E7N$m1"i9DB&dYZcp',=2T2Vr:otS8CA?-W1N\#e?4njep/R7b,S!C,tQ;d.&La%WB::$k5:"Eh,L*YiCf_>$SMhLDED"GUYfrHV0jg(735oZI7)Z#V/[mld4FFCScK\HU7MRVJ5a0tO9^m!J-3m`(mmtFK2/2MHKYd2%h_`lr4MYedj+l9l\`hdm?H\@R\QCsL;*PE15Y-R`%5?J73'_]!>hMl0FPf_M*W=.bZ1@V?,3oP\ks`oYj03b]pT%%"7M'iHYrV9I%aqooq3)iC"he'M,_Jq+VR[0S*JI']="ujIaQ[M^Vnhqu(RoqsP&fch@NCnM0<3!iUXC>2[Z#4r#j&?u=OZVl3<=D_ZHC9[kBo%Q!%\Zr(C=Q,j8aT7J?Y_Gs(TB_4i+Fa]M`8bYd4VgKu%5Ym^nq_tbd4.PX3^+N$4VLOITl"/;1qq(OBQ^klG'c=EbklC",FPZMQa1sV%W"D"-2gsBBS?KQph[;ln"Vt?A(79\E(<V#TM"X*I&8TaAMpNd9]Hr-iKg(-IeDH#e5ud!MA;#8f9(;t,,HkW@:>oU%!e9G4A?p<&%<FJ(Be%;5is-m5OoS0h#0Tq^MLrl,'TE3&pRuZu%1EhQ)jetrXJB:^;m1J\^/ckBI#WCu.jL-M&Rp+hIF:4pfmZD^X_'.`N3,`*(%/JkiJk#X`)=-Um2*!`aeCd-A3Ma)E7-<uadO!;*($?b-(nT3MK2]*fNM\KiUKq@WFA7cTf9kNe(.JoMV*$"RMaEKAb*3p7N$_^:u%kSr]u,O;-[]8f'Opnm9A06^OQ=C^[2HADA!<]1:Wo^KK:e!D(5Mm>=3=1%jJ=^,"?l8h/7+-uW:@:=IZIAi`Tl1:a8Ab6.)POF27%jXG27A^E_"S12^`jfe<jp:K'MOYrpMaK>@kM#:bSZ!Y7#c_/OIP=2[nqua.ZCX+`!pG;J!]o(ZJ1cjclSZoN@<p9lA,kjlL:>"#S%/eSN:c"=\9LB=-^D_RleiBoJjYLh=m[9FQrUX-*-p,jSrNQ:df,VhU]GPu!%o0ii(\k0-@YR\;Y'\l;Igm;AYqWnjihiuX2b)m%_%0J,>`6'beu<L9K5`\,>FcjsHH%js?+O/3rQf8!Rqgs"k\7=R;uU#Z?uLre@,n=mHH_ZKFNhT@LEIiKh&a)+G%#](F7?sCHOl1$A/%IqbX&r"P0DjH&>b"o>f$oSFMg<7V85*WbO#P<#)7Dl1l9d!9tkqbga)+r\kZ-:-*Q%c)nS=9?':df9Qi-fZa.5nSS=UVD9-(ZUZR%^LZ5?1p,!*-g=8-Ff'gr\[\oT,-L7?ffPdBP^i^\Gh[,uBC^S71LS,#`D_!Ro6@9IAmC`OWNRZl\ZdYH<]G3.V;@TF_%148\t>9^%;++RMc3Fk`>?r`6qul?6:[U[0>;Ss^d8P+[6og:2-*$8T7mO=0$OdmMC9gMIps,Qi*fe<->lRXZd1RP*$N:0`:a43s_#jtc(RmeG%\$CF.\a/B[$#ko.;>/OQ9eED)-%%*AJpQN<A2qNVY$?HDXRfI"hLrA:V1F^V_TL$1HQmM=%9;gA7&RCK9CdLTLF#P#Vg%E4f8neY%QhN1k[n]K_&L%29AsOh[DahNKb=c#Qp#dg\)O(;RLYA$S`o>c4pgr/U;aQ8?f3t)-OQ%uJbk8Adk(04t0&s8X^(5jCf8a%Vkhq,(%QUnld$:s$g#orAZOC.F1i;)-9ZM/g*hB_$:[^O##ju*^c]-F_lWm>Gsi5T`D!ffhW$p$d]&h_.]84LFNXb`iDB1(l%9Q+h\+VYpL%oi"]bb6'_/@pI&#q'1;#T.XqSLP:XG[h<LlIYHC@m'V"26T)sE[h9N3^a\;L:P_KT=<)p,/FoA"G.93ueVU4\6C9-ERWa$VhgP)_%!UFMm%`&#Wo7t')$.=/kVCt02eAp$<&;C^hb9n]HeRbO1T6"7l.6$qQjhe`VVd&j#,>r7Xg"Kb["gB:a$HgLlOm>pMhbgJ1qH'IH%7g?k8)(:4+I#fM+;>1-<.n>c>OrpuWKR[8,:2#RMHBI!eZ]r1Hs.d_C4c-Nm?:@$J>1=^id8I3b7O?*<r)X!0m]/12s+&7si*I\<%dnU_R/B9,PIB+$2m,-O)NJ#@(D>J-jp*i/rp3gPM*JhYr>a/_e-NqKB@PS[lfkbFC94cKED5ajM,#Qk!0'g^AMbRO3\sKor^F6s=%2qJ>)LnfUV%QqZGiCt;?/$#dHX]R7(Q[ZeJFpW"iXWU",`V`,jDcX:*ma;Sd.OZ9RE,UEK*)TFJM'-lo"^_DEN,.MX'dY00OQ\AA%Yp"/@'C>E&OpU4lI%ggI(o=&^c6g"MQG$;G^8dMk>C2hLe4QM$Up723d\o3@Cb2\F6mm-!;%T-NZ<"QPFjg+5\>q$^?$Hf?cc@(i%44B26XX5]%3[0`f:#C+04tl''$7J#rp,n:(Ia*#SFGV-4T?[g&$GJ.;!eiNriY!<">HHVG".o>.Bm'gtal33Q+aV?)T,ZB1+T'56%]*g,3O!\EMMEX9-T!*(8J9NYk`7E'^>sk:Y.c5Y]H?anuOUi[0LPsF3)BPVl/O-&94@nplNE22`;2&i]3lOK%QR^4kJ2#+=B1Ol$%]su_Mb4!p;So^/>Jr'\J3MC3s=5BD/D5"9'7td/*gG]B=D\X9*N48BE'+/IP+p?#X"jo"/$/?q+6t$4SfaT0<QV,p;4<V#uFAo\M%J\.R@o1LcMLQo%MqDFgtabT_?kIa,L&-\VL<H8Ub45B^7#;<782K]obj/eAc5OYki*s8?,E[rBWLZ:p\Z+6h(iAf8Z'UpdA4rd'R%">1Ha4rd'R'TnFYjhl)66aq1p9KjFd3fM;mQ4K<O\'_JGC@3W06,[S=D)l7&G]HOM-p#O5)3Y[L2$1&EUo]TFPn[DK.((f.F]N4+%a%;u2?Fq#/N8A!;)(J<FPVidXYrNT4"5)i6E$n1F:P(h22F^9[.QSIPY<-`Prnr'U>dslf`%0sYcp`=PVYQ1#Fb,qY,1ia$VU*:q%;499qp5]lneV!3]40]4?N]&jLY<uDkL!G:i6?"CXT.0o)nh-"tPlGc>9X[?-9ms'A.\h8%r6X$%P.lDoI-t3$Lu2<V"+A8l3Ecsl%-m-]$1.gf*T/bns/]Y=AqUl@pdseUR6U0<KmU`-D6U0<KAt5Hkp!D$.(n8&.d*Hlk&2V$i[N>"fL>f!oQFCLYejD[d0K*q:Tc[\E%*I4sA6U0<KAtPQkooRo<[ne"<G.<g(9-ln8D`?Y@][D%3[S\lW&VP@nqKAL>lk2#Fq>1NpkOJcajt!L%S*K$."iFH&_;ucq?\H/k%pU"MH#Wnn80E45)Dle?<2_Y2dlc:pOgI--o.OXP'NtC`mn?o(CAm<#`7ZQl:4!`Bk,kMAI?X4!Z`]"aV"IB`)`)r<(oAOkq`nAF)%>"geH%O+d?e%ZpjRn+>ZqKI=qR-V]Rf8e?7:#)9^Zp.oUPHBPa1.o9Hm@0qV+5K-FVqKOCjN+nqoj8!TmJSkgTOTgFLo`VK6qnad%5#eUG1a00]>)&7Y#mI-P*Jd4?#?-DFnP5H5.=n%_bM>E^,F._G9oT]?&n#N$C?XWNZIc_0&9W,:"!3<"N2pK$,uZ%ND[hsOr3bc%%+=ZDJ@]BZ\Xo=I0mWAq^6:q31#,&K_QMGnr2Ha$%GF(pnq7M<Q"?,o?&26r`7Dk5j_mcgsA``Y:MM#="%hK!o-k=8lAcJflag&BA%JM9V79F`]c`od1&6CQl2S5E4AS[G8`12Lp(0PXWNbb/&ESn[t[Cn<1<C]p90QJ#6:"%Ljs'/f5"J&^Z2h/%JQ11,$$b4CF[mVLuQ%kWI*^_H,]?nYu"em2WB6*8sm[+hNAA6q%2l7%TL_,K@;4dnjMTj(Z9`*EA%%5F+Rn'I?4,M\%r\6A<N4dL3&c4*TR.9I<mYC-Q*3%\=DmtF59kdi:3f*Xc+CGD8C9d$7O-geLl+(BeK7?<^r17+$P!Ypbod&2OmZV0q8QR)9UTBnS(XPLibh:HY"u_&2:\pm+#FjY5,`i%?s8(taT]*aER=_+g%0UN&I3AQ2jJLDp[35c>VgOeUY`G/7l,;o+cdH:)k+$!#e>u>8RZ@3RPAUfoO=O/[1(8DVP;<lkt7koPLXN@%'Q/g*]C@[4c<>p@VmV<>7e5oY=K)/om7^+uDc\'SPGoTKfZ!=!X>g(s^>>O,aR,Us43fG>Yq<O#a)Fs3=0611igEIUNi0'$4/n.h%BIPc1_Gc!Q7jEP/*;5:oB:i:-e165EY8>u$m3.+c(X,g<`U&G:"Rbc7C:%sTF0'N4bD=2FQh8qrU0HrN<uf/80<Z$IGY2K`pY;^>%mU0ikd8*gZ+C1BNk/2BuYMHV7s*oB&g0DUZXSiP!+,"JKKVYBG]a>0[?YjOg0F$Pl(^.heX'%R:?g_i^o?#4VY!2#>81\c@NL6(M%/>]qYCWXeHEiH,rrC@_\plMDL3ID#Lm1PS5m>'clrRVGO?SC47R2>;@g\6FUHq*V??F^#b]PoK07ND*>nEhro&5>--lRTUHi2]LS%T'4nU1FO0G[?ttY1"p>DA(/gFs)>,p281H&FmH]+Y<.(90j<@oqlt5;QMk5i4+48dp"!i$'lnN_d,t2VVl*tTI3bq;,un+AqkC)0%91l4qYCD"H7[4[I=iP[XoSJq,CHBVi?]jaTe`G3P6+'%ioTbbWV7R<HaRgkc%$qYdSTX)K`@IQtU3m96:RL,)elH:ac&!Z8%i_J)%En@=u9;C#MTWHF#3U(t_aj*c\qsao/=h4s"Aa1uH,j?e!qp4V]doE&,URoh86sfZ2?J(/H4R[.4mDG;q=mNKDL`0AG<Re8>:kLOa%eK6`orC7CDmVU?c9H:Q[qn4aT.cC3afJVs80=SZds"^*K^r_oqA5Z-;M=eb!;GFVrKm#8sY6Sg)lPqHB[Qh2smGt>:^KW\=Z)DV2%/B\Bu@G/n6>*sN%RTX[V@\G-(QC_3.r:D8_6F\TER0+ahXK6j0UuA$(O8MS5LA@a4/hM`Yi7M.nlN<<),tiCp74cc$e2&>A!.`>1%YEcNW!,QZumGIsQX&78/l1k(eMg)(QXKN`$OhNAf\BE6tP/U1l-@rcG?WLW-^$VRHo2h7RduV1+Gj=_hjHSg7<1&I$>SD/U[Wmsa%-!bTi9.;Uoi6-1prn"VDmo"B(CiRlEURiE++YOLme)%ccp`aFC+-02,cC]gr8$;fb("6MS3BT;/8"5!P'Q+NF]Yia`3uRGYU%MK:%h)i"CqnlK^.iaE:I!?^dh?o&:0HVGKD/Y-Wc6b+)Tsa+6LFX?1(M'k%IeFa,C\U+W.sgLRLS#;E9RGld.gM-knHJEL!l)4&WUoi]%\=7q^/uD9sc)"?O^13cJIJI5\>lA^%,U`M4?K<>lI_C9kDaA5.F6XV?0K1&@GGg+2^7U<t*JNQO[>C+K/rE3?8JU+8ibu:ZZgi1C%#4S5!`BN@L+e3NTW2b2Rpu]\`'/4BdTP3Ol[?3P0oDRjYA#Qs44\bV<8'*6mG0Z\iol-e7_t#RDE;HOZ1&PXY:$%\lL>)A>J@uQ?%QTs9>^T/MXUHEml;BK^GnN$,`R8P,C87D182l5RV_09/QYn'2oI'Bu0D]YZ%jdk@o33hZ8iB=NJ'3d)BHTrm$Mt(*Nq8I]YGL=$L%+%`XpjmDY13XO]M9>e5Os)$gfdRA5Fp@p][VFT&f*Hn>&J,=Y*c0ZagqN&qe20!uSGG#K(j%)4&3R5@@YC1Bkb$_I>Qaa]F:E0*"%RI3Vok1R00Kt%u5^%].66<T^=roUJZLRt'/H[Hu*@!k=oA,>\4_6N:74E,8`S4QMn`]hkI>"nkS(:`"aVFcWWI.RIVF(nP>N`;$/%?Tif3itT!7&;5Yt\0GB[C8idJ9_8pF1T3@Hr%QOpL\k[sL!"b_`Agrc5e\,<7Bi9%(_Pj7B2Ld8d&a"e@je\FdR:ZHHo0^:MtKDa%IkKSQ>Jee^Lpo<C7p><r6KCW=oN9Xg%CDYc'9.nuA`<%@]Dl(.0Wof=aiB;m?eai*o+o_A'9bl7C#](OITPZ3c>FEF[1>9WUZ_A9%[c:rE$K@Ml+5cTD[uiVmiZgEh_"Mu<<m8t&$6SfFp+e-h[,iM*HCr[?LZM"^-!&C8g-4jG..cg.L"b^k+DArT*E:G,jq5%S'RKfs%/ePX/#Bd>\e-bJY?pF5=G*&^b\4Q*n5UC7(oUTAMk2]lf/BM=JpY4tDR6I.L+()[$)V1,n+0Km;PM#_$YDHs0+#WS8VD0]&SCZ?h%M>PouS%,ec:qGF5q*Bj!qZs%!?25Y#44@%&F<al[J?cb*im-d_GP^IRQT*bA8mb`u35420R=H#t<=SP+^>,jh*q8LirT;;Z3k-he%G>IYFZI"9?#2Y\=\'`F`:,M^jN5h/K>GIc(5(G;1<-<KBIJNj9=4jk,gKK!Umcr-E8$?bkq=sBeqfJD!iR;>gs13?0r?D3<-;Kej%[5gt:5>HH>++^/73)R%Hbb6[Cgi/nRb]'&V%n%jn@h`8J%n%kS9#0j3ATscphC-?]SD<qqZ$EhiYH;j98&QnmXe_;sNVoAmjZk1G%C;%?9="kZW6h&5R[)*[m*u1tQlG+oRTlkW6]TR:+_e$GD3uiDuJ54B>A3kt8S48;#,8KEt1SaK>X,hI86g4YEUY[tCE!+Q(<3)V2%3Xt]T*OWeok/M,L2!O%FA.IP^h9@0#r-n81p4'CRrUlr/+O>B9*gW-)o).g]ff<'8mK<A,#l=2fN9grMr3CJ+i*kt4e@30*?gtB)%qJ>U-I<MZ4ohP!t+R#TRK*MB@ZPW(5JSM22:0oqlci&+>cIl.#VLB_Lq;m;STS;;*<c.#u\c;6:l'?C><`bpNiO)qU/H0tobF)YN%G4ZCsc5_6[E3eeWT-?S'o:6eb.VBjZ]sI1?^6aV84P5,\ER<1W-hQqfk\9,lq08nUj'&S:pYJ(TdFbhfID1gU?/'+[p,uEgiKmWI%=tjH)Nm)`k'S'r:$:Ttmd%"@RAp>)*-JfHe\lUP'<?:o/B[oZZ`+-R[Zr-b@/+_lgUUTt_B)$"jbdMkjn'gT<k;UT\Sae4?4&U7!%7sO&YP8;Cq=RXmLb</_9^[*'.[5pA;F1QPni5\+V_Ktl_WJ8]I4ce("Z`Ub0[&_'VmVpb60^n5.:9"&*W&^5H:U9A21fauE5C%rJ%mdcH%%Z58mp%[Z%8(0NV<;YOtk4$WZ4(m2$m(YJ$N?>'XUXa3V5+i>7o]fFm62p]mNd68\m]<Kip$pl0VR,\K+o\#lios,<78n24%'^"*-:9<+[QJa*NL$^;uFV.F=Y8kbq<ENV@Yhc0dkQ:+?L]>"k]D:i?s+g0B*Q.oca8D89W8D<=g?S^bWQ]:iq`h_Uql'J0o^Vl9%IiT:&3`ZKsN/b;P*([ZLHi0"Ud/HiPb^OPHOM0Z%ecf;e:^[S7qYD+ZSXcIgs(FbLkPqJaI`]E0n/^p.pegt2E04V`IahtRI_<MA%dQa@Rof7p;(m6&c(H=Yi,kTPd5@[V3H0ri)fqY=?YO;=.L!p7;'EKcPOpg^o;["dZpo<phIuG.m]Q.Hnl/kL6YJ:%qn]KS]gCLFs%]p^8H*H/HbIH-?glpXtL3:LurVoC2F[fgdc^]M<a\R!nfk(#N=g"R0XR_$o(AGkou5IpKOQR:!"Ihq;#gY1ZC*FANqXgH%6U&EJJ%ao/ibo6?MBgTLS*\L1a_L%=<^@Dq8`>DE;,b)gMQY#;gP*/^!#/SK7*$J9s9hq$3`9+3D"l4<L>2X4%SYZNjKh-s,jfk0RCLKeVZ%>uu83k9d4&@J[n'@02FqkQU9;GU-l(+HIMk2*H6O.$#&JFs0Fi90q"$'AM]aq<GpQNO&S=/aqqlVk6,eJD5>JCbiWJ4,o'L`@IS*%FF4m#D2>n**VPr?6$]22fW#eNg0_-O^\H]M.k0YcRR9iNgXk:GIJE)_=-"FdI_ND(EdVHqoOVNM4Fck[_Q/G&IsUlSDpH&KH2Hse%o/E_j<jtk35C<3H%d+o$]QipbF]21I;g7k2epH)X\NOmF#s%`M\bP76kLWJa486ebbK5I6F*HjO$5/NdIu(PHY7@[aJ%H]Sr:;ZA%l1[DSLGn!1]7+Gb]3FG.D%5B*Z!DZ3YRbsa(:tTZh>V0TpBrY&9fG2eQqtQV[%l*>0>IPLe@4Q4aaE?RS$NJUDYp'P^\ZRLJW\Z?%';nXmnA`j%(fdA8G/pRETVK8-+SC[=KNj3iJ%fuq3e-bPTd*e95/[00_*?!%CsU]+QZj_>Id?fjs$Gjr!RtJGL\_P=SBAKqNk$$k%9jfLuF83[,5t#Kl<+]XFUeFECJP;a]!Qij=WD'RQD:VV`J"3'DVFc2UHOOT\3H$/d,C@ananQ+(P[e(N5FgHob!Z.djpfPV9!:`\%?5YdIl99^f)!B,EpKo8HiJ6YJR(`LR,Watm<ZBu>[]6?c57Gn/)cDQ&qr/'sBH3Pu^a#<U1rr^2%_9tj\9_`+%r!N6eS>8IEu=c:%!Ih^.c'#_%TBYe=`GAg'c7bMC-)HVUp$oVOr%OV9?lZ]/`1i<(H1?b-]R#VSD[]8iUu0MtRD+)pqPVfgDiUZCLm+6Vf6;*qXr?dW%2f>;eqVJumfbWqG3lg\r'6m(5nD(VQFRQQ.=XS+X0#KpDOZmuGYs%8WnkZj(pE'R)(U_>UgmB6]DOLZHWu9Po,]IBlBQ'KtZ`Q1\%Vr^pM4S!VF\fI*h>VA%5QRMORHI%f\3H2lnAmW`DniQtjq@3)Z<Tk>b4o!J=27&p"N,6eaUN$1.5'67sXU;qe,\S=5mC]6"hOOLZ%8Zpd%g1J+4QjNUQI-T's])'c-S")^fMmNBWesi)WrHc,%Ch$UgXKiiF_"iR6SQ8Ci*-lLU^62$]:T!ek_l0Xho4?_8qsk#VT1hIV%3rAf<dgpd).qtOth#I*6-0RJ>i]Q3NHIrOu,@$R^M+&U655k;gRNND"cUNu_]/X99KfS>0D>+"JgN9I1D)f2<d!;IT->k6FD><;)%gP4f&j7U-Cc,]#1Rb0Us`Rj93p:+s!>l*fnP@%[u[gauq=1kj4qQgPGf#B%kLS':f\L)4M\pCqFnbC2DZV@MO0GEbrra3^Tgm?'2%7;]&GRsYqnZ.+!P3,D)ag)#71$2(dZG9-.1Pm(POG;K9piVr[Z^'rYts0hZ5^mu/)E#XnqXg[:;>hlFSgFefnF$t!C4h*"Xqmm@W%3>WcVj!_']6FdMmKQF?#[n6?r57)7XrLls&Xm'E4)r25+qT@Wt;o&.QknL5#Xe3<*i(fgG9j+Z`!7?58A\^gNkbd;(Z[][P*NquY%^&"t6?\-M3pNn>GjCR:Rkj=M;hs42(ocr9DiiYRjr9W`IjmK)(JT#+k.hB1>o\`G;)q\7>&%jOlQ&,+Xp[#e"nnS,On#(%4b]X`e%Q*l#MA,AXi+ID7"+3IPpmfrEqe@h='>i1<Ymj6_X7p"8*[##=F0UnQD1pLDJfG'XO(X2<u`2!q8:!E=9SF4mf7ujfK7MGO1raFO!%#;Hr3(g3kE0RM.nbW_nEPRNlVq'Kop,(;_5fB^a8IX?8/h"K.c\M'Pdj&boa$d\23\W)%-fNt?,hN-6MMm@PD@d=-lI!aH7f_\8<%p:_E?n^p/A_hS_sdlK!pml(Z%TKY&jc1f)g>M:_*'AnpTc[C%\1:TmXG$aKn47[i5_JUF-%s'h<rD9AsZXk,]YTrVE)Kn@'L)&=1%g)>0G47&:ekPCiKHp(PY7a.t%9\%+OC:t\Qbd>[ao>AK/lG^L1A.'!W9f?e+qZ8u=hOUVfqSm/WY#[J9BB>QE*)NhI-1Sp.@iK18%EhkL]g6,h9]%G=>].^npl?BX[n!k;+4af7JLZcF]5>2/CRqL>V^usH9i'W67$i!C*L2K19nONID+4-Ht2s^,c(U&5;U06AloHs!s%=US&RhoE$;<U/^Nr-j`H&.5f(=$'Kd>/ElNo$I?%#+W?-IeAaX%4fE(B]mE%0$m&_#5kLGmbIfl<);2$NU?2;,D$naWd[UjheWr^%3CGcbVD#?Rh\f)ESf[+n#V?P0Nk)9n`KN7YpSZJY%ut<;lLsm<b.k^h3kCu5+5+i?^O>UI7?f_-:t)6SOStY)NAB>(bUM%KXK:)r%4$TYGq:sF<<e#GmlQ&"]Faj;G?2_l/_PtSF6,Q=(:SGb^1X<X""UbVng:M:,8_^aojj.r>DqdIMFSrti>H#Y&YM]::QJ3DF3)H`4%Pu$VI)SK-srSo9q=,l&dhHrI/^M9NhX7Tf?rqod"s7bTsnWbs7Om\fjrh'cEXfSW:jnckRDdVLTE;.So7us9L\bFFf="@l_r\r4(%n8BeW`o^8?!rW`s]lJVa#X>q9elT&:+`_f(oW'q6*q-aer8ROc=9#?C"6nB\=)M8,[sDjjT"ReC*a_&s]c$7de+BP\7'5lT&+?Y0%X/G4^\,N`)G/Xp_$[V=F;'+,7YL.hQXpj#/HKlUKjW"'ThlFXGfU,b?ZYG6FmoFr:D-23O0AO-n7V6'_X5<[*&>EHYeret9jBu"Y%6CPm0#9oP'21m8KR17`4eX[H%MCE,eqdJX#/bG9s3L<#dZQ-(lMP$`,1K!Ki,a8$eqFXA:BPqFg_,G%`8t8`#XFt7V$GC*=bSf]i%pll)kBY<X[Bi^BkPP=E/]s?H]eki8<:N/*'N1]ajqH4(km`&_RX>gm*n_,t??i!@!M)o?<2g$@AcL+6N-()>8ZYG]kT!HjlcD@GW%=c&?OW41HJ^24dP2q6U58K)`FQMIpL&t58N*'RCnCC3dibMA\U9V_89P<*\?bK5&%8>im.gAG"Zeuc+'pf(P@7VV2E^"9c'I&_54%8?)O;os/RG)b]5@2VuI"h5jSQD_ouNF`JFpc@7(g-#/$1=)hR#G#lmZn/=?C[)&uXN=\!7fd-1egV%5100asUn:0YG;c^B2^NoA7%T1V)W6;m`R<PSANPQKp<rpsMDXr^_Q]leDX`_+XNWcBfc=Vk$JXB6BF(^`tDYq.I]Uqb<)VK#)jj3n_ZBg;^b\:iGiICc5fV^nrP%NkSeulDJFRk8?EZTPn$"Q1f=]HM8\ia&%/P4BZB^-X@'8+3gV+7cPlV0I,.)j#EWi['%aIA;R)jL-0aedO%a&_\5!)8Xk\tH1L0Y%K.M0%CT/\^I"4]8@\`DL=T"PGKoaoSs-SeVO4fnKB4D$\kGI.^qjgsbCeNK71e?[j,a`D`S1`#.(rUB]2O[W=Ij1=t=S/[@8gZD7%A6UjP3.>MZdba(X?kNd-V(FB3hQ]Z.gJ#le0I*,+q$EP'kEjW@kNo]m%n15)E(qM+MU.(AQpA8ojrT]*8c0M*bo,l/[&oL7-D3c$%(G-=JD,]+uV@5I"<jFmorZ#U+RXfFUhP!l%`o][?Q]R"goAE>N!d6MMc-<OIL.O;P#\Z`"&N'k@d*nAWi2faa*2&=kh-%29'mskS%p_m"a_&(cE/?(!)nb0qB0Bi]_*RSnI17")4jS(u,&*O6cgX>BH\j?:YH8M\cRV!=(Nl<aUp1.@YJSZ\bYt$Hg?s3uGaNuC=]k_>%%&o0#o92:Kh-@VTg1<Iu<>#iqJM@#H1/A%0^bln`(_t$i"P;eU&pm\m-':.Nf)SJ<L;FjKT=XlPc_dL/S!c]&hL`3ZiT.74[K2Q`3%Z=0%"I"VC&;J9ol-#%+1oKk?YO!pgnV$G;D`0B7j&5)Yah]l58Sa1TUBl[NL@j3K-\AXi#7uD7\U<`L/q3`i4?>HMANW+8ej/28[%#nI'X^?8pj/3&/.%S/kAbJaaH(bVsD;Z>X/-Cd;YX;\kti!*L+E+>[r4R6\a>%3d(,m7bHP0kZ$q(S%&d"T;*gHB#od'kc.oNUle%UFEP!G-%cNpFSJ0B'W9AWZR$RZnO>X$0Ib22,4D3BPkP<X9LHj"tHb9fT-ikXanOI1F0S0,un/`P]=K%:&ET^C1CsblUG-+e/mlZ%U(,?XX]#Y&&"oS*;SdnSHm[kj,&<^b(^=C+<'-n$)P_<\.4$:Vp]aA)KVN5g]J>NgMV&RK)Y5E$Si&(>',k9tO^fGKeL]M/\pN[*%ARYp-YD%oU<\a2&f!rNE!6)cVd4l+\6F7Pg;06]a=fbL:7Sn1k8RtE3TN[_s!5gY>L6NlHjT^/ecXJ[#*auB'FrGdZh]r)^!91f3%"u8`6&2?Op961rY[mJ05^,BL[dn!;j6!bLb/3>"lP#2"^8*(q!Z]1)9*jfJEfS/b,4G-VlOdr_9,R3H([H)T8^s'-`P3j-s+^.At%aQI5hQLX+!]Y6>?iW?*@TgbH<>($+6LLL<2lLtBT@=<"N.3O=&B]Gs,S_h2.T`d$,:i*E5Sh\>B/I2(kG@c/]'cTe*FrWF05RZ4N%R2.O=fS4cK9]>r0TAbdd_&<__hht7Ai!8NKIh1QBKf;;pY^@%`OEIP+Br=L$#^o8(;>hJoicnBLVCOPcIF$UqZu!O6fI$ZfYcAQj%r?bQ>9Hd%Sl>&"t[JPB:=eS9kbiA>!m[#5U8B>>q(ke1p.q@Q?_i$dE'Ke14+[s<`!]EMN1Ka"lf`-Rf78mMpc=4mrAA]`oQAV/f%Q@]e35M5%!5%tM5=L#jQZLKB%GJ]'4Y_e#@6`/]Tk50GH5HMd01CQHC<5J]2!$4&n:*fm(->,E*&A[Qlc(Yi,,&"A_#t2s3\QDf4%;,ZKLW_+C+YrPNX66M+9d<6u_!-WTOWWXNmP/`>N+BedK)c]3I]cTu4<!"In0GB]ORd;"o-&h;l8g$Ha^8_eIQI*-:,nMAkS2uoH%TK6q]W.]]ONMY)16np=K:+(QIW0XAC!UiJ7W<>%aop!O@JFOSq6m[@Q\8tUU_<Jrp^?.sOk#;E0Jl`g)Ps?%h(egh?n;K'tW"OnU%;]%Q\&/^&3:*kEg<,GU*0_VM]J5Eoj4XHtm-TWEdf\jH:l3'p=Y=hk&7,]/n<siWAK\S![oUJ'V9du%e1+EH$qVZ4g'YjqspIYIF%(^<'!$K,;hT2d<OKi"<.PQIYu=2_%0JS8RTp.Bn30`tW=SH/12-MKR;/&iTP_?,F6!Z'Bj1"F?e1=[#*cmFuZBYFD:533%+V(9M!%&UR>FkU]Ya/Y_;=egiK">+>;d'V]n9;\k7A7:EcE4/rWC(^F#TT[c[*[?.JWGbRBY'!Vc20]X+AH;hr0'EoCR8RnAXER5W$Le00J%F^P?(YE9q7"rd.2g2.IG?T_7hN'r:+Ftt>afo)Hr/:DJq3Z%\faM@DX^.5Vd\5P0l-eA2ULdO+IY?4L^Y,mt$FInVI@3aY!XB5Qf%#mtNqif(r]r4/CY>1^Qp-b?_i1GZr3:f`Ju7^&$jMAd$L>4EA@_d3`@!cTf\bD<'e[S4#4e;/2K&-,t`6aHV(8T3T;Y^o*TdJ_!K%hhaB!bsI<AAG25he$f,pnW$OX_#UA,MatGpo)VJmf*3YF-/jc^\R>9<JgD>WAJC?\5];24H$:NG:L5HF]!K+@P%Ro1fUY$rpu9_d%&nCJ'n$,D7;In[>U4K3,A9<A\Ti;osBd0=3dUX&V<:WFH@0Ep)d?pIQ"ePKd7cF(ZCmbR.:Z<:16H[TQTl`U.^qhYX:.RNEA4iDS%H?^gCl\#t&UZeFQ.1KB5<B.;2!$!`c;@4gLQ`s(2.pc.8`X8rX6LLXkHuG6I[*BV>P>WglCi^u#eFQY`6qW;(*O_N'H?a%$[R<`%%k%"_bUm,KD%FK>s9'0Y%oQ)4QCuD>+2^qb]F;.WiQ"DG8PeqeUE@Rf(faPT];Gpe:]8TW['PtAp.CCiD-;rPp<(bp>3[qIU(PZ6g%X_^\%PS/(X6^gUr<3ttGP_NE8YR2i;L%A4d"d3IB^'SLD;'G<T9h7@7$L'YV6HX9`GkU'pJ-1[^N3lF,l7C![0e$qg^,cIC!?L6p%W3ZIY2$D$W`p<:sH%9uaBERu'Vs<UmJTDm5kN"WY^5!De<ogdlE>V>S8ao5sI;[cPV^qL1@hp^n1@BD,Y/UJ1Z)cg_WVE"g@TW2V%=Nfr1*:7]=@iQdOg4_<V-31Bn]C]hN>2]/fmnM1*GSb7KVrE(-,35ofSCHjZm@JD<Ri!&;7^2]p,rBe4#@\%,@!U,Mr&6hTG[_<^%%Np[4K@,>(Pp[/R&KM)8E3d2i.!s1NOCd/JNNCF@:U-VP+uS;<]I+(['Se8GhIDVZM\/e@aAXdM6&A'26A2*P'_YqWHXuFFV@?Zl%k7-E^&RNU($J*lSPa'__7G[T"1+gMa%gg.(!!LWO%>_J,Kbm9dF%P4t:H<nGmOh=P#nh$HfaUUmP,YX]0S&9h_fUMU$^+Pb+.Ph@%^eP-t`1u44$4mYIQ\Reta6R-#(#<@D&!"#UOej9*Na<Xb!m$N8+^g]<:'?!/*9C!ZdsR+"FcdkmQo##aR1VVFRhQ>Or?*g-9,k)_%kt(5D8jcFpV4#QO6Gpn9PLbD*8b!sG%N`mAq9OAU'<q\d8(rDW-m^=>J:"S!`"1)@3Bi,s!TGV>6R,#a\$ON1fUl#Aa-N[uCnQjH%Wt[j#go9h;f'h>>_W]X%m'*V_K[H9>[5+r.\r$VU)#u*N@HRn17#=p4Jr+4K'FP@99Lu+UW4<J-"-ULS1;5%jNr[I!FuL8:$)/@W%^kTqZ14^Y)#1FV/+XeMUD?CRm][2%(`(;F'ob7dj[?L>ETd@X[Fe\XSof[iC)OVZ%9;j1_04O7a=GSEf4_dNa:s];A?kHjG1p_o=%-csQ]fi5>$2i((a;7c"%OYt5>_.[=ME&UD=+?1lf:k2@X=&.`UfPV*7O7ncFKC3b/6;,eMHY>FmDN"t?%CD+''9Ta/Vp'"N:S'/3%TlXbN>@h@YUVF@W#sMsKQS!"pJfCL52"sF4!WY,T8F'<oL%>C3A(2u956Rj.;*TU)8.#F;%eW!<gkb+F<O7oVJg0)nTgARK?/Q\*%mK!/MTTHaJ?4QOOf^NW&jhrbBT9FgS5`G%P(/dmnj>\<]\C44lEJnJf4AQOs!cgBH/_<+E.0upB<5O]i'/'6f&t*6ef4bRUb(M.P%FkW)$?kQq74C2sf]kHN$+W&OF!V'd!(fqGGn=37*TV?JCP_&oZ;JB2SnH=M2fffI'#UfG@*#jX"<C![BJdl%n'`29?=Z[@$K]]W/%pdX5?)4XNt'm7QZ*>!Us4YH4hK4M;X84i815mbj%8<M("JLs6gO]CS8cm$*`J8tiB,j;h070Q2kT6UCW5oC'56Qh!!@a7OM:b+qB%I9f3k+P=7uck;3?BgSAJm/H?siQ]PYU$tf/RtQEhM_P9gqLQnCeYeq99PMF[Ql3W/XS;o1,>a&kn8/A1d)9o8:h-S[@@\<"gufgV%HO*3Z&18$NW\^^mU[7RBQ3!ET9lL:p&>XJ(XKqEN@.cBX_n(?=jrNc2Z()H'l0-&o.(b[j/UHY-ks1qeA+]XFbA5CW](<9]fT>^i%/sN/Nd#aLDd5`H;BTTUAF5XTu!?j#aP7ar64@VG4hr?[GYDWN8OpW+nc#[&W;AmL&qRQfG=pk1;58>^Z>th[m,l8]UdgUn`972QD%"`"fkd$?9P=nq$1h6]i#BO$M_*k:ZL(XGMPh,_,/)\je!-gkT,7@BS&4@TS1T*8W,_PW2TBetZ=KS7u$<^g>m4=5(8cs4XZ1ki4[%PiQBf=T5AeC2clK=c:Z\$L`C@]f[,DAD:p7<?*LXXDj7Z_eK7M&M'\#=s=g.I^%g^SnOdYNF4#04CWmEX>31!\aBMJW"L@$/?c>?%hp`iKT]DM=8l^*r=+hBQoP"WN%2JHQg.c$W;4ce9mQ)ZH"*"l2'',l#'^aF`7RCs'WltK$&CG+@5R&c8(1cm%?sgs!]?Vf=T6%:N%8I<KA?+gq&THg6`X6^(lBc8]Q[=t,3#=Uk?8Q.t3d+G"%'*],dX<>LoiXJ=)`Km;(9QP8W_[%%R%C5>V%.WfGP&$9CB_tKRWD\I!%/a6Sl+1rF\Sq@]H>JOuZj"d&.;nRL;%<Rst`):'9EQ5.``*UYD5:DVD6#-qY=E22g*1T-Ui#-#3g[q/WTc0l\#'h[/TphGAP_"rU%CdnD&Z/LQt^/GWJl:ag@>bdcCLdER^S!*N9&Lh=@=@.gDX[G`I(#+f%a`RD%]U:M=hA+NJ9);_6Um6@l'9,Dbpm`VEKsNV'@`7r(%#ITt*dZbrWX7k<$B[oB`6DmB-YLPM+67!PMEFG(0f#`Y_U4aoED(#77d$D91PiJK+P8L_B.p0\+;k^spet$5:$msDc>q-0e#>nYO%QKl\l"Z%?[K>8MmTdm01"iI!4R"-\mnNhbg*<_#6kg\68g%U)Sg]LW/oO*R?/P^]#&cbsiCfIVS]t=T&;P\]]5oLPT!gG)OU_roU%W`#L+L=L(8E%^_L6m1$d@8rb/ceoX+A5\'ko;V*DbT_;U#H'D=l@EQt'8J`=-Q@4EB!9X7bR!D-M*K4BfV=eYW3;n*WuW3II4fl<%F"b)tdN4gA,+lNhifi;n'oOrN*MN9GA`M_P2l1dQ\hq=o(7LV8kXu][+eq%JR\,_8d):']Z.W$i3s75.@]9U_Z'V36\Ou8"aY^n$%;R::ej<4f00d)QWgENR0/gZMm!Y@hpPX-mJ_M(i88N[gQA^NZ!;fjfX"O]2f877?+7@9W3i(iaLaD+=$9Zf+@@Z:JTM;U]d\dC/Z%aO1/+I9FO^]2aCWZS4F[PXI[:!8eYL0:rPfd$9U3X:Tc\l^EGM3nF%u'VjnC)'DneXAVth$,6cm/##Z_GuaIM%[ntEmQsb*n&=>H%-/9ZmTUUM5feR<Nn.$nU$/D(@\gb4)@<e5Wf+N"cMn6mCU(fPn2b@g>2DZV4%TAPO>GMk;:=ETmYrkogj[o5nZ\Vq<Q`,6&#,.l&%`s7a$a%g&ZqYD<R4HT@qPkLp><T%cP@cjO%T`s-Na!^Bqb=7^q5?IfKm!Q6eHud:p,t"at.=2rDM%K+Mor-/OplT=ZE0.O0`:+o?%(O8irCKJcJBH3Sp)+egAA`bGGGnah<g)KF^$T6m^lnCiFqV'oLK#a&d-1?+A#kPJt;>d:Q(>!Tm3?]"s?5Wk]4Bk/4Cb?uLK&Z9t%^H'1^AUo_kkpqpr-&*dE&eKmF%)R0?88<$6KUba?RPRer[2b[?7+%MnG`&/iM@lV&7hXGe2M8m$0CmCF:BqU(Am,hh"AC*AfHs0#%V-bNcR40+N-r+f85iM>UJorjokoXRTS-+os6$sV4)AJ4<E@.E=U6B&]E>5,^6=Q+W`o3a,,UJ$5*%eT<U*s7eRu3XAKrOaLH\l4+%Ob>nG9+n9A"IZM7/Kn!nGBXa[4(sKnEXY5?FpRq)cDUo+I@AtA+e(m+6&!cQ.B[:\o:AOh6"&OnKcONO0[0SB]&T^m)A79GXIYrX%!b/%^ZcZ.8rWGm'EE)G'EL7D0NX>d:fH;)&"YVn5,=`o^#u62GUH#@]lDJW$0G5WP3=>:h2K_[;$o3C#\8i93KpT;i'OG4D0QIl]%AIGGV'ZM&!f/J^V.MV7#Ste!nBKCklK&Ld9NM2GH"b0Fj:h*.<bcMPTfGFr%<#kZN)%%6\cC0ce7S76j!&tB+V.1o!]<Mt*(i!<O%b##oIVIIkJJW(9'T8j>f5l'SNk69,9j$qq-mWE,\rqt.rC6DAXYTO*ca%gW:=RH>V*Y+&-.:ncKbF)/qU9N('e`n!@MNZW7.7M5!%`+KIY(0TZu"<%6)lmOb_5U'SYkB%VrO5f(LnJ)e+QK#PFJen67$?g)1S]opr,n<u$"Z_U.JeD;+LS2E/&p3=]V$6=n:5fX.(.Zb5%BWQZMP'CHoOpp=XE_[uo1a'0)#hP9l#anGH,TZq6-(Ys-9ao@95>)QHfdJ:]nPsRBOEi=eH8J,sY=*FT9*[i38b#BCi5XuV&BECA%!U]kYPET,?P^i>hL<jqr6Ir;Z'5dgs9t8/hp&'d(1,`.C"Yh)`i>22;dY(hdYVAh]V5FU.+BW4<\-8i`I_m\dae;D<`T'5T*4I&M%_G.OOJPssjgVg>VrL'JHe;:Ge\Y[f4$'K8OdJQ$[K/cZIVVq3.ig=Bm_ql0Nn>SK[9pVfc5\a7#f9O3ce83C%&9T<.j7>5`B#rE@%2D<W.a[0b6@^@`s2MX=$%Vg0LJpHVN>!lX\\fQfU4WtpQB;1SG#9=9Vbt=G%i\43A33@=Y#:72&gYjh.Z,tWPi\41gc<jus#RM*>%%Yf9(Q6PJ)_D"e'*B+f>$KkH6=Nn[$`.<l)`B]7^iuZ0KTQ'I0#KAkG.F.)gN%q/R2hEb\I+471JhbW8NH#)2*Yr5,B`qq=YQjOB%(heb3N"q=t[WYRfd?o^`@rN0S1ALF1cB?*1KYkc:`ZlQZ%Fh^gi>?6Zc`Pd+Jmjds1nl^$Ot.2&`\]]+0Me+01$,;3f7q+fDQ4Oi%jJIgN7W,6\Hd>D$K8nYc0j*J5$Gh%+WXs"-V@(./DQ48LkGF-S7W,4cCuhIN_g64#5]#MY$H,DOWpm"N-3[j'1K>PU1/e?c4Yr'l%<G&7%Ch0E#`-Q$q^h[JXSg)BXTifW7'oFk\C.m*EW?SU=R4@VCR;%4m5U878E[8X<O#,N2&d&U2q$+c&aIJ;kJJdO1%q4r!9bh'o%0Hr5JpkWiW@N_lnm[tEZ`c.A::PfRdV[CC*HeB[o<1t-8dEK06LuEQ;\1/$lKbINK+NCdeJ^PuY!lQd'::fhC(hbgN3/m[\CW[7L%0[Gd>1]_'Y3G658`+5a"e:8AA<@06i_O(SS%c<9ZN41#M"!nHrjAe$knK:&kJME`E5.je0(fR_WM,@$G_+@ha4CnT6HA8D,X>*Df%@O&ci/ClW$fMlFL$H>Pi;)$QW9Z:<__t4XOR#8n0L8ejf1/,Yr,K!J3eh]ug?6d?=:aT;'F]qUr.HA&LVLr?Pe4^dSR&IAK_.(VV%R6b:#kJ[ouC04.dg6fIsZbZ*&'1Of*3fOfBdl9!+@^/F5bX<V5@#QHd\N#0q%!cg/0GSmgX_@Na.:jQZZ-GZZ$Khu%8s6dL/D$Os%UcF7.iu!T7)F&`#;d+qXac)7N+?38]e4IkQ-6+gG'Q5WJ!andakAlN9K*uWa44<O8L;?oOZo2%X=[&/Z#O=CT9c>s2:^'X9$9eF)%:*fUh]pDQ.8F3)/:k$WsldPt>Z\)?30-,r:/1<^B-%6+<T+g.]+#8r[2QJ$Y-V5MM6VYs>\%L`8"XA;VM\Q.7-5Ag!jA0j.ca+oS%a)M3/$6;Ka8>a*DW!+)0mN$=n]VPQ^,]NFD$9DcEF%nj_'/tuB6>Q7X;jr@-QJEM\",PLL-RB1P*Ah^Nq&igK==rS63_nB:6AU>J%_%)m<3Q[EgSdQNm#iHI@.n&@CU*OLS=\7*Fj,i1TF\9Q@:-F:S84k!04P:`CD+fm0#9_uI!i\`1kre'8)ub5]-IdI=QYr@](2STD%G`JlQ(eSaIN2AGP.B(I$5t3.6lTJ^)+\HS)E@)u1Z=IQ7N$NN\'ZnUN(l=Fn1h/q4,4&UB`0!I3$Zc+6"4t/HM(O@/DIEKN6ktq7%afA_\Q+U^Q#%55G`MaK(M-?em.0$Ar^N++"jnS-7fb`!7Gl7L0o1)mN^%l_`H(81YblK%X70GEBI8oVi3'B`W4D!A@4]akk7DfRd%YD*@d)QW5c!7r>'a>f#k;ENRsfk[WWBqDJ0jO[dZ-8_7'`$)/WmaEKL8YGV293OTA;/O0@Tf-M#[#cP1ImRB+d<-lYd451\`(58+%_NCmS&NTR`N-hU<F(h#$dr5j.$6Y4].Q:+_2K23S8VY6_+6+J>WlKI&^^4*a!=mR68PQ-!j!d`D@er8&dL%=s\NU:!.d_2,$J$?c%PLPGjKl(XLQ.WgC@DjnBb#_c;MKc.K&oj"9%Sh@`#!U?I,`&>`M%g%p:G/_g&.PmWJZlb%\\29"q7&Bkk[L^k_(\0UP#W.U*Dt]`%W(qHQ_?!OIkC9_k,9D^uR>JG)WuUt%FLt=O%WFI(U;cB1KUkTt,r2.:6;(Q`&QmH?JDEbQ!gjl0mhH.0O&*Tn6WuiI6!B=BPP7D,%RTA6CUuqa-7RE4_L;'.-,q(l5%Yj$h+jY<O0[0GK2_0D$So)_5FX*a.mRY_OkhcJiX?gNr"KB)b;)hcqns5D/pIN,n\2n'aAH4EL%&r(6S!BD>DX0:Om-m@\m2_3NsZt*X:3p`nP=0^$<8?$B$.<qtt<-tXIk")IehS%N#@sk:scUb#teoe<=@N/!Pei)C-d+tKsVJe7l%$#O]%U!A-4e0Sj_\r-+-G-JQ<9?QgR9N@`S-Q,;Vc9<(:%Riq+l:CDc-!iUX98Ys@_O1IcJ0AZI9hsE1P^):X:kd?*:oC,KoHdg*%MO+0VPchsjpf&gdg/55qB`F[T+WVZQ8u3QEe]b)!QaQ&A30m_bFW@Sc:[KO+Q<50*DPYe8*@[jt"-9g>llXHs8;VC6?5_#5]k-=u%]K.h)]E,aKS`F:O<pIfXOn^b7iY<*J'n""]+X;<9`2hpnU9K46e2BX_s%;NJ]QR*$Q#)\nhVEO</&nJ:kDYYJ?X5<((UgS*:2T$.%r7oOhAbn<+NF8V0?H;k[KK(RR3j.JTZlMgT/1IU0?WF>&b)qM&+Xr.5MCETndK0kF(ks0d%O$/,j(SF>k$/$+FKiXe"R=qs^kaSG%9ic2OJ:%O_"J`d?:f*eq]Ktj,mC:(K37X1(:&#u#AOXd`f[=;q`PO&H78I1@,T%4051bJ^e7gl8Bn=,J1l2J[gZ',T'W[dW1n7Hq%,HG2n>;J5NP===E-lV]:_Q)6/f[XLik_d),:tWN^@/C1#?3j;([MEPDB?`8!lE6NAK<:hKg43"`&ff51Q4YQ7YobM$Q`&g+?W+3N%bt$(Uc$H8Tfb,3hRoB/Cc,>jXglesKZu?45aUUr(FUT*5a_#O])oCiB=RSPC*]/&(PLS3KUHsol30V<!ae+Jp-ele)T^f!nXAG"+%-ZPu%osu\]o0K&6+?:n7Oed[a:_%*EcPN;2`Ft%F7+RUP4-!-">=-67)E12F(6;%a<V*^sO!ol""nkR9g2[K#8<ILYU!T&AmD`hf%/)nLg\qV2EFq$)0j8oJm,0,28V"e>$;5XC3R7QQ#P?o"5'4cjM:CX`[@l.oZN>V%`?+a[F(+AWe[-p@T2*W:"$)s4oUc%$Rf992d%eS<m6phK#@Md-J.p:`uAI[8isa;!6Q(-U:2M.(KXEX=#A;Ur12*f-,^Y!pZFP2<SP9%?hiOZ<&KJ^V.G4kG4R\e[SiSDpZR7Eg\R%W9RRIR4;.e,'k_"C4S-[/Y^IblDR-TF"O+"<C^'@,&"j?l<<gbSIQ(Z.c;GPT&s=:0_&.5/^g)'&b\@8E-/6OG]gAYKt8$sRZ_em%FY.W6?8'%,l<4<b;Lti`&WLj#T&s5;cc)l!&N#\E)-r/**HUFMMeJSQ5'4M-F@o?4bYo"KVWQ'+^WX*BmdWT3B1lp_[tl[.YWCYc%3[eaCqA-?KU(ODDOX\2d[0Vq/WTm[J"lWG)l<D3i@^9!ofXJqET]Ps(qA/UmW2]&djP%O_Y4oZLYu;$p:T1-/E8mOYSV!h1CLE$P%LLpmj?nY+XUk,M@Fgado"cAe".@f#84db4oRdIqUKTN'=MF1+C#?)Tr8j/P.jG3?1HSF"HZp:%0.F0:eVI5:&"sC)Y9S"BBO:%k0%Y5Au-ETG@<@&d'N?jaFQ)?X-<2)*!492dMJR_rR]$Dp'2-/=&#NKDG:.6%Yk#-pd8@*0]@PseJL0EmMh`'>f>6L"fr5Ur-&J^6E#%?j\_^c`:F\NVa,Q<P]@t2$Qsp'KS[W<[sJGLIULD'O%qcWk2[ecR1Sr1t<uZ;cE:AoA>8!0SC'Dm*Se-2)L"Qn=Vg!`>u<KRc5$J%d\A7g9YhF,9Fn!['8ML/<&DS93`aa078o`);m:!O9u/V2+cqSY3"Mp_gnUjR;[\gcWM\Yt'gB6#m33!Z!LI'T,IJ9l39@rY7VXO$%=;M"G:geTm8)puGq\L'c(oNY_b7ImJQ9Ik:AMeh*(@LhW,N1U6*;s-kZGgNL'N%jdpMjA@THAdOqQrLrNKNO%1'VLPf&o*#/PsXZ%El*0_eCl+c1:f_&a"M0u=UNq8;#$7%l?5&iC):TOjW\]o(9"Y!\noAG/Ve!pa6#3TC\d<NT:tQP[:l/,5[C%+O_.`,+l5?dC+V5!%ZLhq*(1.X9M[!oJFth5?*s8p:$^GZ6=Tc&i7J2hp5cr9jB%_rR/ac6i&>2L,YrZp&X[[$02B#o';-GN)*&4HJfgX'"<7Lhg*4r0u%X=BhB*M^!"1s@c=VKGa>=kj_2-nU5)>T0B0&0YC-0j8$iA=J9-7LKfk1X-i5Ka<NnC5gP,KY5cpEJt[^asX`'N#'l'i"TT9UBT+>%R@`!-"j/2m:q42*Ds81i.CDFII-)I(1pVYMggd<K2%#C<TYLmalfASsSDcL3J1;/aOuScPa$EV*/.%2D"i[;Z1Uio`mNHfl;!ndW%+Qa^HK:KLTRYA;mqSQfup9gh:r"[Yc'4VQQJc6b&*\C1kd0s3u*49"Fl6k/Lou\'$:JT'RJAOeg/Ip=h+<f'1;$@+6(;`GCIgYpl%Sg"NabM=<9k+F?+"e'#_'IGA+B3SA4;9l>=+*('_8l$][4lZUn=:=DboKG4+'I7-A;D*AoT@<oO^#8)n='7GXY'.o^.R`ljGC3h4%7J\`40"Ikrds8,8$K5bLaDEr(1M*]BbK"3t6!;uRTQT+dW[JQ5(o4$Mj?e4_?kk8BD7Mhq6"LBV-+]#!=t/AP-e5ra$t#eM0QhKP%3m((o/6BhlVpkdmo'+i+[El2E.'.?KlK;F+g@>hli#8aO;+-;O0GIFieP`aq>b3%R3LG.ioGkL+og#4AbXLHdLq60XV,24bBRt3V%4B@KTa]3Y7Qka(pq-G7.V_)rM;&k&OdfSW@.B-T.D%Zc*8PE4Rn$=;sbFp(4`[mI'(MWE-o2#/ZIUQr1osu9KGQ<U@>CaucUcJkL%&$B)rMe?E=0ZSORMFJ5Wd1R6?"fTB#n*p(i;M;<6)+KSnX*<:e'f]S(6-=4P"02le+jN*S%gU_\0I<aPcaFSFMoJBNDls5M_iqmX%M<o6AH6VR'APpun1serK^lFCI:?B:LWn3h]R3/<q@1)f%dNI#54p<HA.dq(U:/YhOJh_JJ=O"n#\N3.lG?mJU:['3m31"u!#176Z%nT#,nEl"b"mQ.Lt-*t^92*i`tm@gWsDJ'<XY>D/Ikj8LVhL_RPb#<*`/lF/SA_bZ(eH1^B;Xe\C=1LlLVie/*9%M[UYFr;u!(4e.%`Fq;3AZMQK40fSgA%d_uZ5#RDLBT/3jfG?i)I)=A@&E+e*2VHVaAnlI?KK=0oNLa1hdtn!1bJt..p(^,SE%u+MXtlJKW-Y35/bj9%WZ\^\?9H5$Kua?<($M$b2-"pZ^?/niR0lT[(F<(Q68F_KV;nP;;L'ae:dqLkY<8)DC5q\,Wi]4[.7=f=\umPZ!FP>iMT/R&P_3g+%TC-)RdRlnim@)JC[q)_T**udkeIfdD/fQPBQ'+[]E,mLQC^4%J_=Wjq?7)5P#@M5U[12:-]VIIg=3I-JI)<e&G*F+\)D(&A1IhVr%U@LHSK$Y_0^Yk-Y57!T+5`NY#*J3.XP-hf"EdFI305:J4>+i+0Vl7T7EW(b/SkMZsd@$+8MFk.l_2SY.S<=p-^u[)FQatSSKIb4g%a1N_MgV#.YjH6g6FCqO@&rf@(1W-VJ-^:-`[\*>l1)[ELbqIt\?>##koB;GRp3/f[@tPts/\\%+bKOK[;h<Ug"hd?^-penElT%Fn%S=X5rO^f/dA$XL0pl8k(Ft1OCgsJ4B(nqFQSmtUBHce(&;E9KgZZ_@=@,Leea2#NR-QJ?/6CHl$XG+ngN`i$r]S(92N)\*H@@S2?%?-8BG<2G.UEYrGD',>`fQ8DkUQ?\l:G,^"d1ZP:4ist6M[[H)JYR)VM]IMdeR=RsDNlca?)9_3]EYrGDMjRs4BJ[Q6hK@/CoAEIo%A<AW1RW.AI>gIitq#e?!HY[D.D=-W%7h:)qFmnkLLTa`"]tX78_ps+[T>,Vln'/b:oU")uY9(D)eb=%Uoq*o:!t)_>+(&56s20PU%rs+K@<*f~>%AI9_PrivateDataEnd