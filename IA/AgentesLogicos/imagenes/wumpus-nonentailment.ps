%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: wumpus-nonentailment.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jon
%%CreationDate: 11/3/09
%%BoundingBox: 0 0 190 144
%%HiResBoundingBox: 0 0 189.6358 143.4947
%%CropBox: 0 0 189.6358 143.4947
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 11314 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD21FFA8A852A87D5227A87D5227A87D5227A8A85227A8A852277D%A852277DA87D52A8FFA8A8FD59FFA827277DA852A8A8FD19FF7DA8A8FF52%52527D2727A8A87DA8FD4EFF7D277DA8FD2BFF7D7D27A87D7D7DFD48FFA8%A8275252FD0727527D7DFD27FF7D7DA87D2752A8FD42FF5227277D7DA8FD%07FFA87D7D2727277DA8FD27FFA8FF522752FD3CFFA852F827A8FD10FFA8%7D52F87DA8FD28FFA8A852277DA8FD36FF52277DFFA8FD15FF7D2752FD2A%FFA852FF52A8FD33FF2752A8A852FD18FFA82752A8FD12FFFD11F827FD06%FFA82727FD30FFA827A8FFFF52A8FD1AFF7D277DFD11FFF8FFA87D527D7D%FF277DFD06FF7D52FD0AFF2752A8FD2BFF7D27FD04FF27FD05FFFD0927F8%FD072752FD05FFA85227FD10FFF87DFD05F8522752FD06FFA827FD0BFF7D%7D7DA8FD28FF5252FD0BFFF8A87DA87DA87DA827277DA87DA87DA85227FD%07FFA8F8A8FD0EFFF87DFD05F827277DFD06FF7D52FD0EFF5252A8FD25FF%5227FD05FF52A8FD05FFF8FD07FF5227FD06FFA827FD08FFA8F87DFD0BFF%7D52F852F8275252F8F82752FD06FFA827FD0FFFA8FF52A8FD22FF7D52FD%06FF52A8FD05FFF8FD07FF5227FD06FF7D27FD0AFF277DFD0CFFF87DF8A8%FFFFF827277DFD06FF7D52FD11FFA8F87DFD20FF7D27FD07FF27FD05FFA8%F8FD07FF5227FD06FFA827FD0BFF27A8FD0BFFF87DF8F827F8F8272752FD%06FFA827FD13FF7DA87DFD1DFFA827FD0DFF7D7DF8FD07FF5227FD06FF7D%27FD0CFF27FD0BFFF8FF7D52275252FF277DFD06FF7D27FD14FFA82752FD%1CFFF8A8FD08FF27FD06FFF8FD07FF52F8FD06FFA827FD0CFFA827FD0AFF%F82727F8272727F8F8F827F8272727F827F8FD0827FD0EFF7DA8A8FD19FF%27A8FD09FF52FD06FFF8FD07FF5227FD06FF7D52FD0DFF52A8FD09FF52A8%7DA87DA87DA852A87DA87DA87DA852277DA87DA87DA87DF8FD10FFF8A8FD%17FF7D52FD0AFF27FD06FFF8FD075227F8FD065227F87D527D527D527D52%FD05FF7D52FD09FFA8FD07FFA8FD07FFA827FD07FFF8FD11FF27A8FD16FF%27A8FD11FF275227525252275227272752525227522727527D5252527D52%277DFD05FF27FD09FF7DFD07FF7DFFA8A8FFFFFFA87D27FD07FFF8FD13FF%7DFD14FF5252FD0BFF27FD06FFA8FD07FFA8FD07FFA827FF5252275227FF%27A8FD05FF27FD08FFA8A8FD07FF7D5227F8F8F8277D7DF8FD07FFF8FD13%FF5227A8FD12FF27FD0CFF7DA8FD05FF7DFD07FF7DFD07FF7D277DFD05F8%5227A8FD05FF27FD08FFA87DFD07FF7DA87D7D52FF7D7D7D27FD07FFF8FD%09FF27F85227FD07FF7DA8FD11FF27A8FD0CFF7D7DFD04FFA8A8FD07FFA8%A8FD067DA82752F8525252F85227A8FD05FF27FD09FFA8FD07FFA87DFFFF%FF7DFFFFA827FD07FFF8FD08FFA827FF527D7D27A8FD05FFA827A8FD0EFF%A827FD13FFA87DFD07FF7D7D2727F827527D7D2727F87DFFA8F82727A8FD%04FFA827FD09FF7DFD07FF7DFD07FF7D27FD07FFF8FD08FFA827F852F852%7D52FD06FF7D27A8FD0DFF527DFD0EFF27FD05FFA8FD07FFA8527D525252%7D7D7DF852FD05F85227A8FD04FF27A8FD09FFA8FD07FFA8FD07FFA8F8A8%7DA87DA87DA8F8FD0DFFA87DA8FD07FF7DA8FD0DFF27FD0FFF27FD05FF7D%FD07FF7DFD07FF7D27A827F8F8F8277D27A8FFFFFF7D52FD0AFFA8A87DA8%7DA87DA87DA87DA87DA87DA87D272752272727522752FD0DFF522752FD08%FF7D7DFD0BFF7D7DA8F852F87DF827FD08FF7D7DFD04FFA8FD07FFA8FD07%FFA827FFFFA8527DFFFF27A8FFFF7D27A8FD0EFFA8FD07FF7D52FD07FFF8%FD11FFA8A8A8FD09FF27A8FD0AFF27A8FFF852A8A82727A8FD0DFFA8A87D%A87DA87DA87DA87DA87DA87DA852FD09F87DFF7D27A8FD17FFA8FD27FF52%FD0AFF27FF7D2727FF5252F8FD09FF527DFD10FFA8FD07FFA8FD05FF2752%A8FD41FF52FD08FF7D7DFF52522752275227FD0AFF27FD07FFA8FD07FF7D%7DFD07FF277DFFFF7DF8A8FD43FF52A8FD07FF52A8FFA8FFA8A87DA8FD0B%FF7DA8FD17FFA8FF7D2752FD45FFA827FD07FF27FD14FF7DA8FD17FF5227%A8FD47FFA8FD06FF7D52FD14FFA827A8FD14FFA8F87DFD4AFFF8FD05FF7D%A8FD15FFA87DFD13FF7D27FD4CFF7D7DFD04FF27FD18FF527DFD0FFFA827%52FD4DFFA852FD04FF27FD19FF277DFD0EFF277DFD4FFFA8FFFFFFA852FD%1AFFA8A8FD0BFFA8277DFD50FF7D52FFFF7DA8FD1CFF277DFD09FF527DFD%52FF27FFFF52A8FD1DFF52A8A8FD06FF7D27FD2FFFFD0827F8FD082752FD%12FF52FFFF27FD1FFFA8277DFD05FF27FD30FFF87DA87DA87DA87D2727A8%7DA87DA87D7D27FD13FF7DFF27FD06FF7DFD10527DA8FD07FFA8277DFFFF%FF527DFD30FFF8A8FD05F87D2752FD06FF7D27FD12FF7D7DFF27FD06FF7D%2752527DFD0452F852527D5252527DF8A8FD0AFF7DFFFF27FD31FFF852FD%05F8272752FD06FFA827FD13FF277D7DFD06FF5252FD06FF7D27FF52F827%F852FF277DFD0AFF27A8A827FD07FF7DA87DA87DA87DA87D7D7DA87DA87D%A87DA8FD16FFA8FFF827F8525252F852277DFD06FF7D27FD13FF7D7D7DFD%06FF7D52FD06FFA8F87DFD05F85227A8FD0AFFA82752A8FD07FFF8FD0827%F8FD0827FD16FF7D52F827F87DFFA8F8272752FD06FFA827FD13FFA852A8%FD05FFA85252FD06FF7D2727F8275227F827277DFD0BFFA827A8FD07FFF8%FD07FF5227FD06FF7D27FD16FFA8FFF87DFD05F852F87DFD06FF7D27FD13%FF277DA8FD05FF275252FD06FFA8F852F8A8FFA8F85227A8FD0CFFF8FD08%FFF8FD07FF5227FD06FFA827FD18FFF8FF5227272752FF2752FD06FFA827%FD13FF2727FD07FF5252FD06FF7D2752F8F827F8F827277DFD0BFFA827A8%FD05FFA8FFF8FD07FF5227FD06FF7D27FD18FFF8FD0752F827FD06522727%527D527D527D527DFD0BFF7D52FD07FF7D52FD06FFA827FFFD05F8FF27A8%FD0BFFA8277DFD05FF7D52F8FD07FF7D27FD06FFA827FD18FF5227525252%275252522752525227525227F87D5252527D5252F8FD0BFF7D27FD07FF52%527DA87DA87DA852277DA87DA87DA87D2752A87DA87DA87DA8A8FFFFFF7D%7DA8FD05FFA8FFF8FD07FF5227FD06FF7D27FD18FF7DFD07FF7DFD07FF7D%27FF52F827277DFFF8FD0AFF7D7D27FD07FF7DFD1027F8FD0727F87DFFFF%FFA85252A8FD06FFF8FD07FF7D27FD06FFA827FD18FFA8FD07FFA8FD07FF%A82752FD05F87DF8FD0AFF27FF27FD07FF7DFD08FF7DFD07FF277DFD06FF%5252FFFFFF7D7D527DFD06FFF8FD07FF5227FD06FF7D27FD18FF7DFD07FF%7DA87D7D7DA87D7D5227F8F8525252F852F8FD0AFF7DFF27FD07FFA8FD08%FF7DFD07FF27A8FD06FF527DFFFFFFA852FF52FD06FFF8FD0827F8FD0727%F8FD0827A8FD0EFFA8A8FD07FFA8A87DF82727277D7D2727F8FFFFA8F87D%F8FD08FF5252FFFF27FD07FF7DFD08FFFD087D277DFD06FF5252FFFFFFA8%52FFA8FD06FF52A87DA87DA87DA8527D7DA87DA87DA852277DA87DA87DA8%7D277DFD0FFF7DFD07FF7DA87DA8525252A87D2727F8F827F8F852F8FD07%FF5227FFFFFF52FD06FFA8A8FD08FF7D7DFD0427527D27A8FD06FF527DFD%04FF27FF52A8FD05FFA8FD07FFA8FD07FFA827FD07FF27A8FD0FFFA8FD07%FFA8FD07FFA8277DFD05F8FFF8FD05FFA8FFA8FD04FF27FD07FF7DFD08FF%7D527D52527D7D7D277DFD06FF5252FD04FF27FFA827FD05FF7DFD07FF7D%FFFF7DFD04FF7D27FD07FF277DFD0FFF7DFD07FF7DFD07FF7D27FD07FFF8%FD04FF5227A8FD05FF52FD07FFA8FD08FF7DFD07FF27A8FD06FF527DFD04%FF27A8FF7DFD04FFA8A8FD07FFA87D52F827277D7D7D27FD07FF27A8FD0F%FFA87DA87DA87DA87D7D7DA87DA87DA87D7DFD09F8FFFF7DA87DFD07FF27%FD07FF7DFD08FF7DFD07FF277DFD06FF5252FD04FF7D52FFA8A8FFFFA8A8%7DFD07FF7DA87D7D52A8F87D7D27FD07FF277DFD13FFA8FD07FFA8FD08FF%A8FD04FF522752FD09FF52FD07FFA87DA87DA87DA87DA87DA87DA87DA87D%A8FD0827F87DFD04FFA852FFA827FD04FFA8FD07FFA87DFFFFFF7DA8FFA8%27FD07FF27A8FD13FFA8FD07FF527DFD07FFF8FFA87DA8A8FD0BFF27FD18%FFA87DA87DA87DA87DA8A8FD05FF27FFFF27A8FFFFFF7DFD07FF7DFD07FF%7D27FD07FF277DFD1BFFA8FD08FFA87D277DFD0DFF27FD0CFFA8FD07FF27%FD07FF527DFD09FF7D7DFFA8FD04FFA8FD07FFA8FD07FFA8F87D5252527D%5252F8A8FD22FF52277DFD10FF27FD1DFFA8FD09FFA827FFFF52FFFFFFA8%A87DA87DA87DA87DA87DA87D7D7DA87DFD0952A8FD1EFFA85252A87DFD12%FF52A8FD27FF27FFFF7D52FD06FFA8FD07FF7D52FD07FFF8FD20FFA87DFF%27A8FD15FF52A8FD27FFA827FFFF27FD0EFFA8FD08FFA8FD1CFFA87DFF27%27A8FD18FF7D7DFD28FF27A8FFFFA8FD30FF7DFF27527DFD1CFF7D52FD28%FF7D7DFFFF277DFD2AFF7D7DFF27277DFD21FF27FD29FFF8FFFFFF27FD25%FFA87D52FF527D7DFD25FF27FD29FF7D7DFFFFA8A8A8FD1CFFA8A8FF7D27%27A87D7DA8FD06FF52FD11F87DFD10FF52A8FD29FF27FD04FF522727FF7D%A8FD0EFFA8A8A8FF7D5227FF525252FFA8FD0CFF7D52FD07FFF8FD07FF27%A8FD10FF7D52FD0CFFA8FD085227FD0852A8FD0AFF27A8FD07FF7D5227FF%272727FF272727FF272727FF7D527DFFA8A8FD13FF525252FD04F827FFF8%A827FD04F87D277DFD10FFA852FD0CFF5227527D5252527D2727527D5252%527D5227A8FD0AFFA852FD30FF7D5227FD05F87DF87DFD05F85227A8FD11%FF27FD0CFF7D52FD06FFA8F8FF2727F82727FF27A8FD0BFF27FD2FFFA852%52F8F8527D27F852F852F8275252F827277DFD11FF527DFD0BFF527DFD06%FF7D2752FD05F82727A8FD0BFF27A8FD2EFF27525227F8FFA852F87DF87D%F8A8FFA8F85227A8FD11FFA852FD0AFFA85252FD06FFA8F852F8275252F8%5227A8FD0BFF7D7DFD2FFF525227F8F827F8F87DF87DF8F827F8F827277D%FD12FF27FD0AFF27527DFD06FF7D2727F87DFFA8F82727A8FD0BFFA87DFD%2FFF7D52FF2752275252FFF8FF5252275252FF27A8FD12FF7D52FD09FFA8%5252FD06FFA8F852F8F8F827F82727A8FD0BFFA852FD2FFF5227FD0752F8%FD075227277D5252527D52527DFD0BFF27FD0AFF5252FD06FF7D27A827F8%F8F827A8277DFD0BFF7D52FD2FFFA82752527D5252527D2752527D525252%7DF852527D5252527D2727FD0BFF527DFD09FF5227A87DA87DA87D7DF8A8%7DA87DA87DA8F87D7DA87DA87DA87DA8FFFFFFA852FD30FFA8FD07FF7DFD%07FF277DFD06FFA827FD0CFFF8FD09FF52FD192752FFFFFFA87DFD0AFFFD%08A87D7DFD08A8FD14FF7DFD07FF7DFF7DA8A8FFA8A827A8FD06FF7D52FD%0CFF527DFD08FFA8FD08FF7DFD07FF27A8A852272752FF5252FFFFFF7D52%FD0AFF27F8FD0727F8FD0727F8FD14FFA8FD07FF7D5227F827F8277D277D%FD06FFA827FD0DFF27A8FD07FF7DFD08FF7DFD07FF277D27FD04F8277D52%FFFFFF52A8FD0AFF27A8A852275252FF7D27FF7D2752277DFFF8FD12FFA8%FF7DFD07FF7DA87D7D527D7D7D27A8FD06FF7D52FD0DFF5252FD06FFA8A8%FD08FF52FF7DA87DFF7DA8F8A8F8272752F8F85252FFFFFF27A8FD0AFF27%7D27FD05F8A8F852FD05F87DF8FD14FFA8FD07FF7DA8FD06FF277DFD06FF%A827FD0EFF27A8FD05FFA87DFD08FF7D7D27F827F87D7D277DF852FFFF27%F87D52FFFFFF27FD0BFF27A8F827525227F87D2727F8527D52F852F8FD14%FF7DFD07FF7DFD07FF27A8FD06FF7D52FD0EFFA8F8FD06FFA8FD08FF7D7D%5252527D7D7DF8A8F8F8F827F8F8527DFFFF7D52FD09FFA827277DF827A8%7D27F8A8F852F8FFFF7DF852F8FD14FFA8FD07FF7DFD07FF2752A87DA87D%A87D7D27FD0FFFA827FD05FF7DFD08FF7DA8FD06FF277D27FD04F8275252%FFFF27A8FD0BFF27A8F8F8F827F8F87D2727F8F827F8F852F8FD14FF7DA8%7DA87DA87DA87DA87DA87DA87DA8FD092752FD10FF7DF8FD04FFA8FD08FF%7DFD07FFF8A8A87D525252FF5252FFA827FD0CFF277D27FD04F827A8F87D%FD05F8A8F8FD20FFA8FD08FFA8FD15FFA827A8FFFFA8A87DA87DA87DA87D%7D7DA87DA87DA87DFD092752FF27A8FD0CFF27A8FF7D527D7DFF7D27FFFF%527D52FFFFF8FD18FFA8FD07FF27FD07FF7D52FD16FFA8277DFD06FFA8FD%07FFA8FFFFFFA8A87DA87DA87DA87DA8277DFD0DFF27FD19F87DFD20FFA8%FD18FF52277DFFFFFFA8A8FD07FF27A8FD06FF527DFFFFFF2752FD0EFF7D%FD08FF7DFD07FFF8FD07FF5252FD3AFFA87DF82752A8A8FD07FFA8FD07FF%A8A8525227A8FD0FFFA8FD08FF52FD07FFF8FF27FD04F87D527DFD3DFFA8%A8525227522752275227522752275227272752527DA8FD11FFA8FD08FF7D%FFA8A8FFFFFFA8F87DFD05F8275252FD64FFA8A8FD08FF527DF827F82727%7DF87DF827527DF827527DFD64FFA87DFD08FF7D7D7D527DA8A852F852F8%52FFA8F8F87D52FD65FFA8FD08FF52A8FFFFA8A8FFFFF8A8F8F8F827F827%527DFD65FF7DFD08FF7DFD07FFF8FF7D27522752A87D52FD65FFA87DA87D%A87DA87DA852A87DA87DA87DA8F8FD0752277DFD76FF7D527D527D527D52%7D7DFD6AFFA8FD06FFA827FD07FF527DFDFCFFFDFCFFFD37FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2009-11-03T14:27:25-08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:MetadataDate>2009-11-03T14:27:25-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2009-11-03T14:27:25-08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FWIee&#xA;/wAx7Hyp9Wh+pS399eBzAoeK1tUEZAZri9uWigiFe3IseynFWJa3+a2k6hJaLp/5h6JocZt4zfWt&#xA;pGmr3S3LAmQRziT0fTWoAb0Dv86Yq7WvOf5W6vLbSXv5j3en+jAkLpb3v6NindK8pW4xxH1G57hG&#xA;A6bbYqnr6f8AlN5wltFTXU1ia2hS1iWz125PqJGTx9VLa6VZnJJqzgse5xVOtY/LfyTrJtTqmlpe&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>8.500000</stDim:w>
            <stDim:h>11.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Oblique</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Oblique</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Italic</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d2e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbol.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:B5C62C2995206811AA2497B09AF50ED3</stRef:instanceID>
            <stRef:documentID>xmp.did:B5C62C2995206811AA2497B09AF50ED3</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:175B6A4E91226811994CEF6A767452B2</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:175B6A4E91226811994CEF6A767452B2</stEvt:instanceID>
                  <stEvt:when>2009-11-02T14:28:04-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B5C62C2995206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T13:59:28-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:518CADD098206811AA2497B09AF50ED3</stEvt:instanceID>
                  <stEvt:when>2009-11-03T14:27:25-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DocumentID>xmp.did:518CADD098206811AA2497B09AF50ED3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:518CADD098206811AA2497B09AF50ED3</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:175B6A4E91226811994CEF6A767452B2</xmpMM:OriginalDocumentID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -143.495 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 143.495 li
189.636 143.495 li
189.636 0 li
cp
clp
[1 0 0 1 0 0 ]ct
true sop
/0 
<<
/Names [
(Cyan)
(Magenta)
(Yellow)
(Black)
]
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/TintMethod /Subtractive
/TintProc null
/MappedCSA null
/TintTransform
/0 {

} bind /Procedure add_res
/0 /Procedure get_res
>>
/CSD add_res
/0 /CSD get_res devncs
0 0 0 1 devn
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 50 /two putdup 51 /three putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHSQ+Helvetica /Helvetica findfont ct_VMDictPut/WGFHSQ+Helvetica*1 [49{/.notdef}rp /one /two /three 204{/.notdef}rp]WGFHSQ+Helvetica nfWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf18.9731 87.2983 mo(123)[12.4094 12.4094 0 ]xshWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf10.6812 79.0933 mo(1)shWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf10.6812 66.6851 mo(2)sh25.7241 84.0464 mo
25.7241 71.6392 li
38.1313 71.6392 li
38.1313 84.0464 li
25.7241 84.0464 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
25.7241 84.0464 mo
25.7241 71.6392 li
38.1313 71.6392 li
38.1313 84.0464 li
25.7241 84.0464 li
cp
.75021 .679683 .670222 .90164 cmyk
@
25.7241 71.6392 mo
25.7241 59.2314 li
38.1313 59.2314 li
38.1313 71.6392 li
25.7241 71.6392 li
cp
0 0 0 0 cmyk
ef
1.5 lw
25.7241 71.6392 mo
25.7241 59.2314 li
38.1313 59.2314 li
38.1313 71.6392 li
25.7241 71.6392 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
13.3159 84.0464 mo
13.3159 71.6392 li
25.7241 71.6392 li
25.7241 84.0464 li
13.3159 84.0464 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
13.3159 84.0464 mo
13.3159 71.6392 li
25.7241 71.6392 li
25.7241 84.0464 li
13.3159 84.0464 li
cp
.75021 .679683 .670222 .90164 cmyk
@
13.3159 71.6392 mo
13.3159 59.2314 li
25.7241 59.2314 li
25.7241 71.6392 li
13.3159 71.6392 li
cp
0 0 0 0 cmyk
ef
1.5 lw
13.3159 71.6392 mo
13.3159 59.2314 li
25.7241 59.2314 li
25.7241 71.6392 li
13.3159 71.6392 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
38.1313 84.0464 mo
38.1313 71.6392 li
50.5396 71.6392 li
50.5396 84.0464 li
38.1313 84.0464 li
cp
false sop
0 0 0 0 cmyk
ef
38.1313 84.0464 mo
38.1313 71.6392 li
50.5396 71.6392 li
50.5396 84.0464 li
38.1313 84.0464 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
27.6973 64.3159 mo
27.6973 63.644 27.6973 63.1958 27.9214 62.7485 cv
28.1455 62.3003 28.5933 61.8525 29.041 61.6289 cv
29.4888 61.4048 29.937 61.4048 30.6812 61.4048 cv
31.4253 61.4048 32.4663 61.4048 33.2109 61.4048 cv
33.9551 61.4048 34.4033 61.4048 34.8447 61.6289 cv
35.2866 61.8525 35.7222 62.3003 35.9404 62.7485 cv
36.1582 63.1958 36.1582 63.644 36.1582 64.3159 cv
36.1582 64.9873 36.1582 65.8833 36.1582 66.5547 cv
36.1582 67.2266 36.1582 67.6748 35.9404 68.1221 cv
35.7222 68.5703 35.2866 69.0181 34.8447 69.2417 cv
34.4033 69.4658 33.9551 69.4658 33.2109 69.4658 cv
32.4663 69.4658 31.4253 69.4658 30.6812 69.4658 cv
29.937 69.4658 29.4888 69.4658 29.041 69.2417 cv
28.5933 69.0181 28.1455 68.5703 27.9214 68.1221 cv
27.6973 67.6748 27.6973 67.2266 27.6973 66.5547 cv
27.6973 65.8833 27.6973 64.9873 27.6973 64.3159 cv
ef
.4156 lw
27.6973 64.3159 mo
27.6973 63.644 27.6973 63.1958 27.9214 62.7485 cv
28.1455 62.3003 28.5933 61.8525 29.041 61.6289 cv
29.4888 61.4048 29.937 61.4048 30.6812 61.4048 cv
31.4253 61.4048 32.4663 61.4048 33.2109 61.4048 cv
33.9551 61.4048 34.4033 61.4048 34.8447 61.6289 cv
35.2866 61.8525 35.7222 62.3003 35.9404 62.7485 cv
36.1582 63.1958 36.1582 63.644 36.1582 64.3159 cv
36.1582 64.9873 36.1582 65.8833 36.1582 66.5547 cv
36.1582 67.2266 36.1582 67.6748 35.9404 68.1221 cv
35.7222 68.5703 35.2866 69.0181 34.8447 69.2417 cv
34.4033 69.4658 33.9551 69.4658 33.2109 69.4658 cv
32.4663 69.4658 31.4253 69.4658 30.6812 69.4658 cv
29.937 69.4658 29.4888 69.4658 29.041 69.2417 cv
28.5933 69.0181 28.1455 68.5703 27.9214 68.1221 cv
27.6973 67.6748 27.6973 67.2266 27.6973 66.5547 cv
27.6973 65.8833 27.6973 64.9873 27.6973 64.3159 cv
@
false sop
0 0 0 0 cmyk
%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 73 /I putdup 80 /P putdup 84 /T putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/I <1C60D8A8C9B854D0F45A7DCEFBC402FF7699F7922C5BBAB4> |-/P <1C60D8A8C9B64EDFFB17421827B34F490AD3F7DCEB896982B80C975C3B24ABC9E3BA94702EA7A9A2D1C57D5ECFF1E5B2ADB8BECBF2CCCABA4765441A2C884484366D66E34409E5D381DF4C299795B345D7840F61F2BAAEA7914CCFBF78A13A5B6BB49CDF> |-/T <1C60D8A8C9B7D8BE7DCB37357CA4E5AE05A345039A6B2A4DEEFF447C82AF49FFED9827> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHSR+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/WGFHSR+Helvetica-Bold*1 [73{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp /T 171{/.notdef}rp]WGFHSR+Helvetica-Bold nfWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf29.9868 66.9141 mo(PIT)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf108.584 39.0454 mo(123)[12.4094 12.4094 0 ]xshWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf100.292 30.8403 mo(1)shWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf100.292 18.4326 mo(2)sh115.335 35.7944 mo
115.335 23.3867 li
127.743 23.3867 li
127.743 35.7944 li
115.335 35.7944 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
115.335 35.7944 mo
115.335 23.3867 li
127.743 23.3867 li
127.743 35.7944 li
115.335 35.7944 li
cp
.75021 .679683 .670222 .90164 cmyk
@
115.335 23.3862 mo
115.335 10.9785 li
127.743 10.9785 li
127.743 23.3862 li
115.335 23.3862 li
cp
0 0 0 0 cmyk
ef
1.5 lw
115.335 23.3862 mo
115.335 10.9785 li
127.743 10.9785 li
127.743 23.3862 li
115.335 23.3862 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
102.928 35.7944 mo
102.928 23.3867 li
115.335 23.3867 li
115.335 35.7944 li
102.928 35.7944 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
102.928 35.7944 mo
102.928 23.3867 li
115.335 23.3867 li
115.335 35.7944 li
102.928 35.7944 li
cp
.75021 .679683 .670222 .90164 cmyk
@
102.928 23.3862 mo
102.928 10.9785 li
115.335 10.9785 li
115.335 23.3862 li
102.928 23.3862 li
cp
0 0 0 0 cmyk
ef
1.5 lw
102.928 23.3862 mo
102.928 10.9785 li
115.335 10.9785 li
115.335 23.3862 li
102.928 23.3862 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
127.743 35.7944 mo
127.743 23.3867 li
140.151 23.3867 li
140.151 35.7944 li
127.743 35.7944 li
cp
false sop
0 0 0 0 cmyk
ef
127.743 35.7944 mo
127.743 23.3867 li
140.151 23.3867 li
140.151 35.7944 li
127.743 35.7944 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
104.9 16.063 mo
104.9 15.3916 104.9 14.9438 105.125 14.4956 cv
105.349 14.0479 105.797 13.6001 106.244 13.376 cv
106.692 13.1523 107.141 13.1523 107.885 13.1523 cv
108.629 13.1523 109.67 13.1523 110.414 13.1523 cv
111.159 13.1523 111.606 13.1523 112.049 13.376 cv
112.49 13.6001 112.926 14.0479 113.144 14.4956 cv
113.361 14.9438 113.361 15.3916 113.361 16.063 cv
113.361 16.7349 113.361 17.6309 113.361 18.3027 cv
113.361 18.9741 113.361 19.4219 113.144 19.8696 cv
112.926 20.3179 112.49 20.7656 112.049 20.9897 cv
111.606 21.2134 111.159 21.2134 110.414 21.2134 cv
109.67 21.2134 108.629 21.2134 107.885 21.2134 cv
107.141 21.2134 106.692 21.2134 106.244 20.9897 cv
105.797 20.7656 105.349 20.3179 105.125 19.8696 cv
104.9 19.4219 104.9 18.9741 104.9 18.3027 cv
104.9 17.6309 104.9 16.7349 104.9 16.063 cv
ef
.4156 lw
104.9 16.063 mo
104.9 15.3916 104.9 14.9438 105.125 14.4956 cv
105.349 14.0479 105.797 13.6001 106.244 13.376 cv
106.692 13.1523 107.141 13.1523 107.885 13.1523 cv
108.629 13.1523 109.67 13.1523 110.414 13.1523 cv
111.159 13.1523 111.606 13.1523 112.049 13.376 cv
112.49 13.6001 112.926 14.0479 113.144 14.4956 cv
113.361 14.9438 113.361 15.3916 113.361 16.063 cv
113.361 16.7349 113.361 17.6309 113.361 18.3027 cv
113.361 18.9741 113.361 19.4219 113.144 19.8696 cv
112.926 20.3179 112.49 20.7656 112.049 20.9897 cv
111.606 21.2134 111.159 21.2134 110.414 21.2134 cv
109.67 21.2134 108.629 21.2134 107.885 21.2134 cv
107.141 21.2134 106.692 21.2134 106.244 20.9897 cv
105.797 20.7656 105.349 20.3179 105.125 19.8696 cv
104.9 19.4219 104.9 18.9741 104.9 18.3027 cv
104.9 17.6309 104.9 16.7349 104.9 16.063 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf107.19 18.6616 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf109.637 18.6616 mo(T)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf91.3516 142.443 mo(123)[12.4094 12.4094 0 ]xshWGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf83.0596 134.238 mo(1)sh83.0596 121.831 mo(2)sh98.1025 139.192 mo
98.1025 126.785 li
110.51 126.785 li
110.51 139.192 li
98.1025 139.192 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
98.1025 139.192 mo
98.1025 126.785 li
110.51 126.785 li
110.51 139.192 li
98.1025 139.192 li
cp
.75021 .679683 .670222 .90164 cmyk
@
98.1025 126.784 mo
98.1025 114.376 li
110.51 114.376 li
110.51 126.784 li
98.1025 126.784 li
cp
0 0 0 0 cmyk
ef
1.5 lw
98.1025 126.784 mo
98.1025 114.376 li
110.51 114.376 li
110.51 126.784 li
98.1025 126.784 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
85.6948 139.192 mo
85.6948 126.785 li
98.1025 126.785 li
98.1025 139.192 li
85.6948 139.192 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
85.6948 139.192 mo
85.6948 126.785 li
98.1025 126.785 li
98.1025 139.192 li
85.6948 139.192 li
cp
.75021 .679683 .670222 .90164 cmyk
@
85.6948 126.784 mo
85.6948 114.376 li
98.1025 114.376 li
98.1025 126.784 li
85.6948 126.784 li
cp
0 0 0 0 cmyk
ef
1.5 lw
85.6948 126.784 mo
85.6948 114.376 li
98.1025 114.376 li
98.1025 126.784 li
85.6948 126.784 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
110.51 139.192 mo
110.51 126.785 li
122.918 126.785 li
122.918 139.192 li
110.51 139.192 li
cp
false sop
0 0 0 0 cmyk
ef
110.51 139.192 mo
110.51 126.785 li
122.918 126.785 li
122.918 139.192 li
110.51 139.192 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
87.668 119.461 mo
87.668 118.79 87.668 118.341 87.8921 117.894 cv
88.1162 117.446 88.5635 116.998 89.0117 116.774 cv
89.4595 116.55 89.9072 116.55 90.6514 116.55 cv
91.396 116.55 92.437 116.55 93.1812 116.55 cv
93.9258 116.55 94.3735 116.55 94.8154 116.774 cv
95.2573 116.998 95.6929 117.446 95.9111 117.894 cv
96.1284 118.341 96.1284 118.79 96.1284 119.461 cv
96.1284 120.133 96.1284 121.028 96.1284 121.7 cv
96.1284 122.372 96.1284 122.82 95.9111 123.268 cv
95.6929 123.715 95.2573 124.164 94.8154 124.387 cv
94.3735 124.612 93.9258 124.612 93.1812 124.612 cv
92.437 124.612 91.396 124.612 90.6514 124.612 cv
89.9072 124.612 89.4595 124.612 89.0117 124.387 cv
88.5635 124.164 88.1162 123.715 87.8921 123.268 cv
87.668 122.82 87.668 122.372 87.668 121.7 cv
87.668 121.028 87.668 120.133 87.668 119.461 cv
ef
.4156 lw
87.668 119.461 mo
87.668 118.79 87.668 118.341 87.8921 117.894 cv
88.1162 117.446 88.5635 116.998 89.0117 116.774 cv
89.4595 116.55 89.9072 116.55 90.6514 116.55 cv
91.396 116.55 92.437 116.55 93.1812 116.55 cv
93.9258 116.55 94.3735 116.55 94.8154 116.774 cv
95.2573 116.998 95.6929 117.446 95.9111 117.894 cv
96.1284 118.341 96.1284 118.79 96.1284 119.461 cv
96.1284 120.133 96.1284 121.028 96.1284 121.7 cv
96.1284 122.372 96.1284 122.82 95.9111 123.268 cv
95.6929 123.715 95.2573 124.164 94.8154 124.387 cv
94.3735 124.612 93.9258 124.612 93.1812 124.612 cv
92.437 124.612 91.396 124.612 90.6514 124.612 cv
89.9072 124.612 89.4595 124.612 89.0117 124.387 cv
88.5635 124.164 88.1162 123.715 87.8921 123.268 cv
87.668 122.82 87.668 122.372 87.668 121.7 cv
87.668 121.028 87.668 120.133 87.668 119.461 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf89.957 122.06 mo(PIT)sh100.075 119.461 mo
100.075 118.79 100.075 118.341 100.299 117.894 cv
100.523 117.446 100.972 116.998 101.419 116.774 cv
101.867 116.55 102.314 116.55 103.06 116.55 cv
103.804 116.55 104.845 116.55 105.589 116.55 cv
106.333 116.55 106.781 116.55 107.223 116.774 cv
107.665 116.998 108.101 117.446 108.318 117.894 cv
108.536 118.341 108.536 118.79 108.536 119.461 cv
108.536 120.133 108.536 121.028 108.536 121.7 cv
108.536 122.372 108.536 122.82 108.318 123.268 cv
108.101 123.715 107.665 124.164 107.223 124.387 cv
106.781 124.612 106.333 124.612 105.589 124.612 cv
104.845 124.612 103.804 124.612 103.06 124.612 cv
102.314 124.612 101.867 124.612 101.419 124.387 cv
100.972 124.164 100.523 123.715 100.299 123.268 cv
100.075 122.82 100.075 122.372 100.075 121.7 cv
100.075 121.028 100.075 120.133 100.075 119.461 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
100.075 119.461 mo
100.075 118.79 100.075 118.341 100.299 117.894 cv
100.523 117.446 100.972 116.998 101.419 116.774 cv
101.867 116.55 102.314 116.55 103.06 116.55 cv
103.804 116.55 104.845 116.55 105.589 116.55 cv
106.333 116.55 106.781 116.55 107.223 116.774 cv
107.665 116.998 108.101 117.446 108.318 117.894 cv
108.536 118.341 108.536 118.79 108.536 119.461 cv
108.536 120.133 108.536 121.028 108.536 121.7 cv
108.536 122.372 108.536 122.82 108.318 123.268 cv
108.101 123.715 107.665 124.164 107.223 124.387 cv
106.781 124.612 106.333 124.612 105.589 124.612 cv
104.845 124.612 103.804 124.612 103.06 124.612 cv
102.314 124.612 101.867 124.612 101.419 124.387 cv
100.972 124.164 100.523 123.715 100.299 123.268 cv
100.075 122.82 100.075 122.372 100.075 121.7 cv
100.075 121.028 100.075 120.133 100.075 119.461 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf102.365 122.06 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf104.811 122.06 mo(T)sh112.483 131.869 mo
112.483 131.198 112.483 130.75 112.708 130.301 cv
112.931 129.854 113.379 129.406 113.827 129.182 cv
114.274 128.958 114.723 128.958 115.467 128.958 cv
116.212 128.958 117.253 128.958 117.997 128.958 cv
118.741 128.958 119.188 128.958 119.631 129.182 cv
120.072 129.406 120.509 129.854 120.726 130.301 cv
120.944 130.75 120.944 131.198 120.944 131.869 cv
120.944 132.541 120.944 133.436 120.944 134.109 cv
120.944 134.781 120.944 135.228 120.726 135.675 cv
120.509 136.124 120.072 136.572 119.631 136.795 cv
119.188 137.019 118.741 137.019 117.997 137.019 cv
117.253 137.019 116.212 137.019 115.467 137.019 cv
114.723 137.019 114.274 137.019 113.827 136.795 cv
113.379 136.572 112.931 136.124 112.708 135.675 cv
112.483 135.228 112.483 134.781 112.483 134.109 cv
112.483 133.436 112.483 132.541 112.483 131.869 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
112.483 131.869 mo
112.483 131.198 112.483 130.75 112.708 130.301 cv
112.931 129.854 113.379 129.406 113.827 129.182 cv
114.274 128.958 114.723 128.958 115.467 128.958 cv
116.212 128.958 117.253 128.958 117.997 128.958 cv
118.741 128.958 119.188 128.958 119.631 129.182 cv
120.072 129.406 120.509 129.854 120.726 130.301 cv
120.944 130.75 120.944 131.198 120.944 131.869 cv
120.944 132.541 120.944 133.436 120.944 134.109 cv
120.944 134.781 120.944 135.228 120.726 135.675 cv
120.509 136.124 120.072 136.572 119.631 136.795 cv
119.188 137.019 118.741 137.019 117.997 137.019 cv
117.253 137.019 116.212 137.019 115.467 137.019 cv
114.723 137.019 114.274 137.019 113.827 136.795 cv
113.379 136.572 112.931 136.124 112.708 135.675 cv
112.483 135.228 112.483 134.781 112.483 134.109 cv
112.483 133.436 112.483 132.541 112.483 131.869 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf114.772 134.467 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf117.219 134.467 mo(T)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf29.313 128.657 mo(12)[12.4072 0 ]xsh54.1279 128.657 mo(3)sh21.021 120.452 mo(1)sh21.021 108.043 mo(2)sh36.0635 125.407 mo
36.0635 112.999 li
48.4712 112.999 li
48.4712 125.407 li
36.0635 125.407 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
36.0635 125.407 mo
36.0635 112.999 li
48.4712 112.999 li
48.4712 125.407 li
36.0635 125.407 li
cp
.75021 .679683 .670222 .90164 cmyk
@
36.0635 112.999 mo
36.0635 100.59 li
48.4712 100.59 li
48.4712 112.999 li
36.0635 112.999 li
cp
0 0 0 0 cmyk
ef
1.5 lw
36.0635 112.999 mo
36.0635 100.59 li
48.4712 100.59 li
48.4712 112.999 li
36.0635 112.999 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
23.6558 125.407 mo
23.6558 112.999 li
36.0635 112.999 li
36.0635 125.407 li
23.6558 125.407 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
23.6558 125.407 mo
23.6558 112.999 li
36.0635 112.999 li
36.0635 125.407 li
23.6558 125.407 li
cp
.75021 .679683 .670222 .90164 cmyk
@
23.6558 112.999 mo
23.6558 100.59 li
36.0635 100.59 li
36.0635 112.999 li
23.6558 112.999 li
cp
0 0 0 0 cmyk
ef
1.5 lw
23.6558 112.999 mo
23.6558 100.59 li
36.0635 100.59 li
36.0635 112.999 li
23.6558 112.999 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
48.4717 125.407 mo
48.4717 112.999 li
60.8794 112.999 li
60.8794 125.407 li
48.4717 125.407 li
cp
false sop
0 0 0 0 cmyk
ef
48.4717 125.407 mo
48.4717 112.999 li
60.8794 112.999 li
60.8794 125.407 li
48.4717 125.407 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
38.0366 105.675 mo
38.0366 105.003 38.0366 104.555 38.2607 104.107 cv
38.4849 103.66 38.9326 103.211 39.3804 102.988 cv
39.8281 102.764 40.2764 102.764 41.0205 102.764 cv
41.7646 102.764 42.8062 102.764 43.5503 102.764 cv
44.2944 102.764 44.7427 102.764 45.1846 102.988 cv
45.626 103.211 46.062 103.66 46.2798 104.107 cv
46.4976 104.555 46.4976 105.003 46.4976 105.675 cv
46.4976 106.347 46.4976 107.242 46.4976 107.914 cv
46.4976 108.585 46.4976 109.034 46.2798 109.482 cv
46.062 109.929 45.626 110.377 45.1846 110.601 cv
44.7427 110.825 44.2944 110.825 43.5503 110.825 cv
42.8062 110.825 41.7646 110.825 41.0205 110.825 cv
40.2764 110.825 39.8281 110.825 39.3804 110.601 cv
38.9326 110.377 38.4849 109.929 38.2607 109.482 cv
38.0366 109.034 38.0366 108.585 38.0366 107.914 cv
38.0366 107.242 38.0366 106.347 38.0366 105.675 cv
ef
.4156 lw
38.0366 105.675 mo
38.0366 105.003 38.0366 104.555 38.2607 104.107 cv
38.4849 103.66 38.9326 103.211 39.3804 102.988 cv
39.8281 102.764 40.2764 102.764 41.0205 102.764 cv
41.7646 102.764 42.8062 102.764 43.5503 102.764 cv
44.2944 102.764 44.7427 102.764 45.1846 102.988 cv
45.626 103.211 46.062 103.66 46.2798 104.107 cv
46.4976 104.555 46.4976 105.003 46.4976 105.675 cv
46.4976 106.347 46.4976 107.242 46.4976 107.914 cv
46.4976 108.585 46.4976 109.034 46.2798 109.482 cv
46.062 109.929 45.626 110.377 45.1846 110.601 cv
44.7427 110.825 44.2944 110.825 43.5503 110.825 cv
42.8062 110.825 41.7646 110.825 41.0205 110.825 cv
40.2764 110.825 39.8281 110.825 39.3804 110.601 cv
38.9326 110.377 38.4849 109.929 38.2607 109.482 cv
38.0366 109.034 38.0366 108.585 38.0366 107.914 cv
38.0366 107.242 38.0366 106.347 38.0366 105.675 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf40.3262 108.274 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf42.772 108.274 mo(T)sh50.4448 118.083 mo
50.4448 117.411 50.4448 116.962 50.6689 116.515 cv
50.8926 116.068 51.3408 115.619 51.7886 115.396 cv
52.2363 115.171 52.6841 115.171 53.4287 115.171 cv
54.1729 115.171 55.2139 115.171 55.958 115.171 cv
56.7026 115.171 57.1504 115.171 57.5923 115.396 cv
58.0342 115.619 58.4697 116.068 58.6875 116.515 cv
58.9058 116.962 58.9058 117.411 58.9058 118.083 cv
58.9058 118.754 58.9058 119.65 58.9058 120.322 cv
58.9058 120.993 58.9058 121.442 58.6875 121.889 cv
58.4697 122.336 58.0342 122.785 57.5923 123.008 cv
57.1504 123.233 56.7026 123.233 55.958 123.233 cv
55.2139 123.233 54.1729 123.233 53.4287 123.233 cv
52.6841 123.233 52.2363 123.233 51.7886 123.008 cv
51.3408 122.785 50.8926 122.336 50.6689 121.889 cv
50.4448 121.442 50.4448 120.993 50.4448 120.322 cv
50.4448 119.65 50.4448 118.754 50.4448 118.083 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
50.4448 118.083 mo
50.4448 117.411 50.4448 116.962 50.6689 116.515 cv
50.8926 116.068 51.3408 115.619 51.7886 115.396 cv
52.2363 115.171 52.6841 115.171 53.4287 115.171 cv
54.1729 115.171 55.2139 115.171 55.958 115.171 cv
56.7026 115.171 57.1504 115.171 57.5923 115.396 cv
58.0342 115.619 58.4697 116.068 58.6875 116.515 cv
58.9058 116.962 58.9058 117.411 58.9058 118.083 cv
58.9058 118.754 58.9058 119.65 58.9058 120.322 cv
58.9058 120.993 58.9058 121.442 58.6875 121.889 cv
58.4697 122.336 58.0342 122.785 57.5923 123.008 cv
57.1504 123.233 56.7026 123.233 55.958 123.233 cv
55.2139 123.233 54.1729 123.233 53.4287 123.233 cv
52.6841 123.233 52.2363 123.233 51.7886 123.008 cv
51.3408 122.785 50.8926 122.336 50.6689 121.889 cv
50.4448 121.442 50.4448 120.993 50.4448 120.322 cv
50.4448 119.65 50.4448 118.754 50.4448 118.083 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf52.7344 120.681 mo(PIT)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf46.5454 42.4922 mo(123)[12.4094 12.4094 0 ]xsh38.2539 34.2866 mo(1)sh38.2539 21.8789 mo(2)sh53.2964 39.2412 mo
53.2964 26.8335 li
65.7046 26.8335 li
65.7046 39.2412 li
53.2964 39.2412 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
53.2964 39.2412 mo
53.2964 26.8335 li
65.7046 26.8335 li
65.7046 39.2412 li
53.2964 39.2412 li
cp
.75021 .679683 .670222 .90164 cmyk
@
53.2964 26.833 mo
53.2964 14.4253 li
65.7046 14.4253 li
65.7046 26.833 li
53.2964 26.833 li
cp
0 0 0 0 cmyk
ef
1.5 lw
53.2964 26.833 mo
53.2964 14.4253 li
65.7046 14.4253 li
65.7046 26.833 li
53.2964 26.833 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
40.8892 39.2412 mo
40.8892 26.8335 li
53.2964 26.8335 li
53.2964 39.2412 li
40.8892 39.2412 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
40.8892 39.2412 mo
40.8892 26.8335 li
53.2964 26.8335 li
53.2964 39.2412 li
40.8892 39.2412 li
cp
.75021 .679683 .670222 .90164 cmyk
@
40.8892 26.833 mo
40.8892 14.4253 li
53.2964 14.4253 li
53.2964 26.833 li
40.8892 26.833 li
cp
0 0 0 0 cmyk
ef
1.5 lw
40.8892 26.833 mo
40.8892 14.4253 li
53.2964 14.4253 li
53.2964 26.833 li
40.8892 26.833 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
65.7046 39.2412 mo
65.7046 26.8335 li
78.1123 26.8335 li
78.1123 39.2412 li
65.7046 39.2412 li
cp
false sop
0 0 0 0 cmyk
ef
65.7046 39.2412 mo
65.7046 26.8335 li
78.1123 26.8335 li
78.1123 39.2412 li
65.7046 39.2412 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
67.6777 31.9175 mo
67.6777 31.2456 67.6777 30.7979 67.9019 30.3501 cv
68.1255 29.9023 68.5737 29.4546 69.021 29.2305 cv
69.4692 29.0063 69.917 29.0063 70.6616 29.0063 cv
71.4058 29.0063 72.4468 29.0063 73.1914 29.0063 cv
73.9355 29.0063 74.3833 29.0063 74.8252 29.2305 cv
75.2671 29.4546 75.7026 29.9023 75.9204 30.3501 cv
76.1387 30.7979 76.1387 31.2456 76.1387 31.9175 cv
76.1387 32.5894 76.1387 33.4854 76.1387 34.1567 cv
76.1387 34.8286 76.1387 35.2764 75.9204 35.7241 cv
75.7026 36.1724 75.2671 36.6201 74.8252 36.8442 cv
74.3833 37.0674 73.9355 37.0674 73.1914 37.0674 cv
72.4468 37.0674 71.4058 37.0674 70.6616 37.0674 cv
69.917 37.0674 69.4692 37.0674 69.021 36.8442 cv
68.5737 36.6201 68.1255 36.1724 67.9019 35.7241 cv
67.6777 35.2764 67.6777 34.8286 67.6777 34.1567 cv
67.6777 33.4854 67.6777 32.5894 67.6777 31.9175 cv
ef
.4156 lw
67.6777 31.9175 mo
67.6777 31.2456 67.6777 30.7979 67.9019 30.3501 cv
68.1255 29.9023 68.5737 29.4546 69.021 29.2305 cv
69.4692 29.0063 69.917 29.0063 70.6616 29.0063 cv
71.4058 29.0063 72.4468 29.0063 73.1914 29.0063 cv
73.9355 29.0063 74.3833 29.0063 74.8252 29.2305 cv
75.2671 29.4546 75.7026 29.9023 75.9204 30.3501 cv
76.1387 30.7979 76.1387 31.2456 76.1387 31.9175 cv
76.1387 32.5894 76.1387 33.4854 76.1387 34.1567 cv
76.1387 34.8286 76.1387 35.2764 75.9204 35.7241 cv
75.7026 36.1724 75.2671 36.6201 74.8252 36.8442 cv
74.3833 37.0674 73.9355 37.0674 73.1914 37.0674 cv
72.4468 37.0674 71.4058 37.0674 70.6616 37.0674 cv
69.917 37.0674 69.4692 37.0674 69.021 36.8442 cv
68.5737 36.6201 68.1255 36.1724 67.9019 35.7241 cv
67.6777 35.2764 67.6777 34.8286 67.6777 34.1567 cv
67.6777 33.4854 67.6777 32.5894 67.6777 31.9175 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf69.9673 34.5161 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf72.4136 34.5161 mo(T)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf139.604 83.8511 mo(12)[12.4094 0 ]xsh164.419 83.8511 mo(3)sh131.313 75.646 mo(1)sh131.313 63.2383 mo(2)sh146.354 80.6001 mo
146.354 68.1924 li
158.763 68.1924 li
158.763 80.6001 li
146.354 80.6001 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
146.354 80.6001 mo
146.354 68.1924 li
158.763 68.1924 li
158.763 80.6001 li
146.354 80.6001 li
cp
.75021 .679683 .670222 .90164 cmyk
@
146.354 68.1924 mo
146.354 55.7847 li
158.763 55.7847 li
158.763 68.1924 li
146.354 68.1924 li
cp
0 0 0 0 cmyk
ef
1.5 lw
146.354 68.1924 mo
146.354 55.7847 li
158.763 55.7847 li
158.763 68.1924 li
146.354 68.1924 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
133.947 80.6001 mo
133.947 68.1924 li
146.354 68.1924 li
146.354 80.6001 li
133.947 80.6001 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
133.947 80.6001 mo
133.947 68.1924 li
146.354 68.1924 li
146.354 80.6001 li
133.947 80.6001 li
cp
.75021 .679683 .670222 .90164 cmyk
@
133.947 68.1924 mo
133.947 55.7847 li
146.354 55.7847 li
146.354 68.1924 li
133.947 68.1924 li
cp
0 0 0 0 cmyk
ef
1.5 lw
133.947 68.1924 mo
133.947 55.7847 li
146.354 55.7847 li
146.354 68.1924 li
133.947 68.1924 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
158.763 80.6001 mo
158.763 68.1924 li
171.171 68.1924 li
171.171 80.6001 li
158.763 80.6001 li
cp
false sop
0 0 0 0 cmyk
ef
158.763 80.6001 mo
158.763 68.1924 li
171.171 68.1924 li
171.171 80.6001 li
158.763 80.6001 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
135.921 60.8691 mo
135.921 60.1973 135.921 59.7495 136.145 59.3018 cv
136.368 58.8535 136.815 58.4058 137.264 58.1821 cv
137.712 57.958 138.16 57.958 138.903 57.958 cv
139.648 57.958 140.689 57.958 141.434 57.958 cv
142.178 57.958 142.626 57.958 143.067 58.1821 cv
143.51 58.4058 143.945 58.8535 144.163 59.3018 cv
144.381 59.7495 144.381 60.1973 144.381 60.8691 cv
144.381 61.541 144.381 62.4365 144.381 63.1084 cv
144.381 63.7798 144.381 64.228 144.163 64.6758 cv
143.945 65.1235 143.51 65.5713 143.067 65.7954 cv
142.626 66.0195 142.178 66.0195 141.434 66.0195 cv
140.689 66.0195 139.648 66.0195 138.903 66.0195 cv
138.16 66.0195 137.712 66.0195 137.264 65.7954 cv
136.815 65.5713 136.368 65.1235 136.145 64.6758 cv
135.921 64.228 135.921 63.7798 135.921 63.1084 cv
135.921 62.4365 135.921 61.541 135.921 60.8691 cv
ef
.4156 lw
135.921 60.8691 mo
135.921 60.1973 135.921 59.7495 136.145 59.3018 cv
136.368 58.8535 136.815 58.4058 137.264 58.1821 cv
137.712 57.958 138.16 57.958 138.903 57.958 cv
139.648 57.958 140.689 57.958 141.434 57.958 cv
142.178 57.958 142.626 57.958 143.067 58.1821 cv
143.51 58.4058 143.945 58.8535 144.163 59.3018 cv
144.381 59.7495 144.381 60.1973 144.381 60.8691 cv
144.381 61.541 144.381 62.4365 144.381 63.1084 cv
144.381 63.7798 144.381 64.228 144.163 64.6758 cv
143.945 65.1235 143.51 65.5713 143.067 65.7954 cv
142.626 66.0195 142.178 66.0195 141.434 66.0195 cv
140.689 66.0195 139.648 66.0195 138.903 66.0195 cv
138.16 66.0195 137.712 66.0195 137.264 65.7954 cv
136.815 65.5713 136.368 65.1235 136.145 64.6758 cv
135.921 64.228 135.921 63.7798 135.921 63.1084 cv
135.921 62.4365 135.921 61.541 135.921 60.8691 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf138.21 63.4673 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf140.656 63.4673 mo(T)sh160.736 73.2769 mo
160.736 72.605 160.736 72.1577 160.96 71.7095 cv
161.184 71.2622 161.632 70.814 162.079 70.5898 cv
162.527 70.3662 162.975 70.3662 163.72 70.3662 cv
164.464 70.3662 165.505 70.3662 166.25 70.3662 cv
166.994 70.3662 167.441 70.3662 167.883 70.5898 cv
168.325 70.814 168.761 71.2622 168.979 71.7095 cv
169.197 72.1577 169.197 72.605 169.197 73.2769 cv
169.197 73.9487 169.197 74.8452 169.197 75.5171 cv
169.197 76.189 169.197 76.6362 168.979 77.0835 cv
168.761 77.5317 168.325 77.98 167.883 78.2036 cv
167.441 78.4272 166.994 78.4272 166.25 78.4272 cv
165.505 78.4272 164.464 78.4272 163.72 78.4272 cv
162.975 78.4272 162.527 78.4272 162.079 78.2036 cv
161.632 77.98 161.184 77.5317 160.96 77.0835 cv
160.736 76.6362 160.736 76.189 160.736 75.5171 cv
160.736 74.8452 160.736 73.9487 160.736 73.2769 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
160.736 73.2769 mo
160.736 72.605 160.736 72.1577 160.96 71.7095 cv
161.184 71.2622 161.632 70.814 162.079 70.5898 cv
162.527 70.3662 162.975 70.3662 163.72 70.3662 cv
164.464 70.3662 165.505 70.3662 166.25 70.3662 cv
166.994 70.3662 167.441 70.3662 167.883 70.5898 cv
168.325 70.814 168.761 71.2622 168.979 71.7095 cv
169.197 72.1577 169.197 72.605 169.197 73.2769 cv
169.197 73.9487 169.197 74.8452 169.197 75.5171 cv
169.197 76.189 169.197 76.6362 168.979 77.0835 cv
168.761 77.5317 168.325 77.98 167.883 78.2036 cv
167.441 78.4272 166.994 78.4272 166.25 78.4272 cv
165.505 78.4272 164.464 78.4272 163.72 78.4272 cv
162.975 78.4272 162.527 78.4272 162.079 78.2036 cv
161.632 77.98 161.184 77.5317 160.96 77.0835 cv
160.736 76.6362 160.736 76.189 160.736 75.5171 cv
160.736 74.8452 160.736 73.9487 160.736 73.2769 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf163.025 75.8755 mo(PIT)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf146.497 125.21 mo(12)[12.4072 0 ]xsh171.313 125.21 mo(3)sh138.205 117.005 mo(1)sh138.205 104.597 mo(2)sh153.248 121.959 mo
153.248 109.552 li
165.655 109.552 li
165.655 121.959 li
153.248 121.959 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
153.248 121.959 mo
153.248 109.552 li
165.655 109.552 li
165.655 121.959 li
153.248 121.959 li
cp
.75021 .679683 .670222 .90164 cmyk
@
153.248 109.552 mo
153.248 97.1431 li
165.655 97.1431 li
165.655 109.552 li
153.248 109.552 li
cp
0 0 0 0 cmyk
ef
1.5 lw
153.248 109.552 mo
153.248 97.1431 li
165.655 97.1431 li
165.655 109.552 li
153.248 109.552 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
140.84 121.959 mo
140.84 109.552 li
153.248 109.552 li
153.248 121.959 li
140.84 121.959 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
140.84 121.959 mo
140.84 109.552 li
153.248 109.552 li
153.248 121.959 li
140.84 121.959 li
cp
.75021 .679683 .670222 .90164 cmyk
@
140.84 109.552 mo
140.84 97.1431 li
153.248 97.1431 li
153.248 109.552 li
140.84 109.552 li
cp
0 0 0 0 cmyk
ef
1.5 lw
140.84 109.552 mo
140.84 97.1431 li
153.248 97.1431 li
153.248 109.552 li
140.84 109.552 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
165.656 121.959 mo
165.656 109.552 li
178.063 109.552 li
178.063 121.959 li
165.656 121.959 li
cp
false sop
0 0 0 0 cmyk
ef
165.656 121.959 mo
165.656 109.552 li
178.063 109.552 li
178.063 121.959 li
165.656 121.959 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
142.813 102.229 mo
142.813 101.557 142.813 101.108 143.037 100.661 cv
143.262 100.213 143.709 99.7651 144.157 99.5415 cv
144.605 99.3169 145.053 99.3169 145.798 99.3169 cv
146.542 99.3169 147.583 99.3169 148.327 99.3169 cv
149.071 99.3169 149.519 99.3169 149.961 99.5415 cv
150.402 99.7651 150.839 100.213 151.057 100.661 cv
151.274 101.108 151.274 101.557 151.274 102.229 cv
151.274 102.9 151.274 103.795 151.274 104.467 cv
151.274 105.139 151.274 105.587 151.057 106.035 cv
150.839 106.483 150.402 106.93 149.961 107.154 cv
149.519 107.378 149.071 107.378 148.327 107.378 cv
147.583 107.378 146.542 107.378 145.798 107.378 cv
145.053 107.378 144.605 107.378 144.157 107.154 cv
143.709 106.93 143.262 106.483 143.037 106.035 cv
142.813 105.587 142.813 105.139 142.813 104.467 cv
142.813 103.795 142.813 102.9 142.813 102.229 cv
ef
.4156 lw
142.813 102.229 mo
142.813 101.557 142.813 101.108 143.037 100.661 cv
143.262 100.213 143.709 99.7651 144.157 99.5415 cv
144.605 99.3169 145.053 99.3169 145.798 99.3169 cv
146.542 99.3169 147.583 99.3169 148.327 99.3169 cv
149.071 99.3169 149.519 99.3169 149.961 99.5415 cv
150.402 99.7651 150.839 100.213 151.057 100.661 cv
151.274 101.108 151.274 101.557 151.274 102.229 cv
151.274 102.9 151.274 103.795 151.274 104.467 cv
151.274 105.139 151.274 105.587 151.057 106.035 cv
150.839 106.483 150.402 106.93 149.961 107.154 cv
149.519 107.378 149.071 107.378 148.327 107.378 cv
147.583 107.378 146.542 107.378 145.798 107.378 cv
145.053 107.378 144.605 107.378 144.157 107.154 cv
143.709 106.93 143.262 106.483 143.037 106.035 cv
142.813 105.587 142.813 105.139 142.813 104.467 cv
142.813 103.795 142.813 102.9 142.813 102.229 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf145.103 104.827 mo(PI)[1.7261 0 ]xshWGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf147.549 104.827 mo(T)sh155.222 102.229 mo
155.222 101.557 155.222 101.108 155.445 100.661 cv
155.669 100.213 156.117 99.7651 156.564 99.5415 cv
157.013 99.3169 157.461 99.3169 158.205 99.3169 cv
158.949 99.3169 159.99 99.3169 160.734 99.3169 cv
161.479 99.3169 161.927 99.3169 162.369 99.5415 cv
162.811 99.7651 163.246 100.213 163.464 100.661 cv
163.683 101.108 163.683 101.557 163.683 102.229 cv
163.683 102.9 163.683 103.795 163.683 104.467 cv
163.683 105.139 163.683 105.587 163.464 106.035 cv
163.246 106.483 162.811 106.93 162.369 107.154 cv
161.927 107.378 161.479 107.378 160.734 107.378 cv
159.99 107.378 158.949 107.378 158.205 107.378 cv
157.461 107.378 157.013 107.378 156.564 107.154 cv
156.117 106.93 155.669 106.483 155.445 106.035 cv
155.222 105.587 155.222 105.139 155.222 104.467 cv
155.222 103.795 155.222 102.9 155.222 102.229 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
ef
155.222 102.229 mo
155.222 101.557 155.222 101.108 155.445 100.661 cv
155.669 100.213 156.117 99.7651 156.564 99.5415 cv
157.013 99.3169 157.461 99.3169 158.205 99.3169 cv
158.949 99.3169 159.99 99.3169 160.734 99.3169 cv
161.479 99.3169 161.927 99.3169 162.369 99.5415 cv
162.811 99.7651 163.246 100.213 163.464 100.661 cv
163.683 101.108 163.683 101.557 163.683 102.229 cv
163.683 102.9 163.683 103.795 163.683 104.467 cv
163.683 105.139 163.683 105.587 163.464 106.035 cv
163.246 106.483 162.811 106.93 162.369 107.154 cv
161.927 107.378 161.479 107.378 160.734 107.378 cv
159.99 107.378 158.949 107.378 158.205 107.378 cv
157.461 107.378 157.013 107.378 156.564 107.154 cv
156.117 106.93 155.669 106.483 155.445 106.035 cv
155.222 105.587 155.222 105.139 155.222 104.467 cv
155.222 103.795 155.222 102.9 155.222 102.229 cv
@
false sop
0 0 0 0 cmyk
WGFHSR+Helvetica-Bold*1 [2.5879 0 0 -2.5879 0 0 ]msf157.511 104.827 mo(PIT)shtrue sop
/0 /CSD get_res devncs
0 0 0 1 devn
WGFHSQ+Helvetica*1 [2.187 0 0 -2.187 0 0 ]msf77.5649 90.7446 mo(123)[12.4094 12.4094 0 ]xsh69.2729 82.5396 mo(1)sh69.2729 70.1313 mo(2)sh84.3159 87.4937 mo
84.3159 75.0864 li
96.7236 75.0864 li
96.7236 87.4937 li
84.3159 87.4937 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
84.3159 87.4937 mo
84.3159 75.0864 li
96.7236 75.0864 li
96.7236 87.4937 li
84.3159 87.4937 li
cp
.75021 .679683 .670222 .90164 cmyk
@
84.3159 75.0864 mo
84.3159 62.6782 li
96.7236 62.6782 li
96.7236 75.0864 li
84.3159 75.0864 li
cp
0 0 0 0 cmyk
ef
1.5 lw
84.3159 75.0864 mo
84.3159 62.6782 li
96.7236 62.6782 li
96.7236 75.0864 li
84.3159 75.0864 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
71.9082 87.4937 mo
71.9082 75.0864 li
84.3159 75.0864 li
84.3159 87.4937 li
71.9082 87.4937 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
ef
.5 lw
71.9082 87.4937 mo
71.9082 75.0864 li
84.3159 75.0864 li
84.3159 87.4937 li
71.9082 87.4937 li
cp
.75021 .679683 .670222 .90164 cmyk
@
71.9082 75.0864 mo
71.9082 62.6782 li
84.3159 62.6782 li
84.3159 75.0864 li
71.9082 75.0864 li
cp
0 0 0 0 cmyk
ef
1.5 lw
71.9082 75.0864 mo
71.9082 62.6782 li
84.3159 62.6782 li
84.3159 75.0864 li
71.9082 75.0864 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
96.7236 87.4937 mo
96.7236 75.0864 li
109.132 75.0864 li
109.132 87.4937 li
96.7236 87.4937 li
cp
false sop
0 0 0 0 cmyk
ef
96.7236 87.4937 mo
96.7236 75.0864 li
109.132 75.0864 li
109.132 87.4937 li
96.7236 87.4937 li
cp
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
1 lw
[4 2 ] 0 dsh
101.687 1.99219 mo
86.1772 .269043 71.2422 .269043 59.7534 .843262 cv
48.2646 1.41797 40.2227 2.56641 35.6274 7.16211 cv
31.0317 11.7578 29.8828 19.7993 30.4575 27.2671 cv
31.0317 34.7349 33.3296 41.6279 37.9253 46.7983 cv
42.5205 51.9678 49.4136 55.4146 53.4346 58.8613 cv
57.4556 62.3076 58.6045 65.7544 59.7534 69.7749 cv
60.9023 73.7964 62.0513 78.3921 63.7744 82.9868 cv
65.4976 87.5825 67.7954 92.1782 70.0933 95.0513 cv
72.3911 97.9224 74.6885 99.0718 81.582 99.646 cv
88.4751 100.22 99.9639 100.22 113.75 98.4966 cv
127.536 96.7729 143.621 93.3276 156.258 89.3062 cv
168.896 85.2847 178.087 80.6899 183.257 76.6685 cv
188.427 72.6479 189.575 69.2007 189.001 62.8823 cv
188.427 56.5635 186.129 47.3726 179.235 38.1816 cv
172.343 28.9907 160.854 19.7993 147.067 13.481 cv
133.281 7.16211 117.197 3.71533 101.687 1.99219 cv
@
[] 0 dsh
22.9897 128.942 mo
28.7339 131.24 35.6274 131.24 41.9458 131.24 cv
48.2646 131.24 54.0093 131.24 58.0303 130.091 cv
62.0513 128.942 64.3491 126.644 66.0723 122.624 cv
67.7954 118.602 68.9443 112.858 68.3701 107.688 cv
67.7954 102.518 65.4976 97.9224 63.2002 92.7524 cv
60.9023 87.5825 58.6045 81.8384 58.0303 75.519 cv
57.4556 69.2007 58.6045 62.3076 61.4766 57.1377 cv
64.3491 51.9678 68.9443 48.5215 73.5396 45.6489 cv
78.1353 42.7769 82.731 40.479 85.603 37.0322 cv
88.4751 33.5859 89.624 28.9907 86.752 23.8208 cv
83.8799 18.6509 76.9863 12.9063 68.9443 9.45996 cv
60.9023 6.01318 51.7114 4.86426 44.2437 5.43848 cv
36.7759 6.01318 31.0317 8.31055 24.7129 13.481 cv
18.394 18.6509 11.501 26.6929 6.90576 39.3301 cv
2.31006 51.9678 .012207 69.2007 .586914 82.9868 cv
1.16113 96.7729 4.60791 107.114 8.62891 114.582 cv
12.6499 122.049 17.2456 126.644 22.9897 128.942 cv
@
%ADOBeginSubsetFont: Times-Italic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Italic def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdup 75 /K putdef/FontBBox {-296 -413 1661 1205} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7D8BE1853B203EFE351B1CDFA12DF07B00368C22E31EFC3300D63209ED6> |-/B <1C60D8A8C9B7D8BE16AF67847F788DB06A3D82180C6459A2A9A32DF42B9B7699439DB4F8F013ABB233FD2430D14E39B90C52ACA0DE8F3A0C973CCC015EF7B195F0E8DBF22F05CFEE905E502E1B0162A51D838A6D9758EDE046931FB60057B3D0904552AF15B92D6B741878DB48AD39D91AA3FBDCC20EC5217CCC1C7E71D4026F6C0064313646929D44CB7477C712091ADD1656E2D3484F571CCCC204C4B2C39975065DC6BE7FDCEEAA3C329CE80F0C97BB53D85B2AA77A629BD52E1F0A368B6915769CE5A7D349E50A5AC48BCC28CDDAA3782D9636FDAAD0F81D2A7EBE4D7078F7BC64B99D71494C4374C014B29760ED18E7> |-/K <1C60D8A8C9B64EDF91173DB7C1AF9942AE8640A9AA41482787735E252279480245BA98BE85B7C6434D1DE975326F0968AD0992983F393F67A33598E9B6820ED97DD5859DB61B2F095783347FA961F058E3B391AE0CAFC33C590969DDEF997FE5B4DCF91A66B37581F10482232215550DA4804F385BC0A8EF6EEE818427BEEC4733D74E2022E4359B3B8326E9CF035732D27ED8803775A08C6425DCCBE7115AD4F1034812F624FB2FDF6E572A83FC97ADB97E2F79F7401F299ED13DA7243C8D8D96673A4F4DC7988CC30E9CE3D59AA14419B6ECA0F9C6E4229D1345FCF4496212DF1ED1F623BC46024310D2D2604AF96BA2539729AA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHSS+Times-Italic /Times-Italic findfont ct_VMDictPut/WGFHSS+Times-Italic*1 [66{/.notdef}rp /B 8{/.notdef}rp /K 180{/.notdef}rp]WGFHSS+Times-Italic nfWGFHSS+Times-Italic*1 [8.145 0 0 -8.145 0 0 ]msf9.22852 42.314 mo(KB)[5.43265 0 ]xsh154.002 114.968 mo
154.002 114.968 154.002 114.968 154.487 114.644 cv
154.974 114.32 155.945 113.671 157.116 113.685 cv
158.286 113.699 159.655 114.376 160.84 114.484 cv
162.024 114.593 163.026 114.132 163.526 113.902 cv
164.026 113.671 164.026 113.671 164.026 113.671 cv
false sop
0 0 0 0 cmyk
ef
.1731 lw
154.002 114.968 mo
154.002 114.968 154.002 114.968 154.487 114.644 cv
154.974 114.32 155.945 113.671 157.116 113.685 cv
158.286 113.699 159.655 114.376 160.84 114.484 cv
162.024 114.593 163.026 114.132 163.526 113.902 cv
164.026 113.671 164.026 113.671 164.026 113.671 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
163.153 115.398 mo
163.644 115.265 164.043 115.082 164.306 114.96 cv
164.806 114.73 164.806 114.73 164.806 114.73 cv
false sop
0 0 0 0 cmyk
ef
163.153 115.398 mo
163.644 115.265 164.043 115.082 164.306 114.96 cv
164.806 114.73 164.806 114.73 164.806 114.73 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
154.478 115.638 mo
154.478 115.638 154.478 115.638 155.014 115.378 cv
155.18 115.298 155.608 115.119 155.813 115.033 cv
false sop
0 0 0 0 cmyk
ef
154.478 115.638 mo
154.478 115.638 154.478 115.638 155.014 115.378 cv
155.18 115.298 155.608 115.119 155.813 115.033 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
154.369 117.283 mo
154.369 117.283 154.369 117.283 154.711 116.992 cv
155.053 116.699 155.737 116.117 156.765 116.162 cv
157.79 116.208 159.158 116.886 160.513 116.976 cv
161.866 117.068 163.206 116.57 163.876 116.322 cv
164.546 116.072 164.546 116.072 164.546 116.072 cv
false sop
0 0 0 0 cmyk
ef
154.369 117.283 mo
154.369 117.283 154.369 117.283 154.711 116.992 cv
155.053 116.699 155.737 116.117 156.765 116.162 cv
157.79 116.208 159.158 116.886 160.513 116.976 cv
161.866 117.068 163.206 116.57 163.876 116.322 cv
164.546 116.072 164.546 116.072 164.546 116.072 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
%ADOBeginSubsetFont: Helvetica-Oblique Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Oblique def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdef/FontBBox {-933 -481 1571 1138} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/B <1C60D8A8C9B64EDFF440682FFC01E299D663D9838F44C423AD31E8830E9B9DFDE2E33A579860EF902CD85C732710640334D7DD7A61833502698CD633CFCF236E6611183F914A23DB4AF7C056C50BB9119EB3F580A141FECB6935DF101C496E0FE8BC574C72D0F9770274C061973096AA479C174E45A71AEC8E91A4440624AB0F3F1C20F0F0EEE07F3A7460A6343B18B9F8506FC5223511DDDAB48E7FBD77> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHST+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut/WGFHST+Helvetica-Oblique*1 [66{/.notdef}rp /B 189{/.notdef}rp]WGFHST+Helvetica-Oblique nfWGFHST+Helvetica-Oblique*1 [1.82919 -.216009 -.216009 -1.82919 0 0 ]msf156.261 115.883 mo(B)sh%ADOBeginSubsetFont: Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginWGFHST+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/r <1C60D8A8C9B81F2C037408F88268C7B7AD264FF61135D7DD3ACD7F6A3059E7DE5D3D2DFE05D93724B81C9BC1F29B95C6A90752351CC39FACAFB7B03C3471A3587EF6A0FA3DCCBF7C02041A2BDEE7F4A83AFF> |-systemdict /gcheck known {setglobal} if end {end} ifendWGFHST+Helvetica-Oblique /Encoding getdup 114 /r putpop%ADOEndSubsetFont
/WGFHST+Helvetica-Oblique*1 [66{/.notdef}rp /B 47{/.notdef}rp /r 141{/.notdef}rp]WGFHST+Helvetica-Oblique nfWGFHST+Helvetica-Oblique*1 [1.83957 -.0926808 -.0926808 -1.83957 0 0 ]msf157.46 115.876 mo(r)sh%ADOBeginSubsetFont: Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginWGFHST+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/e <1C60D8A8C9B7EF3224F670FA38A1BB4E90223B6A6298634446E63C8919CE3C115A06C150CF8C57A88CFAE23A2E8EDF85D74BC61BAB37C5EDB8BF8F7018E84799BDCFBD9072B11894C7F22DBF3C8A6B3DDD8F6C2990E6156A4BC103E12DB037F0C6BE9E4B1CFC9B0EF894C6A7F8ADB8204808E3684247344FE20EB6AF7E77BF7290E1451C84B79B45526E2AA9CB51A3FAFF2A0EFC6CCD416A60FB5BFFFCED1AEE1809A0CC6AC7> |-systemdict /gcheck known {setglobal} if end {end} ifendWGFHST+Helvetica-Oblique /Encoding getdup 101 /e putpop%ADOEndSubsetFont
/WGFHST+Helvetica-Oblique*1 [66{/.notdef}rp /B 34{/.notdef}rp /e 12{/.notdef}rp /r 141{/.notdef}rp]WGFHST+Helvetica-Oblique nfWGFHST+Helvetica-Oblique*1 [1.83978 .0882579 .0882579 -1.83978 0 0 ]msf157.991 115.784 mo(e)sh%ADOBeginSubsetFont: Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginWGFHST+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/z <1C60D8A8C9B7A73DEABE546362E9B9631374FC6ED50195A5D22E38F5A68979D3C51AF3AB8333B3E50BECF8> |-systemdict /gcheck known {setglobal} if end {end} ifendWGFHST+Helvetica-Oblique /Encoding getdup 32 /space putdup 122 /z putpop%ADOEndSubsetFont
/WGFHST+Helvetica-Oblique*1 [32{/.notdef}rp /space 33{/.notdef}rp /B 34{/.notdef}rp /e 12{/.notdef}rp /r 7{/.notdef}rp /z 133{/.notdef}rp]WGFHST+Helvetica-Oblique nfWGFHST+Helvetica-Oblique*1 [1.83781 .122644 .122644 -1.83781 0 0 ]msf158.986 115.862 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83961 .0919091 .0919091 -1.83961 0 0 ]msf160.061 115.911 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155361 -.155361 -1.83534 0 0 ]msf161.112 116.067 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76235 -.535451 -.535451 -1.76235 0 0 ]msf162.337 116.059 mo( )sh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /alpha putdef/FontBBox {-167 -299 1063 827} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/alpha <1C60D8A8C9B66A6BAA2CFDED1D2EFA75F98BE0B51FA91D3486C6EC805643E81B99653CCA64E30B935978931127908C09443CBECCD6A571D8D3FCEC93A5A158423091AB4239ED9928E003300569B255F0D943F8F5D35F0EC6E967A5B49AEA36AE1B3BC22B43FD3533BC2C31AA72284108ABA1BE9C11F8548B89711F627A5A5FF6711878104FE7A8510F67AD235FAEA6A6736F2AD678C58B65FCA7756B07A21F636B65B5EE976BEE3D808AD91A855908C05561ACFAAC8EC0A089FC85F3C70E7AD807445570518FD0DAC061976FAF4B8F48D79A7BC0B7> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHSU+Symbol /Symbol findfont ct_VMDictPut/WGFHSU+Symbol*1 [97{/.notdef}rp /alpha 158{/.notdef}rp]WGFHSU+Symbol nfWGFHSU+Symbol*1 [11.4036 0 0 -11.4036 0 0 ]msf153.332 34.5219 mo(a)sh%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 50 /two putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WGFHSV+Times-Roman /Times-Roman findfont ct_VMDictPut/WGFHSV+Times-Roman*1 [50{/.notdef}rp /two 205{/.notdef}rp]WGFHSV+Times-Roman nfWGFHSV+Times-Roman*1 [7.6024 0 0 -7.6024 0 0 ]msf160.526 37.0561 mo(2)sh147.502 74.2183 mo
147.502 74.2183 147.502 74.2183 147.987 73.894 cv
148.474 73.5698 149.445 72.9214 150.616 72.9351 cv
151.786 72.9487 153.155 73.6265 154.34 73.7339 cv
155.524 73.8433 156.526 73.3823 157.026 73.1519 cv
157.526 72.9214 157.526 72.9214 157.526 72.9214 cv
false sop
0 0 0 0 cmyk
ef
147.502 74.2183 mo
147.502 74.2183 147.502 74.2183 147.987 73.894 cv
148.474 73.5698 149.445 72.9214 150.616 72.9351 cv
151.786 72.9487 153.155 73.6265 154.34 73.7339 cv
155.524 73.8433 156.526 73.3823 157.026 73.1519 cv
157.526 72.9214 157.526 72.9214 157.526 72.9214 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
156.653 74.6479 mo
157.144 74.5151 157.543 74.3315 157.806 74.2104 cv
158.306 73.98 158.306 73.98 158.306 73.98 cv
false sop
0 0 0 0 cmyk
ef
156.653 74.6479 mo
157.144 74.5151 157.543 74.3315 157.806 74.2104 cv
158.306 73.98 158.306 73.98 158.306 73.98 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
147.978 74.8882 mo
147.978 74.8882 147.978 74.8882 148.514 74.6284 cv
148.68 74.5483 149.108 74.3687 149.313 74.2827 cv
false sop
0 0 0 0 cmyk
ef
147.978 74.8882 mo
147.978 74.8882 147.978 74.8882 148.514 74.6284 cv
148.68 74.5483 149.108 74.3687 149.313 74.2827 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
147.869 76.5327 mo
147.869 76.5327 147.869 76.5327 148.211 76.2417 cv
148.553 75.9487 149.237 75.3667 150.265 75.4116 cv
151.29 75.4585 152.658 76.1362 154.013 76.2261 cv
155.366 76.3179 156.706 75.8198 157.376 75.5718 cv
158.046 75.3218 158.046 75.3218 158.046 75.3218 cv
false sop
0 0 0 0 cmyk
ef
147.869 76.5327 mo
147.869 76.5327 147.869 76.5327 148.211 76.2417 cv
148.553 75.9487 149.237 75.3667 150.265 75.4116 cv
151.29 75.4585 152.658 76.1362 154.013 76.2261 cv
155.366 76.3179 156.706 75.8198 157.376 75.5718 cv
158.046 75.3218 158.046 75.3218 158.046 75.3218 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82919 -.216009 -.216009 -1.82919 0 0 ]msf149.761 75.1333 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83957 -.0926808 -.0926808 -1.83957 0 0 ]msf150.96 75.1265 mo(r)shWGFHST+Helvetica-Oblique*1 [1.83978 .0882579 .0882579 -1.83978 0 0 ]msf151.491 75.0337 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122644 .122644 -1.83781 0 0 ]msf152.486 75.1118 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83961 .0919091 .0919091 -1.83961 0 0 ]msf153.561 75.1606 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155361 -.155361 -1.83534 0 0 ]msf154.612 75.3169 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76235 -.535451 -.535451 -1.76235 0 0 ]msf155.837 75.3091 mo( )sh115.502 29.2183 mo
115.502 29.2183 115.502 29.2183 115.987 28.894 cv
116.474 28.5698 117.445 27.9214 118.616 27.9351 cv
119.786 27.9487 121.155 28.6265 122.34 28.7339 cv
123.524 28.8433 124.526 28.3823 125.026 28.1519 cv
125.526 27.9214 125.526 27.9214 125.526 27.9214 cv
false sop
0 0 0 0 cmyk
ef
115.502 29.2183 mo
115.502 29.2183 115.502 29.2183 115.987 28.894 cv
116.474 28.5698 117.445 27.9214 118.616 27.9351 cv
119.786 27.9487 121.155 28.6265 122.34 28.7339 cv
123.524 28.8433 124.526 28.3823 125.026 28.1519 cv
125.526 27.9214 125.526 27.9214 125.526 27.9214 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
124.653 29.6479 mo
125.144 29.5151 125.543 29.3315 125.806 29.2104 cv
126.306 28.98 126.306 28.98 126.306 28.98 cv
false sop
0 0 0 0 cmyk
ef
124.653 29.6479 mo
125.144 29.5151 125.543 29.3315 125.806 29.2104 cv
126.306 28.98 126.306 28.98 126.306 28.98 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
115.978 29.8882 mo
115.978 29.8882 115.978 29.8882 116.514 29.6284 cv
116.68 29.5483 117.108 29.3687 117.313 29.2827 cv
false sop
0 0 0 0 cmyk
ef
115.978 29.8882 mo
115.978 29.8882 115.978 29.8882 116.514 29.6284 cv
116.68 29.5483 117.108 29.3687 117.313 29.2827 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
115.869 31.5327 mo
115.869 31.5327 115.869 31.5327 116.211 31.2417 cv
116.553 30.9487 117.237 30.3667 118.265 30.4116 cv
119.29 30.4585 120.658 31.1362 122.013 31.2261 cv
123.366 31.3179 124.706 30.8198 125.376 30.5718 cv
126.046 30.3218 126.046 30.3218 126.046 30.3218 cv
false sop
0 0 0 0 cmyk
ef
115.869 31.5327 mo
115.869 31.5327 115.869 31.5327 116.211 31.2417 cv
116.553 30.9487 117.237 30.3667 118.265 30.4116 cv
119.29 30.4585 120.658 31.1362 122.013 31.2261 cv
123.366 31.3179 124.706 30.8198 125.376 30.5718 cv
126.046 30.3218 126.046 30.3218 126.046 30.3218 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82917 -.2162 -.2162 -1.82917 0 0 ]msf117.762 30.1313 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83956 -.0928608 -.0928608 -1.83956 0 0 ]msf118.96 30.127 mo(r)shWGFHST+Helvetica-Oblique*1 [1.8398 .0879894 .0879894 -1.8398 0 0 ]msf119.492 30.0332 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .12263 .12263 -1.83781 0 0 ]msf120.486 30.1118 mo(e)shWGFHST+Helvetica-Oblique*1 [1.8396 .0920973 .0920973 -1.8396 0 0 ]msf121.561 30.1606 mo(z)shWGFHST+Helvetica-Oblique*1 [1.8354 -.154655 -.154655 -1.8354 0 0 ]msf122.611 30.3174 mo(e)shWGFHST+Helvetica-Oblique*1 [1.7629 -.533656 -.533656 -1.7629 0 0 ]msf123.836 30.3086 mo( )sh84.752 81.2183 mo
84.752 81.2183 84.752 81.2183 85.2373 80.894 cv
85.7236 80.5698 86.6953 79.9214 87.8662 79.9351 cv
89.0361 79.9487 90.4053 80.6265 91.5898 80.7339 cv
92.7744 80.8433 93.7764 80.3823 94.2764 80.1519 cv
94.7764 79.9214 94.7764 79.9214 94.7764 79.9214 cv
false sop
0 0 0 0 cmyk
ef
84.752 81.2183 mo
84.752 81.2183 84.752 81.2183 85.2373 80.894 cv
85.7236 80.5698 86.6953 79.9214 87.8662 79.9351 cv
89.0361 79.9487 90.4053 80.6265 91.5898 80.7339 cv
92.7744 80.8433 93.7764 80.3823 94.2764 80.1519 cv
94.7764 79.9214 94.7764 79.9214 94.7764 79.9214 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
93.9033 81.6479 mo
94.3936 81.5151 94.793 81.3315 95.0557 81.2104 cv
95.5557 80.98 95.5557 80.98 95.5557 80.98 cv
false sop
0 0 0 0 cmyk
ef
93.9033 81.6479 mo
94.3936 81.5151 94.793 81.3315 95.0557 81.2104 cv
95.5557 80.98 95.5557 80.98 95.5557 80.98 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
85.2275 81.8882 mo
85.2275 81.8882 85.2275 81.8882 85.7637 81.6284 cv
85.9297 81.5483 86.3584 81.3687 86.5625 81.2827 cv
false sop
0 0 0 0 cmyk
ef
85.2275 81.8882 mo
85.2275 81.8882 85.2275 81.8882 85.7637 81.6284 cv
85.9297 81.5483 86.3584 81.3687 86.5625 81.2827 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
85.1191 83.5327 mo
85.1191 83.5327 85.1191 83.5327 85.4609 83.2417 cv
85.8027 82.9487 86.4873 82.3667 87.5146 82.4116 cv
88.54 82.4585 89.9082 83.1362 91.2627 83.2261 cv
92.6162 83.3179 93.9561 82.8198 94.626 82.5718 cv
95.2959 82.3218 95.2959 82.3218 95.2959 82.3218 cv
false sop
0 0 0 0 cmyk
ef
85.1191 83.5327 mo
85.1191 83.5327 85.1191 83.5327 85.4609 83.2417 cv
85.8027 82.9487 86.4873 82.3667 87.5146 82.4116 cv
88.54 82.4585 89.9082 83.1362 91.2627 83.2261 cv
92.6162 83.3179 93.9561 82.8198 94.626 82.5718 cv
95.2959 82.3218 95.2959 82.3218 95.2959 82.3218 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82918 -.216068 -.216068 -1.82918 0 0 ]msf87.0117 82.1333 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83957 -.0926949 -.0926949 -1.83957 0 0 ]msf88.2114 82.1265 mo(r)shWGFHST+Helvetica-Oblique*1 [1.83978 .0882986 .0882986 -1.83978 0 0 ]msf88.7412 82.0327 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122703 .122703 -1.83781 0 0 ]msf89.7373 82.1118 mo(e)shWGFHST+Helvetica-Oblique*1 [1.8396 .0919967 .0919967 -1.8396 0 0 ]msf90.8105 82.1606 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155294 -.155294 -1.83534 0 0 ]msf91.8618 82.3169 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76238 -.535348 -.535348 -1.76238 0 0 ]msf93.0854 82.3091 mo( )sh53.252 32.9683 mo
53.252 32.9683 53.252 32.9683 53.7373 32.644 cv
54.2236 32.3198 55.1953 31.6714 56.3662 31.6851 cv
57.5361 31.6987 58.9053 32.3765 60.0898 32.4839 cv
61.2744 32.5933 62.2764 32.1323 62.7764 31.9019 cv
63.2764 31.6714 63.2764 31.6714 63.2764 31.6714 cv
false sop
0 0 0 0 cmyk
ef
53.252 32.9683 mo
53.252 32.9683 53.252 32.9683 53.7373 32.644 cv
54.2236 32.3198 55.1953 31.6714 56.3662 31.6851 cv
57.5361 31.6987 58.9053 32.3765 60.0898 32.4839 cv
61.2744 32.5933 62.2764 32.1323 62.7764 31.9019 cv
63.2764 31.6714 63.2764 31.6714 63.2764 31.6714 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
62.4033 33.3979 mo
62.8936 33.2651 63.293 33.0815 63.5557 32.9604 cv
64.0557 32.73 64.0557 32.73 64.0557 32.73 cv
false sop
0 0 0 0 cmyk
ef
62.4033 33.3979 mo
62.8936 33.2651 63.293 33.0815 63.5557 32.9604 cv
64.0557 32.73 64.0557 32.73 64.0557 32.73 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
53.7275 33.6382 mo
53.7275 33.6382 53.7275 33.6382 54.2637 33.3784 cv
54.4297 33.2983 54.8584 33.1187 55.0625 33.0327 cv
false sop
0 0 0 0 cmyk
ef
53.7275 33.6382 mo
53.7275 33.6382 53.7275 33.6382 54.2637 33.3784 cv
54.4297 33.2983 54.8584 33.1187 55.0625 33.0327 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
53.6191 35.2827 mo
53.6191 35.2827 53.6191 35.2827 53.9609 34.9917 cv
54.3027 34.6987 54.9873 34.1167 56.0146 34.1616 cv
57.04 34.2085 58.4082 34.8862 59.7627 34.9761 cv
61.1162 35.0679 62.4561 34.5698 63.126 34.3218 cv
63.7959 34.0718 63.7959 34.0718 63.7959 34.0718 cv
false sop
0 0 0 0 cmyk
ef
53.6191 35.2827 mo
53.6191 35.2827 53.6191 35.2827 53.9609 34.9917 cv
54.3027 34.6987 54.9873 34.1167 56.0146 34.1616 cv
57.04 34.2085 58.4082 34.8862 59.7627 34.9761 cv
61.1162 35.0679 62.4561 34.5698 63.126 34.3218 cv
63.7959 34.0718 63.7959 34.0718 63.7959 34.0718 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82916 -.216258 -.216258 -1.82916 0 0 ]msf55.5117 33.8813 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83956 -.0928749 -.0928749 -1.83956 0 0 ]msf56.7114 33.877 mo(r)shWGFHST+Helvetica-Oblique*1 [1.8398 .0880301 .0880301 -1.8398 0 0 ]msf57.2412 33.7832 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122688 .122688 -1.83781 0 0 ]msf58.2373 33.8618 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83959 .0921847 .0921847 -1.83959 0 0 ]msf59.311 33.9106 mo(z)shWGFHST+Helvetica-Oblique*1 [1.8354 -.154588 -.154588 -1.8354 0 0 ]msf60.3618 34.0674 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76293 -.533555 -.533555 -1.76293 0 0 ]msf61.5859 34.0591 mo( )sh26.502 77.4683 mo
26.502 77.4683 26.502 77.4683 26.9873 77.144 cv
27.4736 76.8198 28.4453 76.1714 29.6162 76.1851 cv
30.7861 76.1987 32.1553 76.8765 33.3398 76.9839 cv
34.5244 77.0933 35.5264 76.6323 36.0264 76.4019 cv
36.5264 76.1714 36.5264 76.1714 36.5264 76.1714 cv
false sop
0 0 0 0 cmyk
ef
26.502 77.4683 mo
26.502 77.4683 26.502 77.4683 26.9873 77.144 cv
27.4736 76.8198 28.4453 76.1714 29.6162 76.1851 cv
30.7861 76.1987 32.1553 76.8765 33.3398 76.9839 cv
34.5244 77.0933 35.5264 76.6323 36.0264 76.4019 cv
36.5264 76.1714 36.5264 76.1714 36.5264 76.1714 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
35.6533 77.8979 mo
36.1436 77.7651 36.543 77.5815 36.8057 77.4604 cv
37.3057 77.23 37.3057 77.23 37.3057 77.23 cv
false sop
0 0 0 0 cmyk
ef
35.6533 77.8979 mo
36.1436 77.7651 36.543 77.5815 36.8057 77.4604 cv
37.3057 77.23 37.3057 77.23 37.3057 77.23 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
26.9775 78.1382 mo
26.9775 78.1382 26.9775 78.1382 27.5137 77.8784 cv
27.6797 77.7983 28.1084 77.6187 28.3125 77.5327 cv
false sop
0 0 0 0 cmyk
ef
26.9775 78.1382 mo
26.9775 78.1382 26.9775 78.1382 27.5137 77.8784 cv
27.6797 77.7983 28.1084 77.6187 28.3125 77.5327 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
26.8691 79.7827 mo
26.8691 79.7827 26.8691 79.7827 27.2109 79.4917 cv
27.5527 79.1987 28.2373 78.6167 29.2646 78.6616 cv
30.29 78.7085 31.6582 79.3862 33.0127 79.4761 cv
34.3662 79.5679 35.7061 79.0698 36.376 78.8218 cv
37.0459 78.5718 37.0459 78.5718 37.0459 78.5718 cv
false sop
0 0 0 0 cmyk
ef
26.8691 79.7827 mo
26.8691 79.7827 26.8691 79.7827 27.2109 79.4917 cv
27.5527 79.1987 28.2373 78.6167 29.2646 78.6616 cv
30.29 78.7085 31.6582 79.3862 33.0127 79.4761 cv
34.3662 79.5679 35.7061 79.0698 36.376 78.8218 cv
37.0459 78.5718 37.0459 78.5718 37.0459 78.5718 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82918 -.216068 -.216068 -1.82918 0 0 ]msf28.7617 78.3833 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83957 -.0926949 -.0926949 -1.83957 0 0 ]msf29.9614 78.3765 mo(r)shWGFHST+Helvetica-Oblique*1 [1.83978 .0882986 .0882986 -1.83978 0 0 ]msf30.4912 78.2827 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122703 .122703 -1.83781 0 0 ]msf31.4873 78.3618 mo(e)shWGFHST+Helvetica-Oblique*1 [1.8396 .0919967 .0919967 -1.8396 0 0 ]msf32.5605 78.4106 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155294 -.155294 -1.83534 0 0 ]msf33.6118 78.5669 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76238 -.535348 -.535348 -1.76238 0 0 ]msf34.8354 78.5591 mo( )sh36.752 119.218 mo
36.752 119.218 36.752 119.218 37.2373 118.894 cv
37.7236 118.57 38.6953 117.921 39.8662 117.935 cv
41.0361 117.949 42.4053 118.626 43.5898 118.734 cv
44.7744 118.843 45.7764 118.382 46.2764 118.152 cv
46.7764 117.921 46.7764 117.921 46.7764 117.921 cv
false sop
0 0 0 0 cmyk
ef
36.752 119.218 mo
36.752 119.218 36.752 119.218 37.2373 118.894 cv
37.7236 118.57 38.6953 117.921 39.8662 117.935 cv
41.0361 117.949 42.4053 118.626 43.5898 118.734 cv
44.7744 118.843 45.7764 118.382 46.2764 118.152 cv
46.7764 117.921 46.7764 117.921 46.7764 117.921 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
45.9033 119.648 mo
46.3936 119.515 46.793 119.332 47.0557 119.21 cv
47.5557 118.98 47.5557 118.98 47.5557 118.98 cv
false sop
0 0 0 0 cmyk
ef
45.9033 119.648 mo
46.3936 119.515 46.793 119.332 47.0557 119.21 cv
47.5557 118.98 47.5557 118.98 47.5557 118.98 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.2275 119.888 mo
37.2275 119.888 37.2275 119.888 37.7637 119.628 cv
37.9297 119.548 38.3584 119.369 38.5625 119.283 cv
false sop
0 0 0 0 cmyk
ef
37.2275 119.888 mo
37.2275 119.888 37.2275 119.888 37.7637 119.628 cv
37.9297 119.548 38.3584 119.369 38.5625 119.283 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
37.1191 121.533 mo
37.1191 121.533 37.1191 121.533 37.4609 121.242 cv
37.8027 120.949 38.4873 120.367 39.5146 120.412 cv
40.54 120.458 41.9082 121.136 43.2627 121.226 cv
44.6162 121.318 45.9561 120.82 46.626 120.572 cv
47.2959 120.322 47.2959 120.322 47.2959 120.322 cv
false sop
0 0 0 0 cmyk
ef
37.1191 121.533 mo
37.1191 121.533 37.1191 121.533 37.4609 121.242 cv
37.8027 120.949 38.4873 120.367 39.5146 120.412 cv
40.54 120.458 41.9082 121.136 43.2627 121.226 cv
44.6162 121.318 45.9561 120.82 46.626 120.572 cv
47.2959 120.322 47.2959 120.322 47.2959 120.322 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82918 -.216068 -.216068 -1.82918 0 0 ]msf39.0117 120.133 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83957 -.0926949 -.0926949 -1.83957 0 0 ]msf40.2114 120.126 mo(r)shWGFHST+Helvetica-Oblique*1 [1.83978 .0882986 .0882986 -1.83978 0 0 ]msf40.7412 120.033 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122703 .122703 -1.83781 0 0 ]msf41.7373 120.112 mo(e)shWGFHST+Helvetica-Oblique*1 [1.8396 .0919967 .0919967 -1.8396 0 0 ]msf42.8105 120.161 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155294 -.155294 -1.83534 0 0 ]msf43.8618 120.317 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76238 -.535348 -.535348 -1.76238 0 0 ]msf45.0854 120.309 mo( )sh99.002 132.968 mo
99.002 132.968 99.002 132.968 99.4873 132.644 cv
99.9736 132.32 100.945 131.671 102.116 131.685 cv
103.286 131.699 104.655 132.376 105.84 132.484 cv
107.024 132.593 108.026 132.132 108.526 131.902 cv
109.026 131.671 109.026 131.671 109.026 131.671 cv
false sop
0 0 0 0 cmyk
ef
99.002 132.968 mo
99.002 132.968 99.002 132.968 99.4873 132.644 cv
99.9736 132.32 100.945 131.671 102.116 131.685 cv
103.286 131.699 104.655 132.376 105.84 132.484 cv
107.024 132.593 108.026 132.132 108.526 131.902 cv
109.026 131.671 109.026 131.671 109.026 131.671 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
108.153 133.398 mo
108.644 133.265 109.043 133.082 109.306 132.96 cv
109.806 132.73 109.806 132.73 109.806 132.73 cv
false sop
0 0 0 0 cmyk
ef
108.153 133.398 mo
108.644 133.265 109.043 133.082 109.306 132.96 cv
109.806 132.73 109.806 132.73 109.806 132.73 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
99.4775 133.638 mo
99.4775 133.638 99.4775 133.638 100.014 133.378 cv
100.18 133.298 100.608 133.119 100.813 133.033 cv
false sop
0 0 0 0 cmyk
ef
99.4775 133.638 mo
99.4775 133.638 99.4775 133.638 100.014 133.378 cv
100.18 133.298 100.608 133.119 100.813 133.033 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
99.3691 135.283 mo
99.3691 135.283 99.3691 135.283 99.7109 134.992 cv
100.053 134.699 100.737 134.117 101.765 134.162 cv
102.79 134.208 104.158 134.886 105.513 134.976 cv
106.866 135.068 108.206 134.57 108.876 134.322 cv
109.546 134.072 109.546 134.072 109.546 134.072 cv
false sop
0 0 0 0 cmyk
ef
99.3691 135.283 mo
99.3691 135.283 99.3691 135.283 99.7109 134.992 cv
100.053 134.699 100.737 134.117 101.765 134.162 cv
102.79 134.208 104.158 134.886 105.513 134.976 cv
106.866 135.068 108.206 134.57 108.876 134.322 cv
109.546 134.072 109.546 134.072 109.546 134.072 cv
true sop
/0 /CSD get_res devncs
0 0 0 1 devn
@
WGFHST+Helvetica-Oblique*1 [1.82919 -.216009 -.216009 -1.82919 0 0 ]msf101.261 133.883 mo(B)shWGFHST+Helvetica-Oblique*1 [1.83957 -.0926808 -.0926808 -1.83957 0 0 ]msf102.46 133.876 mo(r)shWGFHST+Helvetica-Oblique*1 [1.83978 .0882579 .0882579 -1.83978 0 0 ]msf102.991 133.784 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83781 .122644 .122644 -1.83781 0 0 ]msf103.986 133.862 mo(e)shWGFHST+Helvetica-Oblique*1 [1.83961 .0919091 .0919091 -1.83961 0 0 ]msf105.061 133.911 mo(z)shWGFHST+Helvetica-Oblique*1 [1.83534 -.155361 -.155361 -1.83534 0 0 ]msf106.112 134.067 mo(e)shWGFHST+Helvetica-Oblique*1 [1.76235 -.535451 -.535451 -1.76235 0 0 ]msf107.337 134.059 mo( )sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Procedure [/0 ]]
] del_res
/WGFHSQ+Helvetica*1 uf/WGFHSQ+Helvetica uf/Helvetica uf/WGFHSR+Helvetica-Bold*1 uf/WGFHSR+Helvetica-Bold uf/Helvetica-Bold uf/WGFHST+Helvetica-Oblique*1 uf/WGFHST+Helvetica-Oblique uf/Helvetica-Oblique uf/WGFHSU+Symbol*1 uf/WGFHSU+Symbol uf/Symbol uf/WGFHSV+Times-Roman*1 uf/WGFHSV+Times-Roman uf/Times-Roman uf/WGFHSS+Times-Italic*1 uf/WGFHSS+Times-Italic uf/Times-Italic ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Jon) ()%%Title: (wumpus-nonentailment.eps)%%CreationDate: 11/3/09 2:27 PM%%Canvassize: 16383%AI9_DataStream%Gb!!klZ-RIE@1MbHjBXJKH2G/`;QE[CfYOFF(i&"P%O(@Qr$U1G,o5r@_"*CpH8C??G6Qn?AgDGX3M#Q8!BFQZ*8aH,4A)#l;uk,%It%.SmCOISIK&tJT*Nuo@u0<i\arecfrokt?f1k3_oL4a(Fb)*%51Tbj,)VG>\Rn7;D,PaGs(idq>U!7_n/^ZrU>47nF>Q3oAfFt%O2!lnrork,q*3[50YY(Zs-JM]a614-J,=J7s1amjDP#a6)GU7t_rHdgTAJG^IIljtj.#T;s#!*s^V9O3:QKGomILEIJ+qF@T:R/#%j6tkh4ad1iT:V\ChCX6Wk0r/Hg\^)\^\ds.rSuXf2uc+UpZa^5O#Lu!+)[Z74PbEHp[5m1d"ai7qt]X>Rt(A6oV[HT^HR^3ri=qp%5;MO'n8[B&TT;8Epc%[0+$[Mcq!C?'_jfOGNNYRp(\Njeq0*@A5)f^be+$oRfDk=ns7a)9^HQiX27qeemo"LHO[$>e_YDKK0BrE'%rq2m)IX(b[dtbP2DkGqccbJ)JI!C,?FSFaDO,i&kYP<'CH][]Fs7#[[na=j.;b;)m+qMi;oQ,K4Q=KdHb-sZOkIIM^>*F=m$0U9f%[h!uaoq7WJ\*lLDJ,Jm[IgbmSIJEHH\,U+!_^D0Xr[Hb&e*"c,%tAiuQ55WL?1@S!cYjjG)&`;Kc/[Uj3f28#r$`)(J+qoWLJNQn%T-$;HoRD;Gn:n23[s(&"I/'YRofmp"ro)]%TDpt`2Rp#;b1Ji>53-lnME`1EL&+R7SG!:rkj_StV*:g_FA6!.[ppGnqsa<7\*nc/%d-QB9msk0&p<?ju)U=iMi6bo=jo:A@AXHuIT0>ENdpWc-]DdT=O)l-;n2kp3n,GKunD2o)6<>$&%Ks6qRVrEg]R+eql#)$"oP&,o%Im<u,Vb]^(DZ#ETI[3;bH`*Lff7:k3^LO'XA#+$QP](JXk\5=B'P^VTrDa34.YV&kEcZjsH`&d8;k#uMdF5d-X59fjIA3@`lM?rQ%?!l'Ef@TZ>oej.f\Y3q[DG$V#Df4e9Ri?WB7P*Sbn]2[2>C$q>a*@;.qFRf&:@s`Rd@;mhq2T&T5H,+:LjmdbJI-Ufk!VGu0:ELO%Un.]bdPK.(IaYmn2aM.QoM36"]UrBT]]^`N\[`k#eqZ^I3#4%PQKY5/.5R=<bLgBBnobp3ed*kg+17j=d80%!<`!B[hoUc'De_`4%_[6cPjB7onrM72AG-_,>;asLnqFRf&Ie6Q>;5cnP.ds8oJd,oLTHC8'N)-ZQXTWRXMp,Eq:Eu3Gaa9jsXI$<05AEQl"(fpIk\6Hm%HqX(+T@?KsS)u(XO_<o+[@u9Er<edK]d&o.2[FPYL-[>_2B',&MU2Fu"kHZB/u')]bBjD21ifZ'jsFT9<d;7K0$h`8nkV_-4&`(\%em*/=4l#NkU#3E8jdEG^@COOQ"[#N5([;4\:\pia-OjL^cW(18k;ptGJ4Y'5@KU,ZGk#,)=.]'@nNZk%>g_lP&EK>V>Q0cGU4;dD%r&adUc2sEKj^5.\p\ZWC>*H^*_n2E;]=O/Dk&:(imC2Z\r%7roIeDuk5j!"\p\M;q4b(X>BE*XWe(W2F=]bD<J'%.6^Q>Ts^3LIk%c-98#C,oP,qC77spV5tIq7F?ZJkA7!S#[lagq:e#5(tKDd5M4$"%n&A],^%j3Rh-[MI?)$c)^K*g;n>F<8Z,2oJ_1os,@fl(4(2'%eAKN]=6Yor)lc"dm0Up`#'uo#7f".XWRQjuNH*+i1-0aTk#K'k^W36A,8`4Unnso`NK,tT?k0lg,!CnTh!e6Fk!V@e/#$\Eo0u2>%'J(J?kUYNnGOhjXmD_pt,8`3gnhc>N4R(o_N>TA)/)ZJ\]")N1:VdQ)/`4**m211OGX(]BDb:-Q^GER\p$m=O)n6ZnbZV/:fO/@p%mcY*]12?6BYVn55/,(VY.;P"EYo<CEhLQER@7kRDf/LhcRlS0J2t5S-coG\_:nAL%Y-M)tnMYY+p\?C(/aG!1^a!dgC%Kg`BSYI`%0U=Hao(-d"N*k8l>jL_pd2HrQK/n6B7i@ii;WkX]dkAu9>AD2gqA+!Z)JeoH3HAj&U[29`X&mlq/(nc0F#s15J%jM(Hn2QP]S(:7%TgX?"!p.nCrO(",X9\TmDrOQ651fMmMH3D_+[9O=1->EYYgG6kn_3aNo-bM;^UNf]:>S'FaPX\:[I*OAW+Dg^/Tjj<M>qK4G*$Yi%?ai+<I6YK;k:N<:?dJatLLtnI$ieVFUVB)@r*Bm`n7BmLTNET;/U6%L/ajB+:@Hd,bW9M$p@9ipKYjX?+)OIZAWI-$9[5=@p0\@h%F!SqdiS>i;>QrB'#$-&8\'lB3aX6p$oH`3an7hL@h_s(5]Oh-:fiI0-%^K0EF!#b1o2EfpnAMmr1)B:2Xn*/S82q6r.6L5tdr%hu%>+kQH?#h0^[T)5>`%e&@3/W069i"R1Yg-8pWpn()Qcd/ld[oWmm(N?7_ZqE$1,n=9`]JE=Y@P:$]#b%/k=Md"M22L<P"fa=_ti9J%&WXNlh]$u"oU!+;"GL*rBNP?)k'>KXl@_9,\H)8smCTk-bDsM)<U'-jl8#NaH:+^31iB&0gmI/,.;bV?1_68r`q57"lXj:RfCM!C%5Hc6TgT->@r9=qser+:#TFpo*1FH@QC$*S&R)1NaYG2jOAt05^]hs*g;(8YQRsC&VR;iup.!mLjPm+tM_LH[jJm6hA"2`YX.LX6a%Y)aX!8WKgCDP09G"aqmO[`lhbaHY:^$gB\+d[5.;(sg\OdbMt8P\:Zn8p?b&.WeaWq@U=pD>4^X]@l%>DF.TJ[!\^]mVLQNm_?c>%Um_rFMl#?sEOp(b7r"H_cJce*H>WW69(KT4KMkf#<[g3%5\&bj6jHOo5i9htq2OfHIl#smDAlO84l(VB*NE:;'J;K?#,3snkpk"+%8!Z/'dg1ao@FZ0".=_o;)OF!)_De:,PgS4B't?HR`65l)Nh!$8\(1CUC;(<TFu,:#d>CNU>')g]e!!,m3u:rO]"^ZE&RHU8IS-p[%>qn[76;O-b_0#F:ZX9h8eW_R>Ehrhd]BK*h12DpadI!TH?*u7j+9A0WK'Sj.26M17$VW+qH0FDp"0gogDRJJSSl)XGnSjJUZXrZY%Fl8a&lVjBGn$<JpF/BAIn94f8O^Lt$k<H6FZ9@:94'`BIHA/hE2.&m2aIAG1Qk(k\KdQWOher1qXSG?Wf\g6(_Ur@&m<EC+F3!)n%N+ufm7fIJ[J5GG:S(`D^QG3lMH[Ue=1#8tSDi>XZ0a`,&NbFlNE$h8unBdfFf;[m8D[j2ohAkgFR68o/jE&A"V[-D/'n=%L42h1Z%1AK,$"t"Q)=npuGL9&UQ&Rk+SI\nK*),HaSS%N=t7M@^^Wcu98V3^BU3#J7<]lg[%(&]snUs+!k)pmb.i_usnjhH.7,ck^p2_,W:%[8;I7\H/HaVCRO8-8HG1!G`b1K@gGWGZEK@<7?p!St]9ALLE,G4`quPFnacEHY7*j>E"GN+ZgOlg54n>Z0;PbG)tGZ>A<Dcfjf'/%H_rVjdhW[:eOkfSdc,LHUqp'#mpBc<;GAQV*LU;2YkGAUQG7??dt[QRa0Msb%eoJ2S`k"MCKG7JXn8I(jL-'VFO1IC1uU#"Dt&*I%]Y/,961_m`STp>1L3doM#@Z4?+6G_p`T'!C?'dU#YZ%//*d*/-/*MA\^TQ/GQ?$MkDQra"`6-Wk$fGaNF)5p:FHdg",]J$>qbHsa%*1=hcJpFu]L>ob;V`nt;Pr$+\)PB'9;Dn4#;ss,oK('OXGLH4TpY4AmiZFH91ET\)HbgQX%@gN7$U^L3XQe3R_a9i.7,LB;.ABl)%29$9+rI';5$Wg8b=,<2?KJ%A!;2#En&UC-ica,KTL4q5>L<V+kLBh./Ur4"PDMjFV=@gg<VC`)LF_-#,g".Q`Y#"Qt>3#-4q\GD%%T3"rTIqAOkHL5srA/qM^<>/1mkG+#k7P?:Gi2%WR`C6;"V:XWDPI=Q=-8`utL>]S'ZgjGQF)#]>0-#7i(Y-`0Df1rgaqoYE'eI+&%VXcohV\'22N;'c=^U6j+BPm$>k#4"LIs;E\6*uY&o)sp4EG@LipL\`Ip9k/p[Wk3T[=*&tO3,le'Pf(>!a?H0_HtKXZs$M.hF,cS%7<]$q#E'*3f$#%Zi&Or)7Q?\([EYf(aME6?n)t_>4KH^'7XancO4>#]l<m@k>=naBXR.n@CMV=N)q_;t3aMbt);7hiKY!k7%c(S=%dgphpVilPqSV_7GZ\Zk#=[+,de&+YH+0d&e+*\+el"8X<>C9<a3Ihhire.C,CHR#^o4sP2YBl@F\+97CP1Y!`c/+l'I9Pe?>97*S%p#XKp^=mV2]d<kG,h/NM]pgVB]5!O!lRR32&P]u:R_@G-,u\T2DR[TIHaQbABO!K2=-t<^3_`iV*GQ``#0g#6k)lM=eumb:%3o#X%\LWTLXc\<o1#[>^c]r-%fKZ`9huT@17II(UQFQDjfaY/YI+i&s<0NoYj/Y)5MfVk7*Iq^hqeH#X=,S]:A3ep,GQt.DnJ0I9Ci%ih%,pSm[S*3P'pR@`Hd8"[EBhc+TZA++;PnP7mEUYCV>gu'H4HVEDiGVa+Z6?M$)M-PRcl&K:J6Qj1D)SWG)>(F-2k)P$)d(TomJ`?6%fk?`))QY:9Wc[-Thna!.D*8ieDWI4P`R\"gZ&FC+j0;ba=6:C`nHI/lR@^>@CRB%tHQlG?^K*F<_gSDSK_bA-m^Iq`PHCu`ZmPAB%`3sR4Y.?nm4s:7rqL&P7IN'4dr?%0_)<[O%9XNT3[5H,p7UN$(Ml;9MB9@e5g%&@>>'Z'c>-i)boG69[_IHo;]Ztn&R8Ci5LZ"G^%B26#;9q-MM)-5sLlN%gjb/k-/cmu'0>!T-(ggB,T\XFS3kol1/h2jbMT2FkM=0LMpTk%X.FT),*.Gl50B)LBoc]?C:aER?G^\Q^'%VpFhXrq.i9bCBEer9<2#gNPkE5+M@fq88!"+!2n@q=<gqgP6="Ru`n;+3)p!fCoeohEF-[?,"%bs8;-?nfL*0I=1X*q&Pop?2h[3%\<A7`gtUrHrS%kWT:`iII/*HZ]@fZF^Z3W.dJ3l/H$9!+O$5+U51lWKV>IaMk3^UZXgNGph4It:9A=)nqn0:a[^OL;Pg@eMZS_VC%S"<o7[^L,BIe_m\_r[@B^k[]gqgn4ZO.RIW4OPcE529)*qrOG65<_8Y\pT#%JM?Tmc^3[KVn7.krq&1SoRY<jN8EDrhESdTl,26t%rqu$OdtbOo%s0#R;T<+J]6O)Jl-7-?QWL@D^\deNp[QRB#($=Eq;]rYGFrLmr;Ps>h<!,K;t/JC*I^5&Gk:mOkj%QI#Q"@?p[S7S%,Q3/tG6>!ds0p;b+)-mVT)\BLo&8Kp+7Gfrj.NQapNM\Y!IO,/a60_;qdKElGqAX+e+9KXL[RIP^B>2\O,n5:e'(%j^Uo!*]TU7D%;I\*^Y:lN)7c(fr6b7Yiia5C#"3'%ErfB>>Y6c$'S$tVr,m#fs):&9$5(3Ii:0.#[k7>m$;Vii\DZ5R+41kFim?k,@a*@4;qsg9@%2aee$eoRJ^l0dSa%?UT,9gAUPq=DWm,%m6D$]2T(5$nV-]XGYi(=`7Oi4iF:of(Ic2q$nOC%U60+6NNm[.o9\pqth1+69I]Zr.u1%^:ddCQA'Rp]Dk.gro$/3h;.[WO=`%GqX!e!TATTdpYk_mj5&lo@imnLHhcKbpNPZ.ZerO[@iP6YrUKV(5<h=/qYVGUQZ@P/g!o>3%pWmqhlIY3Kg`@h(4^I]`QR<4p:YO!;Ol-1'deVgVkkb5O+$MperhoK$s7)4&kF'oqcWC-rnlD9H3]K@3_1D_ApCD_l;9<N(*82>"%QVWqTs,(_u%YJU.L5gC0IpT;&^A?UGkh5YLR_<)-^>-*n)b0>#^3CA>kJ"sZYpgdomIT/opnM*.IJ<\Jb+F,d=?ULhDD3@/_]>ut%qW#dY:E4jTS54(l*oFX/rqjknV^FZMG5;-To:+)#6QWo]4anTs3kB8.o"1fT+7@G#I*\-Hr"/TdpUsni]cRd_]8iVpb?#48TC1!W%:WbEtX8bBpms]L@&'7]/a2(/diW"/0nla?8a+<+)%aI=0V9])14akfYptNj8j/`4NiVE*Bhn8jcq<[RQhE:i&@A&BNX8R#:h4O\u%&?1//rc\^:T76P1mAG_t]=78/rb"=(H+a%DE%YLXL\XaDrp*@pHMIL8_pa!<TWd8Oq!e(VId,E+K7TZpO1Pqks*E;3ICsoNpYhY$%f(8:`TmQb3DW#4%4^ih-Vg"d4I/`NnOGb3_:\f(dT>:GPJ%rUnZYgl1^]!Ztj.FYIs8;e.h/:!5hA+72CB'pd*P^\@hL5,n&@?qN%2E6-6eV?s#l/"1!^\iiVjaZFLYO@3d`u=JUNX%3sptjjQhu-%NM`K2>O&(t2(<CEN;r0`&r9gJVMa./FDhO+dL>ND+A>V.Qqu$)X%:3<-.ma$+G+1TWmJ%jm-^U"D+Z2Ks\IIk]jj,*[C:K.Y_m-jrDi@dY`rpS1gq:59?TDrs*q95I<]g'E^gB%1cr:/[aL];K<0%0Q&%cI;SRSH%pTFQ[T+JU]`XV@KZtU@mBh>AiR#Ba[Mk,.hfC9@/ub!99L%>q`["n&A1o%->)WG7e*%^7;fngg$t<:=#4Ld-..0bIQ&(%hM[gq.s,5]d7LZ*55:H-7-m.qSV8d'Ih>V>kC927`GuQ:O5k)F3fdSO*ns-MS]BD:g_f4)Q$?/)cNJ#"Q'r>i?&V#&o)(X6?fQCO%)#jS_CYQj:4*Q4`"H3>@2g#qrq=WDFSARe;9efZFL$q/93*m"%,p#Fe.&h=iL0PZ"o0l46+AtiRfDrP=]mrJN15U*MHg(kGTdh`r%*sCe#f&tjXC!k,B;JH%]>0H?.!-9dS>YqrSTEN5-bSQ+Jab-^l9&"=DMU)?_.<;V#?ocBXKT"ttP7@dVAb92Jkh=THVh;*(n[*t4%dXoC&ZOI`gB@MqrbU&=qo,(pTphiBq95P2Rk5O^oU<Vg]Sa.?#aC@5d-:8jCDF1M2e)C7%6;<k+eD6G;MJ#7cnmd@D.Lgdc[4.e`%-56TSiugdLV%GTg8$l_dlp8?g(:9t#<LD^?1VDt*r!"$l:ipX,6"rZ7@l*aRX&>C(J^Nq2(D!qW"3(^=5T*Z_E3co^@SUPt(,%*3%FKEpS+GMr!Vo[)J&]Cq42VJr3am*@C-``:7T</$Dn[\L+B#TIOI^ERqpg;+0:8clfbXr9W4g_nj(G0mU[_NiPB*)Pc!urXBb`tjk%9Uf$0@QL3:l;h)%7\e4/D6P5GH_nf`D9#YBV&WllnS-aF;c_hL;?`)?e,]]7f-*Fp'PL+$H""i3D6+TU#HOpm+3E9M'R6g.%u?cn%-S8>Ji<<AJAq5G2;A+'X,u%jm@kLW7As2OLpO9f@Pi<6)`%+H"`6F-nkeqKc7P_OmS7I!am)3P6Tttm,+Up/(:MFK[Z,=i]_T"ao%jG3)0cT:b>`K545L5,p/!c]<"KVKQ/K^9Kkk%G'FX1bE^\N(-[dP:2Oi,cY4QqTOGS]]sHScF#EHNqW!hInS0ahuq]\C6MK_BJs3%o9rSnj=^_sii+gm^q#c(H4+'1UogRIWk4D17P2GC]P(%BgltqU@fV.:f:%tW-q+/]69RtG;J*:Q0Xe9k&=pWDq.t<A&JLVgC0AOS%MC\@a3]&lAT9+H#_EqFb;Fi2GXbe<&$q&WT!CaA=8jd!D-T&4"b!Q[:[kMSD[mS"pRaOjXs4`q6rEi(Z?P+&\8\cuY'NX?Y.5'9H%R&%::G9Q!!*(9MP,l)md<5?hn&Is'W!)g_`h,Q(T*lC.s?!0-6]o!T:<s$C`YbR18/kY?cCbi#aH%IndB02u0;dn;LrV$"oN2kRV%Q;^Eq6cs\`i&^ebXX/%BSqeVJ-HDEh4;VD?=C3\OpMAoT!%&XFi_;)1YsXh$a;jr5oTTCm>TK!S&Zr`3QA6`58F/jVIVE't=)bY$%V^/L(NC*nuaNBRrr\#&4/!\GgheWR&qfV4l$sRr/PX1cZ=`cRFdZk3L?i7a.l[JSP_'d`ZCqhmiHaJ!.UPPn$%;jC[@[>u;=Ipmf%>13T`W#;fk)Wt4a$!'BN&I[=*1u5=?:>g6aA[Wt0hO$T/b\gOBXo3.N^0%b6o!pma<&=":XRhh&*\ueDf"G_fHgYfs3[C@c;L<sG%%nZPXfT-UBd\7^6heo:blT_6"Ta3ZA2$[%DCYAOVU@o@6(N`h9OTKD$_s5lj,7Je&j.b3^bO3jtTC-32YhAUQLAoh2E=>uA+krk=%8_8Y0FBeEUn!Y<Gd6THLTL!%G(LURK=f9@iFJ=-_m<N<\.EM*L?PS>5._a$*]J!(l8d$gWqGiS"q7m=J?uZ)Zc!r/tfVW;"dL:Z(%Usp2JIq;*R16\j!`:eYn^PX@8IF]3okC_I`4[cr4:]lp)5\=cBg-.O%rs#YIdRsgFSDn9cpB)qWCMIk^KSK>S1`9hDW(O!-FY?M&%]$eZ_=$"X8#(sEOnO8scO=*Y)A%YOLQ\Sf-#i.-d9jD?nGU8>l\YEq%G7V)%`-+BM^3)CA]?aVd"uPc"lt^8J/Vta=oq0tgRrYlP%^gp>aZW@rA@boXT>\lF9.17;25n-V8aDj?*FI2Nm\*DTVc38`fBR=W2$S<JdMC8o!Rqt@DEp@RQk,*gu;"sVc]CN)Q[?rN5O;T,2%bsN7naGfkPqfFEEN:&Egc`Ms&^'2]#8;pN[!/E[QWpB!M*/lZkO2s5`0sNicfD/((GD,7JQ=]9,hYS]S)kH3dN'8V?<K@.h><WRN%#^AJai<r2Z.qY&4/>O%MeN_m4KWq_bDH0MXg31@4M%+47\ThtlZ)L$@^%o#8TsKb"hR7:CTob_c07*6o;>16q5U1^;;d254/lEV#%[?e+p^/VA"Q`t(.*PSu'Bc;JbqGK/u=X'5)Pkl'Y93i61M=nF`XK'hu>,ma-#$/,P<1FhYL!6*mg4ce9N,F&k$0O;\%3(:gBK1op%g]Rq/oV\r]SL[g/p'^AEFUb!t[>];1Gf%+Z[R7W7[AF;E>O=(T?9:iO#/DTaO0F,H:.Hg\[.8Pfg!e4Td2iM=%n#_;K]N_3pd_Ug%UCcm[I[4sB;;c[@ADY@ukGC3a_.-s1e+HeJ8f$2-;6ZY#g3Y;)O`/m4_kLcpn+^)Z[dcJ\l,)c(dOe/G%Cp*fFupp1m+?FoC!3J(%ct:X)h!@]=/dOrOMNZA_Xs9;tIU`0_L5.mQPqs>pmBH="@X4jgH.oM1`Q03c?W`Db[EA_^\7Le\\]Nuu^>WHp1@/HG7sNa_oQ5#T%/@<iSW*+F3=pJ>7d;>_lBdKFn]Jp9(Taie]7CIaP+%j?O(A\ZQ4ljd>naIcPIjc3.;IhFc-4M#ZqpE,;fKil+QD34TcFlM-f3%R-%=RB7:/J33KaqU>6(WY2rgI.e^Wok]TW?VPYA1nZ>NV8Z3Vnq?#c7[7rU:)!j6h\oA>#jE_V](I5[PIW(R5c&+P4N8N!?HN!$AN@\%9_>sMBnQRJ/hH.LPH]@(Q;@`@q4]^,n<TNE"On#7=\\am'B6i]9f&d)&u1Oj[:W6Hpd:(IXiOS8"LYL&6q]k,$63+7q'!G!Z!+G+%+.JZqVl=9`8SKj@YO./=OK=M?o[<+#8GX3GmLn?9;rS;8kJ!8^Z%5[Z)J3[as'lCfKjgL5an(Me+%+Eb1FQVK7C>jO(Yq1j_M\0R%QCTmab:]lj>b5iY0"/$$cEsBZ6"%q?[q>MSP7-QH5qH_keJ<?Uf\ogL7;r5cN[&(c\S5E(V<pH8"MiKgWRF:t+1o.RIpgX?9_)D4%`lWg\"m'2PfosXtAR<D*4N-sP_Ao]9I^)\tK\#e._q`5K/B?e(aQ)'tUFaT@oY)md/=D#Y3J75,_G_@TC&=!NNX>-(357[>'IX5;%m=il[R!M&o*K%U!6+If3VqZJCqa6B_a?,F8bTTJ;jBY:1k/AoqZl/TWpN.ug-/qa)+3X<Z*T6h$5FhE<^\dp"J,UPM';t02IeRH<%XT(6@n8FNc&+fPo@J5.Khd&fB6IU(=cre5rJ8\6!IL)S$eg15X`#b1;rpRl,5FcgO#c6%J0-u+!!#s&#>6W#EfnG`h-hF!h>M^#N%EtSKNL</Y`S0$S<T@m*qg<KDf=1kmoJ"jAkOJDl3>`Ipp1A7Rth9_Wf3e<^3A9a6%I%H.?,HKnYo/&Mkb`RghoqIKXQBIbiLR^!n%.S'D@"uYP%pK)H5HB.^u62^$0e6PYZ2W"Ln*1,SbBnS$0:s:s+if,3VdKLRUe[El%Wk_N,Nkh"BXb.:?@jT-i2(<G/Yf1E)`]SBe%3Hfn4jXGF_8J/a9on@cOi>N^FRml**R^I!h5s#p<!'3(W_6j`S.Q&W/AS>Q[o5rT1FM]r8+HoQ].'UaN0fU;>bfbTW$cV%AO'`,+%%6!>V"um[UE=B(_R/&o.!ZP0!.+O*S5iss+N!$-4qL";l_*'NBP>3n<+`-RS!5QsC#LVY0ooju5WO`IBF'^qB"dIPgTbiJb*5(ho%Uk#nf<m3.*]V$cA6Co2/6e-l3H8!uME)T;Kn-]DSlEqpBN*)k+5X%@J)(ifUJFV#D-nr,fYQBLc0ERRPR2?>=XCR854+MYZC;raa%==LAE+6*"jYE;0loUoSPj<M"S5YikSS_Cs]@`2c7-Q@atNOa[7dGFY$EZe=h-T0$K`eK?#egMk!B6%is*t:j7#!V8SgL,iiB)@4J%j-,(Y+YSYV9$!L/dLDLjd.aB"^mjXl.#]d$08j#Q)'j#P.'6>P\a.t7RV)jmh9tY@<ZqT;F`7U;J^pjL-D&H?]RWc.:\B-e(sN`0%h((.=;('s@c6^9k4b-6\**3%p^`dA6:$kgG[5<qN_ti6kFC[bZ`>?`\ARIkC*DF!nO106Y2-1SB(nVsZMEm4p6qS+L%N$U_GHDmE%D1sQ6mNDVB;KQ`W4->Bu+r?oL,?d@jjG_NMFc^FmHC(a"Y:;iih,;4jK/O,d"Zp#!555;UVl@Y2-lXY-Xog%D!9M<iK4)(f6ioQ]%@Z2*:?qo(Bf=;fB$m@(_kU+pab5_r01uu"(JR(BV8M2!`eMm.(>3`B:%SRDU+TH=rLZU:TDadcb#dsC6krT/=eSWI-;=Qf"+[WWI%,/S%a8s@2^"#3sX$A2=n)maK0.ZI;!3gkHF-?S!tZ4]2i@B*+H:bCpR63ks]X/nFQ^qN-QA<C,=]V-7ud0U<80Y*Gm]F0T*3XOc_%,%:\r-Sa^g:3J>m>6?BiTihUH3!J%@TQmkGf'J,`V8/U`4lC*D#K0OCp'#::D6*SR]I_[1_!W4F##$lUQOlG1^7fE6hP1#WRe3!D%I(CW"?"l9i``,:RSYBa!._0jM@f3kr0`LLV6<#eh\J`r4<EIdI$T9khP3)MeD/H`5oiNrX:(Z51.gmJPX@MbnT^%2:5c'#Ui\1Fm%89L2^h^#:?1a>=,nk9oBifu`:]d$6BRb$V\?neb3'jmm-a1*l[\d2_1oeM-1k^gb3($4<'@A"kFgcAtCkCbKF//bs=R"IPM5K5Pr%/OJ)Z&jdGf@".DO\NS\jX[^+.XX74aBB7Q9he22&pc9E#R:3KQBAbrM"L-SbC;pgHeCCS/W2aO[Rr\lDk@Ok%[L%q#4\je5EVZaU%7SAZN2Ku1b4@oLOU'afQ%$_+hM[[gk4S6O]k6R$D_55i_J65HELIJPkTMdT=BK)?\A'8-3RVk(nG7U@BX3mto!tIj5Qo<^"i+n-l%hm=t^<sGo&<UVdbe@o`@`A_AMfrcmD^f$is&;^_*LJe:;oXn'i:t@md]/GXG:frL[cO$/*5p0.`a1G^l\=rgNg%E=3Lh`/NX>^i/%/#%1eZ-R)f2sWA61[ZQAML_dL8lI+K(qln69hZUCbQ'_''YDNFTk9b,5--a^eBhN3ei.0nIKDu><"t07^r_>C=.W6J0*O)<d)"WN%kgtZJ;2/91Z'Cc(!U+&q2i@"1)ZN'3*j)M!`aZZOBbF:d"H);_:iqdnlN;"o0f&M>\gmc$TL[X4LFZqda3*Yi6?V406b.pE5d;[?%VHb;8gdE?V*^R6B;Lnt1=RW=`>Woo*oRlq'3_@AG?-)5=ii4&.-^No#_()G(TMO1m)b[tTQpsX&MG6Hb%2tSoOO6gjr-g'#8V'VK%UIl#>NOm)s%NIN3Q:=mKR`2TYD^&*^*H:G8ba5i<9WXVn:@cL4_Yd05*=Q'+F>.,R(ULUqP(L5YJo)8kO0+k9TTg>ar(?M9M2FZg%`m^9>AKN[W$.)/_>aGraj=/gFA8Ot\:b-=b$Ck-,)$>,tPmH':@r2kIP6I>%/pW96!\dZB_5!ES'^.VhO5pm,d!80h%\oVYF>GgK%bi/o%bYZR1N8e@Z@#<OV4]]W;$5-AnDYUMoans0g8[\nD/g@?!+siDW4\jol0k5R5Gk%LO[<.&S!R*9+AnJMN&oRkl7o`%4FGc4r%lQN0Nm:FHnEXp5QI?M"sm;')&m"&b^c6VT3,,2Nr%'%YsC&@6sXfT4E!B&q[A5<Pd=:<"9<N8M*4tcU=I&U@P^Ud"p'&d`sR+^!Q%>SM71hO7hSYRuJTH#lkDF_qdgRF1dd@4.H@C[+pk^mM^,fjPE2'qqk1(LM^Rl+PXXi9OB5])n1uK1`?a;,/()6^?h$0M`&Dk)<b=%Wk\Z`7;3XOmmq.1qo"m][E+pbQmo%M[W#8jJU3$=1C(h/[IM6>,Klos_tDi]&=J*d6[FO9XhhWA@;OD"`,5teR_MD>Ja<UA6mbh=%Bnp=DP#BDB_\-Z*UMU,f5c%-93[!F5Q;boIMRHja:D-h30,sbRosu0[gfAJ01AsD9C-9"tdKDAT>A268909S%d#"nr:Q',.RP+?k%UU`mX)#jYj5A:\)Wi_g[$/FRbIX0r/Ru\s((R)9p.tgQsMC3#CN"JsQZ_YqKUg;t#b4Fi`BkuG)q?^=],U[Z%2H$G=_MRJV.(^D\%M)ZkV^mYgWiP^*1+BV/ap=TK4:BFQ+E<&W944,hc_aGTR&'7FRZOSgiL\9W#9p7UfaJ5Wf[ofOHA!#l3`F0%Y*AVFZ+q54OWXlS4%nsJI03tlM[)pE-,]to_TF_5]LNXe1YFQa^>-)D9R#U'jb3lmOOTY'(""NtaF40!%4F@*qD?9-9n;hhcYWahu)/6kWBmbom!f.7c$%D#@4)&#*sbj/mp2ZN^h;'mi+91W$U-'fNgXfL:[L\r)1XaJTlZi6=P.B5rcW&M"2tQjFKMQ9d0&)mfq_Q<1K^-cKUUI$f!4.X7t'%7Ytt"=Aeg!UV'FM#024hh^3N-[V_CNUR5D@ihHOfeqr"p6WGC:1k<-S`S`L!gsI/plH<,8i\e0I;$'uQeCK:o<Gu?ElqMO@dR'UZ%(dX(M=!k]oiM4S(#[L?\FEK^Q^M^W+&@4`ZAJPDZ8*dI7A1t#_aM+-L,;8A)2B2Q%mc=I[`iclp9Z@*&^Z7sYaqTKGikW1]K:)^*%gl:lPYS;U1&Zf3uf$8k5``Fb>APq<1>a,4)Tih'!pkh5_.1'6Apbh^':<"pK$g1#U(C1OkDW/"G(?`Nu1u7>+@.t"=P85/IlN)Q4%p#bqSX::nKh2]f;Zd/8l%3C'Vogb+^S&'>#iqP^Ke_t*BQiU>]"lmG!frbqU6TGMD>o.jZ;_XhmISWa,T6H$5dGUV>4gst"IeADC%'1*[>O@jU-HpAX8X9":"*XA>2$D\Ye-*dgUg8Cc-SO:(C+^(+hg4;W7V1ULSMUg3e<9eU>\VT"@^=t)Nb+e4a8a^H30at'GR92:'%O+8"cB);QKeAVD&g"V;U)8UE3"FUUP9Q)%r?r"Q]^6N.+P,=r,"8a4:K,H#u-'\t=?UTl1;2.//='1&37)8%=d($H7N="UcZ_MTA%Y[=`J<lV2O"XQn?(sm$c86&3kdr+ktP-fZ#bju\48=p=+9-R%c7k4USnM/eb-.C\4PFt0rljb$=Maf(q+or:R8A[Xq#V/[a)UST@%(j&)0WaBf$XQ7X"'H(\q^c0R*%Uc9%Gp.e+Kir\Y'-$gFYt8=_]ok@LDKTM%&>\#p+O6r@_]8$^1(KJc5-[8j[R@S*3>M_`)P$:;%CqPS)6rcV%Wk-`]BQ<Q`%P[)'kf-,U=YEFR8dGnoj1)(q's34GCS"jRc1eMs1L.g'VUP\c(8H+sEm!Ef;2Wl\0jqCSdm@S^!2J4j%aW%[GA\-+\/WImCZB4NB/BW?31C\3I-=IKtUrPD'00UhpQn/R[h59-7q!-Kq^-1mpp'uRTP%3D5]m6e<!S81%;Q\aX-O%=)]^`\G%AMoDK/EgIf7JMc!puMAt2MeB(8Y/ZuUaPLE9/:"Rr`6j;C!nF,!]G&6_$8_"dheq8aSXRt*-s/;fE5!LN'k&]K/p\9fM:$t#dQUi%,+G>IQ`0f&iW[7CZ8#LHKlD@@=.-.[mA:@9dE!#ca%6fKjd.54"pVD'-'Nq26hDY:W8RVgd88JC&g6dbh=Jd4a:JH'o45q8K>l"#%nba)u2VS6:J_E^;C8cut_TfrjEO+&*oP:b$J2L`X=E570=b0FFOR]t$PBoR@[Di*fqE#`g3%ms^eg)nP`DdDeFO?/=)2Q]ASRYBM%mq=J_>CG$B!i8IhLQ!@rC)ur&"85(kXST4b_f8\RjbIDFJ3i'L_h>g(e7p[SD!/&LU"M,\&>1i(VP)kBpPT\j?.]:M8O^jB#WRJ,%!I8bo/nU5Yf$1,qAFE3cbWlF?1S1)6OpOs$1n7'$((<OdiajF/*`@Xn"W_]+m:;.u0(VEK6m"jQQ'Q;O?d)$oSWfqXX"@'rDKQ$+%i"BfRdK*oe+EGeS-?CFs2T%B)[!KUi<XWVV3pk8uQUF.FUQN>e<CsJm<@eZg?nCA18nITgoDotb@_=@60<]gQK#6MNP-\@8e(7f1%P\_=83c["a;:.)HU>iHr"rPKOYd;l/qI:t#T-`<C(pasQ=@:!r*@D/,D6_E_"&glY0l%";=c?&LN.>Pc?7T4g(`su:B&<p!(N5hp%NqU"0'o&9F"JfK^a@OmH*<JtFPoV!q5qr72.k'4'(k*G\Am<X\.`<$T'#GfG#.4pTWojY_X]H-i+@$bHC)'>G?>NGP>BOCBpJ2@u%cF9MUNjOQe\SJLZ9k%NdYped<"sMP+E>QPp:I%=91mRrAM:NZ"fk\K=Ibpb[FT>E#1EAc)!aE[hN[8A*'pa2b#%Ym(fB7#lbS;O8%JeAX"EKuUmCu@F^g(Nel#h))A9lB:^$$#iOhC:QsR)*H-lZB#!CR-UEW>o!!>W=#:oL*64YQQ]:SZQQ=6"Y'+M1SrfedUj/.RP1!%`srVN`dMo^%P==U#Jj@TpB,3I[gGTHHa*VC;Ki9P5qR]sVg,#G&^GYD*BHFgKCfQ;'o>*7M_Q/'0*s%#9=G8RDOR(1?$OO:C-H2W%/lHqP7o65M35O>u!9al;d7)PFcD1&UZm1r`Ce+Aljk:BP3d?dl]VGt<H!XDcWFg]@[%+C(<k495.HjmQm/A88jp>FT)C37FH$(m$%?8/dRQE6He8N<<Y]kX!<19%r/JIZP;et*Q_TC[SbVc?,E1bj`81ShLESKtlbfgR26CE"iA94dMl;uIbPm8htq^5nFEMn6V'7eK]m%84q6X:>/#l?@2(Tpf?:LF2`!QG+H8SHKg!tNk)FT[D>>Pe560;]u[YiStsPgr:[@U>?st_S#5Z4#+DjYb?7Z'_.F^^HlrGQ$lt\o%q*Co>O-n/:$Bf7eg)O*'F\%h>/YJE54j7^k=-[aaEQ0I<]%-Q:).AM@lGsjhp%X:`*,BrU"DW68<K9tC`Lg_p*t4`MaXK0FdhS2H%Th!G=J9T82$'jheR/)i^QpeE#mQu4QqXmdkWCEDgUq?bKpmo]WFuY^I>T<l9iW<+*d@+*M;%PV/a!D80#H_Wu'Xk(Q,8KW@b9Lnm%:eheWVeZn@Ho=%t]"/R^(b5(tq&%I;HnMreCi%Z^V$$;:8PD"Zc/(5/6nf?c'>[$nLSjMN_3RP*Il+\f+j#js8.cn[S#G/B=i)cX%588e2U.:;c-jcHEaHb#e%Uda"j`H&M0gUSR6ZPPV6hf8s$E/KEecI&1'u[a2YL4k9jQe-emGb!)LBA?oWN`]W[".=".(=L$W6]!W%mR[gU4?cT8X.SHD#T&+rnufAC`5[d7@1uOURquhI;>`ihdjYT:WQ2MNp.R$cJKDm0XXKie:[rDRWk4gPYa(DgD0.HKds??*)_Nhb%LK9Y>%EOeqFV?hf!S+-%>8Ojd'rL>"eUY],Pi?@%83ZfoDGt4n!-:_>a9d'[/Cn(VKJrt=6E5p3\&WK7Th3fG26<\LUnEi[I_T#5%<W)u57Rs4E%%X=Dib2L.3XD$%&A3g>0)o_$7^]7+>;1Sd5:S;>$jp2iY1<nG#a(Z>7[V_t*u(A`-1/iq'JZX?)eTe[C2NN`1#Ha*%KIi6=H0IVY2-B'UMLIla%FnD,nuuq7_;,dREm0&DWs\4GlrNs2Y*foEm*.S15bKHs;f./TSaW\&&mUPrOrrc\YZM8VB^nU-G]pZ9%mHBk3+HBGm#K*)*d.K71a1uLX;g0/_d?9Q*8I*.RXql(2!@,AtZ>$GZ+JsSAV"\h&ao]8;m1+PIJ`h(l_/u_s"pUq9)^o2#;*l@.%,f!ga!shaj=drH,W[E_#H-D5I*s]-MXhK.TiX4ec9F]ZSdU[N#84u",V>UrB^+^P&+]pNnY%tR"!d8)tcF@0$X(EZHH6E68[hO!o%7:FI;Z-7ckdHp!eJfJl=F`G-1:,2htdIjrtNR&Ih2&oAM/[-HZo*2GR$#S8^dD<UA7!c)C+Hspb.D\:1HJ%b$>"BWGd_,'RlPHN5%%ITZsSd>Oe\6t[W8=K'k+TslP$em(+psjC/5iPP/*7@,*Z\)lJQE9jmVhB0QdSOUFM;1!7l9/(\&L4NMGlm/D?>L&RcpeQ.b0n[,%P$XfLK'EHNp[%es+0cP'Ef]4W<hfhV,GNfn%`,H_-&n@<?&7W_`tY7bL*4NLUk?2D-B2&GNH2/PTZ\k$P`TiIX73IW!*,VCDo1.H%Ft:k\DqQs:>&fgCFBcV&"ONi5qTKf,>d$L66bAn's0JXq[Y,<p%)G3P^=BQ)%(,t<>*oDM*G8+)igLUcR+l4p:a70;dsk"ubL+q#%4Tad4E.CZG\tmr0S3reQ+e^p&j']Pj3nAmG`eRtj3$[Rf2/aYEVjR\tR;05GF5T(nH>hV,\\`VtC-);VRchZ9#O>?S[b-mCc'!o_%$Z'E.2^Qd&gduI`N,AWnmiiZC)ISfVfDIA1`<fIf01eG[=@FJ@O>:IHiIJb<8[32"`OeJXT&sZRb7'Gk#92ckS=)r71fOJcnW#.C%<&c%</ssOK9=,6aFc/NMSfqB?IIOV/OWqWLfDW:GDH3>&e]o]N.gO[<MPm6tP"(KX.6U]5P@2t%iF)R8/<u)0IoZ&I;[3pkWg]31%8G0F!bc,i"YTsIOAmH_["6P4Udpo&);>KDq3e1Qa8kPfXq*^:&[]BC5jA;'r8gJOUL$1s&;Tl'm1ugh-<CWq(&S7-H#W;RaWiAeT%\]d][=)LmChImt$$>$tVIUnrPe4HhKeS(O'!FnQ5O<sB/(okohm5!5f9W.Sf(NCY&C2T')C"o&26tWr%:_8j*]/Y5neji=+SO=;<%\2fVMq3hfL1tG-MGt_.YAh[,F_c_E+6n[).CrY]`Hk@rtFdbC^)-b.D3g@XY0?&?QoAM#G3&rDV)qDfu9:I\]9q^\V^dE<rcpD"t%o(#m$NUnP.I.Fj/Ng$&O*#Uc!!L-=t+'.'pX1pp5[!suH/@AR>\U(uC7pu/]1!]0mS+67<`5:f?i-9jsb?HP@<C*SW8?g!3=T5l7%$.JN`<AQ.EIU"qAA!S$Dg^aBK_R_"*(%WBn+<ktK1G1ZIq@&o<$0n/sSTcBoMKBL]LqoS5+:#@napsD8"XBcnTgAntlHU,N_:hc!%4#Cb-.o=WnQFL?WPMnH*"-E*V)5no:#`&Qs=`hPs*IoqaAQSCs(%"t%*_K#CI<NtUd\=.6R1#>AcmmABbgJOWoS.^ckF=TK[(6e*%Cm*b-j!&WoD7$^oih!\\n0$L;i.0P%CK@+*V`$/QOVM6El=FX_;^9V+]q+4XVKWSJe]243)qFONaI8MpQ`bZ-(d`,c>JJJ=*Ds3N%.dg1GpPi'gJq/[#,p?[\f80eZPb;/O<9qnk[qPF\0%XhZ^LGSZ/h_iJ7+7ECQ55j"V:'5f3bbQH:DI@P_C!5S<LQLDH:jQU2U^iF%Tu&DkD=th2!HDd'_\5UqL15h;W,NM'V1pBblbG)a.P6l1C2(88S]7LMbtX1o?-:E*9`peLYcYj^$Ojhj9Z!WE'oY98Cn<>tQ5p7X%;ED+j"[mkd6='i](X[S!/c;j`14-[V:<uYa&fF+$3,m93H.Y1:Qn)+5V/(%MQP$>'i"@M\1#:T@F(Fo`\J]HYH3lcoNJEE_,-o/j%N4]9kB>j[A*<`Fc-0G^3<L3X'3EI'M4N*3?.J#5A<K,#/lPQ4M,f@J)@K_D&eR!hRUF%8dF#csM83t7X<WZ&R+p*#5B>W["Z+<.&%ee4<;2'Edr?X`(=j%>f?k95RJPt%lp61K8iLUj-j?sE="(HRpG@d#kt3g_3BfO#f7HD[>Ys1+@?'f!Km7PtZ2,SM`&;C"t'Sd3).%.!_iS8-,Uull^UQQOf>od(2P84t4jkER?O`W(_iCIob.38Wrj<g.Y.7BgA8.,3=L(=kR%057t[pJV36hC]NR`#kOc`ED>@[S1l-@%g^<BO<:TCQ#+8)##m=1`"5buKjj`4]$T@CP+JsE!ccUPk3MkHS=9R-Hq+fsH4bldo3]Orgj^L8hlB*%3/ilrAL=[uME"$#R!:inI%Vkaq3)RRX[e>UZF1`CgB?,YG`";3DUFRP$tF'Fcc)98-^R'DhZpWVfU1Xdf%`@'MgVCZ2J10oL2]JALu+p4,1ARYNEb\.k%ka&BX%Wt8E22]3?,E(rEE@:*Z30T1]n3iJ?dSl,$<J2lAU:a_pdl,?@i:peMhSp@RlW/-+^?7AD"H$qNZSh2aX/oaQUC7*:X!a!iDeb5dO%(<X=r0N`VL<+Z=NW\uKm>2(L7`B9,O2EJY$Y55Fr7Z<.X9nfYmWb%k6^hd.tF=3EK_(XH3oWXF!>7MK_[7]\&\*ZbVn_!jRg?iM*%;aMnEBW<C""HUZH)LqbD[41[_'?]5GE1kP:n/h$:_uc4W."i)KCV"m_*<trI,B'5C"&>[BG.:SBZgqp(Ndq`r=L)Y4f:[gdl*dqm%"@i'MN.]`A]pVI&Pnm>8Cp8N^UI@4OB?A?H+4MJaq(m^_m;s\rfJ-+b(92B):`O0mQBY@us4?6CJ$Ge.2ORtp5^d)H:=0A][@_<T%AP=/cedE%%ncrU'4aR4enQ&C4Es3np*OqrFS?+^<Lr61NQR/Hs1>AL?*B9d2A@aHhl\K(m2mo("R[8][h6:e3<r)*dWLiM'YML@f%clP6s@1d@6AY8S=34q5&Y-^GPKsA6UoXQ4!Hr:;bo8p]`$9(8(0c.EtDTLYKW4u)!L$u\FbPf@g0IA8C'4=FJ&0a!DJWDd[BH*pD%Jd^XH(B8_&)XpS*<B"WbC3"?/14E!f_pM0uWasTQZIs<7]p[c6gJQb@bI&50l;K5MCeum>Uu-#Aj.I(mM=e&;%1__S^4*dL`A//"%A5j$HA!u9"/S0=;+2E%Y77#^T\N+JenR$`T%s\oOXa4md1;l#LZWpACXrj',1Y,EnNFfXZJSZ*1I9a-Y\5Z%=`fh.:pZ[uY\+'#m%)P(.QEXK(MO`kLEZr=20%&(XAIrDUWHK=?j,Sr'.IBUShVts!\V\;:HH'J^b(V!VEU*kgn(2n9A`*BqY@<:u6p'8jK4%8pG]:WXj%jlJseK\0k(\\rU5L1Ke=H$ko-RYkEBa?eXT2CfB'\_pXF:Z,X*`/VmKW"OQUb0Zjl;":ll)_kbG!dG4cTgUfncF"eD6LX%jS<FD&%ZkR4\YIlD5<N-b00?]rGFSGS,o'90HA;<$%+OMECh@i((k`_jZIb6=6nU_iVp*IWsU[SuPq_d<.3F.;L7ih!1UODusH(!%tkQK+'%:PAm%^adG9<:3W+5nZcT8[7QH@r50X?i2BQ^!G_86FM\pSJNkU#,t]_"N:8<&X3d`$1aFk.9YCZGK&><IYea*2oZ0tk8p(]D+2;O%@:+?ZepaZ0#nGV)+TpCPS*RDuQ+9&)E>9#9qd?EWU#g4Q62,jLeUN8XIP&8U(Q)@?%de>Gli<>[BRpg$-3,olc+l$.OIA(%G,b]X%.2jPI?8?[Qan?[6B7&T5<R4*PEE8BqPm,C`J'?9Kc6CPlT]Zefk-1?D=5_iF*=BN/YaZ0trJjBQT,jXAXQ*\+%N"J>Z7dB`(knm?%5$\8%.&W!-0V9RJFi;^WnP.LRroI>%Mts0+\u%qp$+m-;-u_j>aS)L3Cj"_se)N!?FI?TF%bb`T1)a"[SD>NderV<cF'2qJEhu<Q%h@92T96oZ;T043)A]E5DK/t"OktLjCpNEM,GQT%)p&/j5^D82lS.rNlMS)P%kBp196^ZB&(2G*J;W=44f-M8+dlKS@OldB*$G=t>%UN"3#G.OI5U.BdNaI6IR.bdeP<'\RC08Dudh>*AB-&O[o'l?1klRuj\qb?[(N*2hC?s%IOhEkoa$J_ljd[*&?2B+EIJi&A@`ncXJ%qNl78B5(XZ+O5@?`I&n'XV)"KZLr)M!g%aql"P=sL*h<oX+KNRqf]Z"p$ER$K0?V,SK5E_R:u3+0+EbVVrQh%!\3\M!C>GKlJk,f%ZaWVeiskUsk'CG\*pqUDl2G]9TYqWqcE0#^1Zg+)5^^#`A^3[0Bu,nmg1U,aZa<JQ&[iClO8qO<-q,b+B6M_P[E\!oiki8XfD-n-%jACpIZrlU$l<N?LY,ih4-7S-&d`_n7m/j<p!a'k%G'WsD)qWGgiTWb!2o9JQ:2K!^qOuIZ[?DVr=K\6e9>=_04dUV=TlmYu%SPOr%%(5\qm+lu9WVNg:Pdqu6EI*<8rA#OnF5ih1lKs"fLL/:OJ),8K(Z4)C(NAOlgcH-o>u)Jt$On(RbFYrPOsI6.8E(8,jF-9T,MMid%%Z46WLf($"Hr1p#!]hcDV%^on+j$G-2Bt(N<UZ0K&GJ,H^S73HF,PI4C^IfFhBNVT'!16BD.l#CS]\1D>ka-_O*,@qn9QUIkRq%k%l::WE2_ao^dYU6[MFn#TUC8(N"AI"EH]qI23l(bsY`X)WI8XEjZR+#IV6j!d5qmgKSG9si;?hY"P^FlYUO%%YNh^nLUL5[o9..K9%=ae1B9FV3(BJDB"9^6/TUGV%C1GBU2,Fj[#E,e=3,DmU9g*\$ZiQ>ap!]_dSW$oqlPgoK*#8og]CZ&#'*H8i])!2uWI>JCTZKss@%^(UWrq63kbp@Ng@0oi`i_.GdaPt*nQWO./]PWr9&Q^2F%Y_N@c-PjW9:F&/Jls<=EegFeN4c]0!^Qj`p?2Iq%"S1>fh.-G3^e8"p%4%C9*ccm#n51tqJG5IhW[)HD3#)A`/LrUM*UL1*K=t2)D$JTYFC%4!j='%"S,gAVr.k*lc-i,:I.;=VQmL0B8:sP:NEb7Ht--A`o%aTZ]2AP5JBj"ad'Ujo^s,NkoNU(:r*04-E8`u1uPmW''8'#i(M`\4'ee!-;P:n4Z8l9,b6m0YraXsP-:TKoS&CmGg/8do%^]K;(%%Z1E8X0ZG%!K?K$Yk^CP+,2(_IK`\e4K0t5NRd*OZ3C_rMaPKG#O5f1iZ1P6]^@i*OI,-h_`>k!Ea]GgLWb9A&ZC6rnadfTVotL08%ousaK5pS_0d[G_8Ti<%1bQsR[6I6I(TXcXW<$`\Q6,>K3^f&A`V[R>M\SX[n%e=OpU0"D>1umu6>JtAJMK<,VlPW]GdmKCd[el.,%J>YK<8d@$hYkdTA)sS(-a//P-(&J?\j_h@OM$PV@N_jtZmGim\>f,<;K*kBE'0l^+\I=6r%u1H(LUe,>=Vps_JLqJXe:Q^+KO)I3%.1mt;:Me(:NfGOULcW<.L=@>bT$CXT:5<:p0Cl9l%_(]ig!=L!_p*\H-Os;%+nI]<qj4b4nRgKl][N^u>9E-]0Kp-(7j<CVD#=-q%D#.hsE,!&>PIa8ij]'M^1l>&P1)tW:KC@r2+Jhs`o=AYZYsPP]6,1ok@*3Mn)*,S!6)5_\foh<e>#B=OUcQJtQ3\\F:%b`Qg"jS&%8_aE*DaN--1/EeWA5R-U2@p4mT'N7Ys)(H7(>PZarEQ$,kXA[Ob/!E[Oa7/"09=U.mU4SO4<4\?dC)F<0@s#n_1grlKI/.#/J46[%.K?-LH*g7`m%nfdifT_)oc8ke'd5b5;iqt9,qZ0!lk1;L?W+:Vb$krOM!UjR7p0FVGfLPA1gG5i<clleP@.o;WgC0J"`\OahRo?H%<sqssGo.kp9_h8r/HJ"3pO!:gpb)qt)A#_\oG0;8m1<5QHLlH.#]WVA-X",/dgXsL8OIEo`l^"_^"q8F_.:=jpZl9jR>L=:S]piO%jo(ce5`UUFG"@Q>KSr6t'@^KsLWaYH@(XP[$t9]C\3i1ZG-X(EfYNk5gcPf\m2'!-<V.?S7d2PYBk0Ba=Of8Q=pYO##<StU,m:V&%_)f\$"laXnSlh&PHG9QbO,&)ZeZ=gj,=L'R@C%==8t'#P:#6C:]<g%OTQhb&0+PsOmB!^JB4?diBP/nTfSKl&ZrpP$-+VW`50UP8%@)"g3r":IF?A6=_K4,cq?oM6Ld[^pZ'"JL.m#W32j8FRkEPo&ogA"t[`6(r%b"L,q!QK^)kMGcVERENQMXqIKbnQ`9NHd1K1Ff0\%(efI^/[8A@K[s"(i,l21)JJ!B#LTi00c^f(A=f1f$1VO%Vn;#/1[R*Wp$l/!)@)o\(TB&Qc:b4^OQLC3hPuC9=4FB.X:;!Se`"$S%6Rmk#QQ=I5g?;P=V>;T;%Pi>lm?ANl;'k,,?(eGEn*QHSNU0u*ST$9aH*d6#JH?Fs`BcXU%<.E`/=(0;^AY2rV>9H;dGB>3XHD&3%Tf(AP24K0[V;M@j8/:'qV@R=VaJ5iWig`ug4O"SFI_RjJjQ&as^ql\lHDhq'O&d6@ZZOkMIVpi9KI:S[^u8VQdHU>oG^oPKOej=e%//en@d\)NDW&Q<[g8q4`nLZW0,aF,%'kK,H#V78>36IbRgS&h_V/4b>1qR]PXVEO)?*Xjj@>fc/>4IEKX#+f-;;2.`:TcHho.op>%8Xsdun^`)ZQSFr&?(m[((6spM<SpOfFZJ"9jiUhF/($"Bcdqsrp)*g-Vu(qC:M2=hjX'P9;/I\>[lsho^nLed^she)=5rC+)!_h$%r$!!1ai`D1]srqa^YX$>?V(qE2/>U^M.6Sl2j9b-AZ)0<iD2$>bI+)*oLcI,V;t%(*W^G>Wk?=(_1,)OP)(QT7Tuj,mQ@r,M?^u[%&cm-N+N8u6[jB;:7`oJ(nGJEC5Rq)a+QAhA3i:aA%eEGXKDPr.]GP=gF"Bso]5uQaNJ&KIbq;g?-f3bt'.ei<-n1n!Ctjo*O/1e2%i@95c\\6oYb8&8t\hG_RLrMH&>"$[<Sik;ed.-\L,3"m3j\71V6K/]hMB0$$]:/GmE"9jD'WasVQi@\m:6:@Kq[!MA4o6+7IE:#I%O9']R6'=ZqRc:F8$>g;2bS@T03EZ!($Ckc7$EDWpfQ1UXlOukn'qrXYh9dif`OdTlW5n`jHU/!a:i\kG5e5m4b(g\kp*Wg\D[3pN%VJLkY#X)>lnS]&Qd3DT8X*^=2r<mq]Sr^BPNWbIWM1f[.plJgkp7cfd,2J?e?_G<54BV=GIr;G1@eamoIYNXFpt[*+I"@1sEnhIU%o*`2/O>@mGO@.1dAQg,mK&S4'j,dT$>XCU7:U)-RIOHtHPGEG-7tauu2H;>$)*m"a70>d6kj,ahL9M)S46o?qZ$tb.ZZ+M?i1ngU%h['!b2'"XTID+ofN<CNf`GD:R$!WoE$j@4I9sj(c">WPT#[?LE%cm$,lWP_S+r>XiC?YqLKR`4uQ[L:El$-bk6?=u^_r8?eeY?g'%$ZVf`^qO!:TQ7PC@usqP<BT%mBg\`oXb%,uW`DEFl9i[%?n/ifUc8a1T?>I85lApm_^tfK%V9+Cg^0e:\]UgaPDEPeAaZcEBGUr,%aiu;b;"C!LG@mr^IlQC?pJ)@%PcK$XIQt^QVm.6f73.&4?3hCY"5S?c>4d0O$lYSp.UKu:pVTGiW?&<2'&EY!3oXO/Ap8Ys@u,s`%/C+\3H*ldj"EI1.40lc>:3\"Ni1>uNF5-lcr3_EiCoar`(2EApAQkfC,c$%]7;k##XT&BCCQPDZKDF"<17s^Z/QAC>%^VDn8/\3H%XECHZJMp>K^*F+&mOOPPitE4E'(=.SAqAJ>E]>3O1J(linQ+?M.A$PB)aJKt%-I)ik=<ec(^lcYLV<<0ed*;\4gT6J6">!gig)8^%BeVI3:Jd.QZOGhJcH!h_on=&`<*kZr3DOd49iDDel/`>Pa2f/+S#S]P@]GctEACnJ2su$aF4@M.,docM3`DI,WlJUH?^An570S^b%enpR1+CN8&NQ:(Nop&d^>RF3Bql37,61!;J4_5t,Hf.=tpILA'NQqC2lgO@Zm@E6cl/%Q^7?S'YKjj2am.<fTSWchJOCkj]XK^-&%FHaY?p[BK?K\P9#EMu`^s%m`2Y28qCY0,^\)M9=FRZV@;<8aBsTgM&1ipc]rY8#rSh-7!QhCTuh@dAXSGH3@B.3l+H[VBr^kjqLk%e,ep4UpVKDAU;mT6\[E.Mm%]H<t^Y5F#4&".ASQAGL?nJ_R,pu%b+Z*ZeJD63jn+NOY$FH-/]%KS7V>:8*XjUh6,>flI]*l<iC[1%d\>fiE28uZPp)5VUXSV:Z0S7."JhQ-P&3$a^:$^5j<tEJZid5X`0-G;aH&\A$Rg6TKM;bAL6_",#jHlp@kqJKYjm0^f-Ihirnh,a%R;@81GG-[E&n-?"\L9SfAVFm<A__T#4`E-eDtj<f>[GThj":9EG/-oqQFl5!g1:s4\Ssf97H.NXH*1-D)l\JVDI`1_9bA*TeV@J>%glWt<c^>>R[caKu36d!B@Zgbf-IXGf1\/ZcJX*CG4VM,lC$[h.2)@(Cj=269&=?EaV[b8!Km&H6Z3G\O<JK&rr``R0)XJ/>cV:;@%7A`m1J!Y97;DhLNH3UO=8KB&mO^'/UhpKVTqGX4s5*WnT,0H&Yi00fOA52$WHGt!-Q=nqr$6,UF!(SW>"qL0[6l1uLMop(Ak\_1@%VdQoUjgsD=(SmhKG*L>i%m`ca^llCJGZ9u*ZIY,1F[Y2&;J_P=5XdYtc]GuqA2!#CG#]9BoIeoJc;'$pAQ2Vkoc=Go=1+h1TTWa*%(b8m\NamDt%'\P`I/=ksmRF?oiE'1h<k?F)H8#0Ilh2M$;.MNkhkTn?mV+ku_;jPYHm.A+S6pe2WpLq\PL3L,L8kS1E@/7eQ'1Qb%e<Q60<lR%]^k7`E<-1kLb8kO"&J@4sY+d.EY+iMAgngSj"bt=ur-5XN=&'f*>Z^>r*a5[N1AR^11Kg"R[7*OT1qr^$QlY0jj0j?!%%Oq1PGUpL%VdLni3X7!A8?+$`d^F`_-c=u30<^%f+U_KrfEq.-ZDMi2,i?O]+_*e1puKo:N+]W:5G"[FHDLeVa%LeOUEs8B0,Lfm%gskMEh%WC=>DWCCoVQqK.GQ?cDkL/dXThBHVA$Ir,c.(pUq=]=4qD&0gHPaFTZFV`9K1U9UYF9Yb!]X?^`bs7bt]P[e@up7A>Se"%\7iEpi8lR>Sq>DmRN]h)&=tMER!Tf$,GD0J`W&CI-6QI?O%8;T$"=F>DpVePNBKP6\+QQ2YIL1YWA!dJT+>u,"`[;m>b9%gDDJU>%-1^,r?l@^0,Z!Vj*pLJ#CcNkE,nY+S;=5lR_*Z"&U&Z`!,-$'I%Q*:-kX0JFT5i%*n^qXoO.W'F\=q*Y=Krm=*0iZ%gp$?DmCe^X%&d$S;.Rkf'+q=s=2.:nUQTYK\fQlE;?#ST9k=-'uQUNj\lX[^AO[6S7>)nt19h5s@?PCXsJ:io.].?;aD*g:f45'D:nue"RmQFpm%E.3TC`=1QWmMP+nmh3R(fnkD2JQ(gCnQKk#,FRUg0"`Mp>&XV,A<%H[h'sNdSShA,,S[:SmHe"\g:SIS;-cGeVCNG:KGqud6TK/;%2/C4]g?bIJVA^O.`SThg]`XWi,sF]tE8tn'Pp^9Y\1oMU="C^S6^,+qI5^NYXEq"0TL\6J&,^df$?B6*S`1bS2m6<B&[7r[T6G=L%$?]0,jg24)LXrkSSa^(:+F2724hr6^<97pQ@D2dN*=Vh2#?Kn8$5ik6CYID^"WQ-2[pIK5c-mG-'cP7`AX%<B%6c!18CFXcpVN!&%\[1)Bj-*b42-.3//ZSmNGU>5*)5HUtZAGJ'Wu!2W$rY2-h"JUOUP`E>mr>OWSqKm6r2?)59A+Gc.'_OV)6C<?r-5XNf-56630@MS%?):F%2s"i-4%c^?M:+Y$&"b0l?U00c&?+rJ3!HA:(VX6eN(72;!-70,>ne%7FNR!X<7di%[#)hCTVSij;oFDO"6kPcD)gUd?FhoK%=7X!pFM"JUE=?9g)Wr%QHt/[bbk@$9rel14IsC_Umci]T\b@&XJe]j9)r1lhjX9ad<c0<hjQ:LL6Q&du8NtQ*hep6+1sn'r2k@S]%?93A0U\p2K,)4(R="UoOMFp=;,rdm"Ph81n.t]>Uf!su.KHXSN7p=:pc2j^(V&XSc0\9'/0\LaBn1\'u^^?&sJ;(?o#3LTZP?dq'%;"cm)._$$sOd?6W0,Vcqj*=UElgW;lf^$e<iu:EciQHn4:=dlW,sulaYcpV%C+!8WT$1@=7U@IBG+Rc\46\[[DYWoO3Z>uQ=?D%<%)1>dflIF"AU^YgLj[)mk>4BKICrjQgj4B,"o-&cE*adDS<6L]Gd<-LqUFXT!=.kmWOetVGPC^C4AKg\lb5pap6d^'rV_5at]oY],%444LuQ1K>C5pkoZ_4<,@!S6\H<t;MBE,5LX<\JoO#.%*X_1BB)XATI^7pG5fPB9E+6)GBm*%Z`#2YCP.$.*lCcc0%PfCK(QJmt8"%EhQUld/Q3V`^p;f_5oQO.QC9O7KI]S)8XDA`A"jjQ@YPT_8&@0<JT<XQWTmCM]ZgObkd_9JlsN)=X6YTI*PQ=FJr(5V/`29:Ve"T%f.Ib,4GUlP!5cli+Q&L05h?YR7Oi?([[HjGXb+5VlcL%,na_bh>C\#aXM>HZICfbJo]m0c[l\aD8CKO$YeX.W#san\Vso-8Wu-^]%@m"qJ6U]gs;A:8N1BkkDOF_f..QXM"J:i=?39Orb@*mmTnp\X6Ym8sBGWZAFHB=<3[gFa0@kNBi=B-Y_V@0Ub_b6ftEWL?oYYj,_%*"7cTE"/9;V"0DFUK9+De_<mIJKk[GK4@`r:^/'2kH6`l.@6t7Uk3I9GiVin$=uh/@$&p5>opgYMX73(Y6L1b(7@;,CJ<,s!HP;,%"qI+D]V?1tUC9!/(+LK#@,4H`>0+\2J<o2^HZq'm@OkXdh3<!?Y`*BLlX5'=ReMiQ'YUK"\H]`9I9A/$fEdr>RWA]fbo,_n)mYf8%k(.),K#tenLQ_lIMWJ+]"mE9i6'G$^i1tLeGrH7GN@l?Aa=ipgD+P=U-L9CNS\i%LUtF;#j->P&(g(og8]Dmg2Ddj*nPiIiOnU=T%D=HL%!=i[%K=Z-Diu-U(/fhk$*;>c46ukeJK3i\EjHT32,cl[-=%qF2:`2`B%b=]MLqB<a-A;LMlBO9?h#P_@?mCaPXP-qD\gM)E%Z$$-CY$9jh3G-/OD[H[Z;m.XY_3(_!$@FHWW/T'OH#^_FKdN&[[Z%ZU58W`n4@[-6cH3]%<Rc!':IG@@C)qm"&/;]?p*'o;"'#jt%><*JF5gHK3=VHKQa)oGUQ[u[RFA+BJ9+G@iF6oS,=Bsnqm"+D7"k&)_<BE`LBi2Zn["H2B`N91Tcm\De!W&rTCUDC]g-HFQ,:Vt8%"u+GiAAq=VE3FM[Qs*PIag6DIrgAt5I4$or^uV&,["7KL?.X_RnHOPNbK5FS4#j]EJI]=[M8o)Q9=f&40?#tcb!,(D9qcoSB;MW`%+Fm0`\[1M)_kl(W.">bPap<A]#>p0i?2E,,JeK+XdEq8WA'6W/Pl"aMfJT3P?hLE!dM=q]?n70j^+YW>R2K+4<M84G.fH6gqk#OW%U9f!t2N#</)iMdS^qa8F$)VKbV"-$[i0.gkUs3WZa[fh?3BALjl:kL&P*QSM;iP"GR/s+1\V*NKQ@YjIJNKD(LOQ$$>*Q+WYm:d+%[=kXV.a1qSO9k2Rith:/X49al[/b>HW1SX[7GXq`du^qYVEku+\H3OL`lb$>\T,I,!6u4`!b9#HY=3,k_)_/i[a;(`/JYoBZ?@fO%XTP36'Tdc4B[FscT(bQs"Cj[O&IO&X:7@46k<c2bPCfQe-n"c?$#jjAU?WrOZiIcN3i10E'r'E#X<J'8AO$O*(1)2_/GUmu#'TBa%mLq,_duO'YW$Ceppo1BL2)r-A*<!2Af9Ip0c>8Y2n-uf./MY=4'c(85*9gk(90PZf-'3cF&U_(=8IdJMD.Z6]oG!GiCWBn'W*5hf%P8[\Jg2/*BXL8l36mAaX>>8VTII;7cEJ#9qT2s]ua)?JU-ie.@jX4=lVRRubC5ls?%-c2+e@Fn^'om8AoncO6*OM>QDI0k1$*=1i%Elfo<$-:L;^`6$0Bd)-aHLqQ)XQ4+$>r<cM8D9>Fh0,rEhJ<<<YVAaB="IKgA?+l,W"=h=@MK'oVlsr1\.2LeJB1p_W\hibD%$iH%-k<8@UiUfa2Ii^oZaKq+WF24^('1uMQ0XbG=JTmX[#=/#NZ@!I5O9[LQ#J,g+JEa&&gGsVH;ppH")Xk8Zic\iMDQ4*^n#cSaLr2Y%EK3pGcj@^)*]\l+CVsOOG@3'>-]Bb+*$%o)H5RRmk#QJTBtmZNm?M"5DHR)ZHGm%V>.d:E6Yln9/%CaTB;=>q0NA*K0T-B+@?n"\%e1cNfDMU&%(3L"OP_F(THp76]`H"t[p$C3GGD[AXb:to[d:W\M>^WV(#Htr(Rp,5?VI1DQ,1R1UMHA(;Z?#._@6#bA6+OQ?Ya@?(%BoN,8;;`Z59W\JYW%K7!-R]uuX$g@O9Rsf<SXPd:B&(27U>Tq[-M!@(4liY7&NYR4T$_=ncl"g^;0jPU!Zf&sf;732!el7<-fu("%dVC\2h>HWTB5h]J5U]Q%h3L"Oo0XJt3R4.*7D'@2$B?hj=T"Koj9+QRCfTS`1Rk)d+VkWL,C3:-E!77=@Dr@K.7GQnF-/qId0$n?%#BK'71gg?1-UpIc3n[":\C[,P;8:(J9bHYiJ>a^sPLLKOqWq2kY.>1\eEA;Cmol>b]n`32e$KP/Y,efIY\^'Bk;mk#Wj'*Tl$uF#%bT,mc%f[o,,E#S(#8-_>[$ZEE-j0s[VbobM&<od8'0W[gW2NmE$ZL*A06g>k#Uh/J!Vp!@dD1ukW)SB8QDPOG:C<se3ij>T;rtZO%+Nk2lR#XD>Wq;D'e/;XTko[=fY%16s<Eml]L-Q;XJXC+NG-c9ebjA"T5#Ia4>\qZ"ni=NgSc3Hrf@2.c8!iS.U:*$']G"ZbV\Uef%_Y*,Q??%;#i7OBr@hC]9DO9u5ks/bdX#LP/YU`<[-fT(.+OpHVC)>_nUSY(@$n$iP:;BtsQWA7FaV<7"6dC9[C]rZ`6NdAoC>[M6%,b#boBHW'+D%ZQg.dF['""G(f/VejoZ.^D/DP#K+\,,ST"u2?5lej<>"uc.kO`Ns9(0+MYcqb:"7';fd@MS3n%a^oK)D8,K#e/bJ%]bg`rMXW`uVNeh5d6VX[g-+UW$m97N7>L/L<7Y*JdG`&KF_fp2\.SJ0FQ!>g$h?(Z:tM3k^3#h_<XdP+*>>F&$lh!mpr8KVQXrPi%.O7Pco?$OTS">%-E?`$-nUW)E(Q<)j'`nLi`eYKhMfq@`VBQ?ZUn!b6$g!^gdoHo40`!50X()W2UE--c-P+-TM8Z?2*W8%VFd"Ol%DKR+\ce8Q#3(VeTD\WjYV>?cZJUu5@-#tj6^'*6(ndfoE?m8MroiSMN6\AJtG"&hO#03&!iTkS*Zq@&bP>0T61/\<<F/K?4kn4r?%&4dUV%Elu3;H4:.mM5$&]PNaG`k[gZJ^ts5ANtc\L?;+fVijfV5qoQX-j[WHbe>a<!m1BgD;eE4Pk6H0YS_q#+P3=9EY(o+ATnml%Vdam+J@ToWE1g2g#^@Oq[0JPGj]57;,g8j<jPpBtV?uMmTq78<"`Wb_lS+?8JNHI;NJ\mnID%-CEH"BuC8b'-9=,5@qoV3\KP^#(%WG(:+nIQkW[>7mM!1^\Cj%AkHfa=/J/DpT[%U**p:F+>lC=IX(&M8@0C1.Tk6E_tnXX@5GMnVYG0banlb4'j^F1al(K4fhB\1le!%10i(@^5if*$*PPmC1&iB9^kqPZ8ns/c?F3E0IY4aQ4QK1SeS8<0hGn*#XCX1Hst*`4JWVjn6rfkTTj\'&KDrjrIH.7n5XHK!<KcL%'FZ'2+4&+G)HE'<_7*0l/W+^873+YBoDMG$\3fF#A!O\6OtS7o:d-lC:/agr_uUjADChfL>J,\n49Petgs*U.gmo/E#$FKbD"ih>%(/4a)QUqW!Kb4n%;%sf=,o#PFFANBX(cW,@9<:uGXe>[[<Ye>7$t2M?Eq$`)[\K]d<mSR]>E[*%RmMWo$kkD!ZRN19N(MXU<E!Es%\a4FK?%HI-1'.m/+c]+1dq9\)l%lh]Qm15cSGlkjnlK3dU]Z=_Uk8`BS5TYM9rDt$ib-,>V@;NQ0VAVp(Wg6bRL(]O\=.hi+NKZp%khPBX^;tGSC%mLq7>h!f<mJFG!?CfuR#(si_Fj$^WiAaFhF^b)TX(%r5EK0;'G#aIVbhT*`#'@OX?DP4C9ir0[<SR++Y'[pb8+rm%d;;)`GNAOk4R[,l;59!%(/]?*;?Ia<6HZBDTS)7!7Z1`_QQ[DCiFgPcMhf?C6V&q9#;%.*eBR'\]V:uSMC"X,<InQ+</jj]o%e$1%&;.K=^49BT77tN],Y*\@eD(Z>*Kgrs[FFmJf=Km8r!F-,l+5eh*%PXZV'9<fqd!p\3lhb5!,s".3L(L>Z6-FJIHa:Y[i>AmAhI_b%1haob<8.0Q[r"ouQlXG'R$4@paC1D_5]t?8!ZLHLTFc,=AAB8!V@2m$AR*o5G*`%5"^6EfG'fCXkCT'$-)/US?C%oS3e5QX,ZEuA%pm;g35nW^Oc3UhToCD&2$^.f<Mq1LD6%Tu`a.;!hmm5C<L`g@5ceaf`_&B_(PDjl\8\%"P7!kgUq-rl8<WdqCR4idh%7F(;W5<qu%7[2D:!IA:-nG/Sim3&:#e<7,A5'g?4]h2JEd0QmlBFoK#PP8HP;o^6^&L2U>i_1KKke8IL]Au6qD%7$..%:]']\56!N1j8-1Slt*%(od\c/Nj5XCD;83MMEP+*NFPA&cF='r\4IiJd>?\(54eRFGGD3_]iL-Ygf'm?o>ZcP_J8aS>!9V[YC16FAn7Y0`fL^c8k,'nqF(R%e2.q0(TDBU6g@I53mI5?[QkopGkG(i(dp:(8EF>;3_^bUlMr!CCc?SnGUE&Js.bna;]IW_7kM\9f8F<Weo,7&X8A*`HIb(*!!_tS%oAp!Z>K5<-#K'm?!`$>6)1c=MKoAc"mlIH_iUCH`=)\>"P9@YK4(iak&?N3?+U4@%A;X8]Ut>r0'p6_\Luh+YTo$$d9;>'t:&K^S%]&8AeO[E!?>BHQc',fXP*[*fD\shDSAJCnG(.rsRP,[NecnY#I]E3bqXc$>C?/q42.*Y6'K,t](Eg&Tofll3sYZ/m?6=>e4BqgZm%2J828-6ZkID@)]HW%ZHIAp)#?M,ACQd?4YiN>9s:/s>3^N>+^$VFj]*TU*-,0J'E<J<^!clcA1n]/K&LU`H(+B/a*WU&&",)LkX=%C]op8:bh[GDljsHOqPkl't\SdfM#>)5j,j=jA=;:Dl)J*,]TFVk!Ud*4&_oCWeU`>aFJi03XK&*/)D?AI;Ai]etecb6j%pgA&G\E%d4E\hWQ'm`^*t*Q7K]3BAIh/iUKaTjW>e+VE_<la^b-(F)>WD)7f`'il1UY8"MYf2#:7k2Kq`LH>MiUCd8iISn4(I1F#LJ+KYhGh%8lEeN8]ZNmZ4lh5+.mp;Ar!fT`X3GYN6'i@kNoctbT]'3:WcsJcH8abbf+1LO<DM5gOsJA^mlhbK_SBH<P95k/kFI.U8b*@<_"/f%Q]ZiT7n3k!>\aSsi),Yk'psPtNdi%/!:u3d;U-6_GuA<uij[3BT%tk5-:en^q=_$'9\Wcf]Sg"o8\mU6[(Ab918ScM(1/M;L3$H%%OB`5X#V]e64m6]9Hi",>e5&Wc(t`XL+H/T8#FYhKK#nG)&M43&\dDI4@`kX6IGcEq75Y_14%h03?E(j#^kis4p//r^,M/OLQ"?$D%EM/,cX*RM,AAhU7RTn<6Rc]_f:p"St:n5YM^naG+'>\pq*I,],VdpEKm\q'm1sLD[TH5*s&$&4K)\o`g`.b@.-&I\WWAoWl\,fX&%<R[WcTdH@mG!p!)eWOV.VkT)-2<rYVoW(BrTVUY"-o&D/om&./,f$4fYfkEYFJ-0]b;pmV.oP5^k1^H/<GPaW?47(C`lM:1S0rH#%^ieD5]SIba1t%"FR(<Bo)l]=C6V;k?.%RP_<=tG>8OR*^Xrh2P9!@OFUAP\p'CX"U)A@LsN"WF32G6A1(BPg^BKA?YnL?;LA2j?5%R=NXT*2ah*3A^H5aHCKn&G_]A5mL7R!B?3r%_B'%PuQ[8+s7S\'P<\.L^MQ;BN.]J>uF/ERcTZX$#lTJVp6_e`Pp;9%/-,K6KT#0%LC&dTPnWLmbEC_N<E1WXXA;H,?Ba*D0]uXD]@>1g_^W=gjOQ;qpe31Y$0]Bbq;=I>,L!NnRO%u;p^0hs/HQ]SY[gT5V?B@2MX..L%.d@7D#gDnPW[d-Sc?u=FW]NKdWDj9Q6._5dlO41nP_m,!)`!o33\7UVP'XW_!mn'[XH9kaQ@?k57nW]X8VnT*7-kDbHse?(!uhA0%X)rZRXZES`qkRU[RRQ/1mcY':RXo4`clVj("3?f4Ma)?lS@G]D=l/3g/$MXg#P2k"9buT,YAC'jo;GD9.X`1MW<<VJnP.gR277]Q%#:3N64+L>reB^ZNk8WP0Tkq`"LK:oTNRD;&B"J2f9R\b$a.Xm:.g0Z'r_bD0c.J.76GQP7B<a+fS+s5HXb)29>_DTJ!igXq'39kj%"2E=`)WRPi8o?_34%1geRI'HTG+i(#g_.Y?SY_iQ?':EdCqCrc]`\??1KVQ7`Ba%IP&22,FF>p:1LH'l_6@*saY/Md1T]6+D9Qg"%)0Tic0^umqk$ed;LLp<i<t7f/S1]g-#*l%6!sW9Z+<nR=XgC>nhBEZ76t)9,"ijSB@E[r4TGli"D4A,5;G_@*^ma1X:Jm\GXKY^T%C<0sm<ATiF*Xj#oBa;?r[io`?X/amI-<JQuI+D^L\RIc,`7X8CY:NQ@-NuF6,6;hFdLW@q)2n][K7Aq<Ej#**l0]J>>d\E(D_=/R%'\h1%P<-IH1JiOkH,5TR6?OdN^u@Hfd>461d`_s7'jK6fN6)]m>>^M84ui0OEDhkRl$0_FA:?C1-HMK'T8fr]T[O=;,i3K^JF)PP%igYJ?ZCo>801)FNbW0`:2%)p<LHs=pl*s-6GLMD\NiQ)[KGcOms)a&@>=_*0ZKQtK`<h,C0@>oG!(2N%TFF.R*Q?gM/QuP\LjN-/%V<1staUJEs!=]*G.#g9L/9u90WPanE49oC^Zc#*628P''#Y\`F8@L4Y@'1mqFlVTe0+FVU^b5o,)P(#.V4TS,EIdT--Ilp*2C^<l%(Dj=03(0/@=tiW'c;5ph>:5d#2@)0@ZkZ_7Hc#s,1.d$,C,FgdJI_=20Y?6g<Ka)<lGm^^=Nt*JR[PfKoYp/^aG^XR+ZEYI`V?q[%[-2dcLNE"h"kDs-c8Z(A$Cp1j[jeDYGeYp4bu,`eRu.aqXBKLFcULE48%FLo75>45&kB1r:CjpY$"uJ1ABNjT=1?/*!0;eo8@h)b%iS$-OK\@24E_bXk@-eeWm1*".Qn?+Jf<F$3XD8m<I(k,p`@r-7j)6N'5\YIKE[7S?=36mf^h3]/9u5gh*grd.#WCu&CD8!Ld\4UR%F6[]R%B,lnU:@7=cr:oW:N&b:\;`Rm%c.mLnST@\/e.VT>eg=r.aAMA@4"iiH=.kf[_r<=Ut^#E/lhBr3CcPtgC"n=Yf&J17^=Y+%^mI5GGAjlrS=N3:Va4<`.\aih&C.d:+a=D(&K#PcM-kd[L$Sp5VU;h5H"XMp`hJj\7r63_m0J3Mo*)M0I0gP0j&)+FQu=G1LrFZ7%!g2@W[1KN^HI7WU0O*66kBUEM#?nfmK/g*J@RdeFT,N3L@1g*"1>>:&;rR):^=H#B/Z@m=aM;Ilf0g[C6Eo?h:s#H/p/!L`qkK_s%/1^PrEqaI`[OfUAfGCW=fImFS_i(OA<SL<t,kNpcA=,'C%!_k!#]N[l5hY)Q]/(ZU]6eX\X`FuM]`F<>YaMP)NOi_5jX%d_XP@TG%<E1Adgeu!U[*"3!$b,X%f[IlX5_Jb[0J8e-iA&O$92ct'5$lR*M\'6rbej**46HQ#gVs/N[Vk3j_93BR_G8T'1,QW0`4Y#RcLKJ$%Kb`o#PR]S0=T%`#-PjDb%4@FT?,MrpE#0F5/`IerE!&H`,?=@P)aG!kM*7PbXffSHqM5>^L&cc![/WpEB`3/TJc@S1SUL15Na_F/%n79*`MWOQ%J//$1rYflgIl_2&mm/D_M&1f/]Y@9^;o,0<b@%#2eg](EDJ06Ph9NWF+tgl"V_Xe3n3$^J?SlU'(lC:0F4(//iiF*<%QiE71;9:@Ha>G+.Wa5<DcHk[^s+3g#j(i.qQ'VN";66e)NeDO(Z(+eEPp.CLhM>Ln3Qh.)d"T1ZV?'Pg?J1!3)+JZDf,Q`4-SWNi%+goE'!^@\te5."ShLU`_B3!V:m^kp6/>4c#`>(?1mH`4$M2];,D[fN3FY.@=C5UHX(,\c4/<O?QGs9esf<Yb4IMhcOVGo]$*nmU)%ZfZ5%Rqn[4JrVr!776MGhur-Zag5#KW^(!QGb\E3e8[L#fTu9OTWj!Y&Q?P/?[>),(hU1DJIICr/l7GEE&WJAK!CptH:Ac3@*20K%CTJi*?-,^)ktSWXDDH=YOKJ3>6(1EPD$kESZkaAfNbEu0E"akZqROH4a[-)`r9`,2>E_(Fp?-K2rV=m6Dlai1nD_uj_aiVk[PXPV%;gb\m?,JRL?Hid4*7GPnM`MN^LNZG@Mn=q_1*T4O>Q.,kc$9/HFD<-RQ4(/9O<V@YJ%m(--G1gJa&[Kl[7I^<#(&C2>i$[Rg3-:k%,-Z)<ZJ@*0b=d1AccCC:o(Ha)TpQ"sAJpU2k8*1Lar-BZDdLba27rGr)]6tT8saEr=PO^H_$LbVD+/#kl@DS-\+$(o\"G_3&K\J)%XcIEt,#?9BQ_#EH#GpdE*kBnbFA.BP=h-mn=QS%Lk1#WJd\"l=<h?:s0R2BgS[uH?2ct6:29Xl`M.X^J<.,.ld=l[7h1reNQ-"O`%$CBh_.i-"Rc>cSSq>@W7DR_aP^Xc#;q[+AT(G?N)R*E:cDs!m<+_IE:,"`sElTWfRNJQ?8BrNR\`9eX/6/X93Kg*$lT<C.AAX<h$%$8bts%p=-S4TH`t,I;+Q^[r+:Oi"ErU0;\J'Qg#k5:5f33qc?UDDR@f^\,N%?LiNdDN@b(1C9Em_F-p##D,``@5D,h2C=''X3L1"%.GbiZ.ekrr5>&St>LTnaH%8(6\Z]h#qP#/".1$tpDDZ7kVRt*3/i?FoA7af$]_"qAZLXIB%WN^9jk2kaZ#a^@fU967gnN,'kr%>Y%DUWN4dM[[KOf=t<CiOBHXf"nT'9h"p(WDuMj^Q7YpsdoH/L^[OVac]\l^UosfZ'n*=P\jJk3K#+f5/Iqd"#;fM/F3C0UK*<4jW<_%q<Q@/V%T)Ha&CJ]%3r^&kZSKDDOJ"J^Y]u-lW!uK`@0IW`>uLp->$hrIG7_K:`(T;iK=4^GZ66`OTZ>m#_*?QWj`>1p>1F3HchtB%&/E^1=56-5Drutk:`9,=]h.fQ!Veip$TaSO`-b82AM@)\S_ne`E@gM,`LeAICrSkCM5fnCZQ*ZWB!MTU69G.Rb_A`f8rh=cZWX$r%GD5DFf0<_!AWDpl3#4=84%gh:hS26t*5D6*[o/6G$b3*o4>5DlZNm(R3NOMJKN(N.r;V.^>DKA7Suj@cMlMB'l+"&*'0+3TV1U!T%RfuS%(V3Bl*+23QPKohU3T4"O'k?QMMS4,iGT<F6eGV,EipjKI%<kKj#N800@Hg-T\W'JMWq%BjV\)oq9[gag!\=*V18Yu"G2VT:%o%2#@PhmiG*</0,GqH<YrH/N]8lKc;NOWH9m?DPUDG*rH[RdIl^G#MeS7,:O47Ei?WU'4^JnTU'g/EXNrt(L7[)L%*$hn6cAgmND%;:g-$X6S))MH]op4_sd5**pJ*^fkn(6?Ojj`#gATcmWGsE?[2t5<#;)kGb]NhX9n^"sBB5K/3jicQcFJj18'*CLj-N3%?BFN?#(H%VLEm3oPn[[dloq\;U*Ege]GJT+hfkOf#nhPfgICUMrHU+oGtD.9uMhX).YGDKNh<g".I*FZgh6[Q0lWUg7+3<J+(3DQiMH4>;<!m%f)o",l*+?P]3bL!&o[?JS\SAk-\OCr<bZ@<3g)Y7e6_/2A2CkR^I9:!Km]iV4*KCl/5b;l3@2)5WlsdSm5H@6H<b;1LYV\ZMILPF%@o!;b[nBL$P.)9G90HI,l%-F3A2m^;12.Ob\>>&cNl$8BRKXD/ibKd208sgFs7M^%[K"54M&29LZ2jB@i5m((dSRc(^s([^_$]?:%m(`K^flfVE'Ye[NI/Z\Mnc*kPq_"qB,l==g!L=nca:cu'[-#5s62/gl)a8qi6m)c`JEsZp4#+[aeHt9rkeY<34J5pAiJl)_q"FHs%2`s.XS=S,V-Ya,R;_BAm[V+)8;BdCW<hBRjTa&1qdX1t:MN#tf"]n).@hUmgLA1REB]'EMp1Amu(ZTMohCS3?I$*+5n=BRXEU(8/%+P/jjDQl3FOdk4uo=B"4)I?#^,?%*=Xpb-Ci5V?]pe*CEDOg=-b;'cu=p;<o;8(9.eUpF;n(U6[rcl%%O/r"eV&sp#j8O=p02-%0%q^VOBo@.JD.l_2O^LhU$WckQ`p0i+Qo2CVWVn\U@!WF>dQ7o,o4j6l4-CR7q[+F\M^GTVKV`HuKC/mJ)rH7>0`eiR1,A)Eo!./&g%M'&&QEO"D;N5nZb\D;&oM\YGs+5,O9cfl5`fOf1sUhR:-,ZX"r9HG/iG)Rf4B`Z)E087X45F2b4Baeg94nfr)?$9&fT8$,"0@!i,%%F43Bb>\[gOZ,<m+6XbJrdH?lI1rg;eQ;5P%>IY=.WDOtKK]KOi3i_sWGfE1H!e8<K9,p&EG+00$u7oKQ9B-,bM5\Z5Kr`JK"P6u%KZ"72E;"P*:[iRs)q2@bo)`'t'ldbsiuS?Ne`)YT1g($G?p*$(<S9-WbRO%,#Un3fP76aSm=qi+>6W?5Qf:$KetiUPd>W7^[m_h7%EGg`9XnI,=k@(DSm`DC*CTD"5h,YuFZfU"j4O2a:=frKK.nBaQALDVk$_;;G6HpL;%mONmJF]3u9iUR(>]Kt[IN9VD;PjY@HMu9)%W4b$u@SDO(&Xq4m'JKElP(T:VF[U.Kpi/5Tn!f(qp3/`=Mo/E51;(rMj)hu(=fdOd@V*e7[C0KE[WY>\b9ruq2H^%@qX"CljL*OY%WI8$)Vq&A^ledEdh2HI+M5gcM/t*V)kBaDlXkMFMSWBscCHCXaMa?2$Wri3N-6-"iW4ULgTp-i/IP9TaI.>qUXhPs%/,A9SiXt\0%SVN6_"r[,NEc##=&;Fsm*"p]=obb=<,TpoG]o8LKNSV.#YMV7+']*TU->]1ulTmOSiQIJ,>^`-VLP^I^PSZFW2YJdA52F?(ba6f$%#_OrEB<a7j8kX.b@;2*AVR1CBAI14?@.V*[>@ls6B;iG+]Q)e\V"`GWVDKS0ZhcZ]Dq=2n>p":+D8pIjnnmqSVg5*FZ1Gq_;@Sea%YqgnLVPe"(mG^U:/anckKNnd\REJQ.pkpr9Q>;fX[fu<YCTA=J3qa\W\=L8:j0cY2KaH6-^5.inrFTh-DPP5]GFRKZWI12a0:E$m%gm(Y!a4Tp_(j%GC%_%b(Tr;PE]&*lrQST5Tn6bdEP[-CKD1nLEjKf>;DWd@[;lHP`i;N?'/?2WeQ'B.T$p3nYpfnpG+_'8Zr6n<>%geL!AlQYsM^^tBfi)o="G'VkFD`6S7L4.k2[jAZ>b.#J+chYIH5:t!HjYQL=H68Vr#_C4L*Y8%NQGKhb<dg!O&UA&;0HPB,^TO@6%2uFFArpX8E'3*hdr_oc7Y;;0)D_:VIjLOGS/PXGrrg+*?\`pc)?-Bms33t=S4C$c[T#Zia]HnZ.mu+#i)l)!J@6P`FmV.P;n?D?/%@WhO8J)-=[?[C]c\<m)OC%HA,/M;9c&^-r?7B\d+ddZ._,V_IY0;5O#''>e#XXJ5%[T[-:QQ?iO040(l&5V=t>gJ?+\/uc9cGM7r%CusF@jHY.\MT8;81VngIJKn\n2cCA`h/,:;[B"X25:+e^oCb.n>CibqD=u-V5;'t9Z99aY(sSA<ft>WeJML-KnOB-:63PQ`@ne(]%E:_hb+sa=1KFTXXpV'T/XK3-()Hak:D(uG874P"NX58pG2n2%d!jJ$c_;@/3rI$PlCVbQ?K]hmqe1(oD*I$UA/U_bO<sk@94U]>J%*U=!S`L_NYj*p4NS$BUDpZ!5VcK<<oX(/bB'&@Iu=qH`bqBKd5aP1ML&:"e]%$Ks4=0KX7]m7jL09G.X(j$g&,0pD<E>Rm3Z>6]A%RC/Aijq&Jn:L&.WSLR:%cp]F(X(4hKfQn_`KY-7+3][3'a,e:&;o]rGqR.\fe+%nDmdkdpX&h+Q53f<nDeJ9R/oU?a;/a^%PT_&N%L!qD^ZVS6U1[qn"Sm1a`=b.-9q/g:bDZVfQ0&/!;l$_dSA%,*P'Ff]=mCRB")9R3?YN!Eb_Z-j7n.>!Lc4c@VdOO)(<8r]+J(uI`%]BX,Xhad>3j6c%PkNOn&+.NsV&9j0%g#<he^HcKIQSLR"aU1W`bY?QQ7O:Y#fOAD>;Q]\c9;FPbO$P]8ig6*q,^J/IQ%l^b6_eWn%1-/fS36?*!0u6k.6?DN[jDeF,f`mficeR:o/Fj-1:DY2a_hFl\-#R?CbL(:d!1K8OApN66%pSO<,i8k+p#GEb4\k10WODk!*=t;O%0n,(ZdX576>/L^5]3jYH*.>fYpPJO][jZ^R[rf\NC1bMF>.KALrXCB#d\UR!6r0;6?[Y@``][cVIMqSq/*e/i_E?liD?dh@jhFH-%&[W%$E>Kf,kM>,^DNfkSoX+:o7e1DH?U*Dm`LC"WS7-b&08\phFjL+!K(OaqNU>u`Ron^u@t]eVFALH<l.@T:JNX&I*<5oA)S9b=%(b8SI68:H*]\cp`)Q:hgLP-UacrS'Q)c!/4CQ<kV'n0@*PaLQIQ/>g(a3F+`D=0J:9]Xs\^4*_cL;sUIT%eu63<(gJ"Cdj33+Eu<%0MbmXkRW+kF`%-gp+c#:4Qm!BJmGl*`P4LHO"9b-AG=%Po6?ETbb$'X@e&,S8PX(`&@4+>k#;ks['qCVV9r66IQ"tbF=^o<Jh58u%c>,4A\=X%qM8l;hil,[L-A5n*n[@ITi4uu!pXMAaL).<!mA)!R$5i-?WE0mK389ET#ERLaB"_L6I_u10_mYUjr;#As3r(b*a.Y^m%e!gYlR=',#0GF@&\(aS8d'PXC`oj><eBTu%q:5Z&lI1-o)TfHq^k<W&QYTScdB^KFj(I9bh[/u<6H>Vd('^@N7TFs`gUug&nb#KG%@M^94GS_:d7&@YkA]Z_"TZtkBBHc9"n+4TSV1.87\*8-!F`/W&3a8dgnpTLST6^93aT/aVWWY$JM,doFo&jJqUaIlr?!*8j7VeF[%K3=:]isV"oQp3CL8A4K76npTR?9"T7E&l/GUYTRYk!B5b]E:_=I9>D$AVjjN<q(+.he\4K*V<sE^!,oF/,;@P?U*CBhOA5.=cs<@%W!<M9lN*ukT+n3b'AZ4^9jnnPd^ME2_f\j:jNY%GLuuf^L3Ain)JC)F/*lD9P5E==hG.G0rn=<WE^r/eU'Vk)NF!F9hb7^V)O(0$%X[E\;4!7"9h^sodl<t30Xk\9T^OEg9k2V+W:S%`aGp?N73Z8jtVt:e/UXRUT4KT0/6'uFnd6N<$]N[ff4uGQp#EB6FD8X@69?A$q%\UF6<)&'dC6XLk:n_s70FJNbGH84F?atJI(l/JiBNG^'JrO)oHcP<Ee,4S,cVM!u$E\uY)o^g,Xomb[E:V5n,rn`G0p#GEr4jE/Z%WOIP)5CBn_oKJ6ea(-h',D)#S]VX+o\O?UC\C.V=iWeQbbl$_L?ntKO`'&93YA?8CjO#(A_@L]lHLD=(F5b[2->2?-Q_BN!f8UR]%.Vj\hB<2XHf1RJJebbV]ga/$Yl!a%7rHfXDf8oZ)nN()sB"!8Ob<MM=3"<Xk3eSeHdg^X`HQ^M:qW&\=<_\>'_oegD$rdf9p7BPn%fC-uPj%;G:fu*Z@rHk>.gLJ.*m_0a\H+bP$s*)DB/cQ88T?X>r#7n0agK_D\=L,87MgVX#RG3Feg^%>L4liGciG1;#-<u>=;p<j.%F6:?q:fRU(Fb3=97<.ecT00Vhpp\R:Hd.It2gBEAGoE%Z5(u)4C-UECF-YoB9n/1m"/%8,/6@!*QbSh]^.h,kF7I0nbt<#$XK5*K%:6H6%$aX/(IQYkSKEIemol9ic/Cidd5&Pn;q0L;D^/(;)IQ_NVbBVEjS>.$55j%;ME],[OeMR2Sg,H70M#`kW.1I34?3T\p.W*#N%!b"G?<*O;U6HE+Q$WE'8^XI%sjjAQ_Q)E_j>j9:7nRhg69\@UNI@E;ml'g&@Vk+h3GiKERCE>Z)J%7jBe,O<1Q'HcAEs4nm%%<1)%-Ok1h(,tJjOOh"IFl/6#8_oW=6<g`8+e=@F63#H@q`fQmY):/Y/,6@"Dt_/>4nPu5DR94TU#0K.>b:]CH^a*OML<b_1e,o25V4e1%?Bbuj)W=1XMr,:qEpV*)Gj]A(e8BgEKT`Qpq+l5!mF/h[T*pEl0FDB"nk3MO<797RioE!VLH8Ji:u@]Gei(j<Z']0fT<()u:Os@Y%N%Xbc08+2@!F#&[:.[oLpk"\W(\E?Kk\4[`pgFh"m+-r_I<0;@9Sbg/pW7cRju5qB_^KnOlq15pA>P!=La\`*),`u,eJ8TJccI^f%<j"9B[/"tC^m^XS(1plKkeSqKDKjXJ\P(`Sk4tE_b?K9sA%]YUpTEMl3jXP3f@cHq%$2B&bi&?.0Ca70`T%GSg1h/1o&ehY)5DSX%&+f<NF)PZ9Ql2k4!e\mZjYF?0P`0Otm]f8<<dU/@^B8)m`HhqLWu,qK8nS_oKK42/VOje<%l`D?]gQ8Pc9=@5QES[*4DZUH^qha+%m#sPZUY3a\87s_4]AC&>!,DJGAU`8ED`5pYUE*+tg\AL3]Uau$=aMsBG3=">F\eW^E#(R91YRVgNlm,[?(';H,Ol9#Fpp/aU<pDh%1&1W`L*'LWESV\e3"5asB[;QL+)fY?mMGZA=mo&C<gX/r"KYTI1274T\n5$n!%;Pj);a,f:gqIdjK50+Q/PS=[TTgI*e0^7Di['[%ojU>HJ)Q<gjB@gZ^9,o&4$V/h\C1UjI)9/U]rd8PGUZI=PWUO<#eN&>:gnIh.'FO0Y)&^/)GJ.dNd(DLjtn6BZi%<S[i,"4fmB1M%QhbqbU@2$)":^6_n28'*'<WShaOjK8Cl%''/%X(r3MR@`,CZ;1a0#pNgP.Np#aq6!/t^N*8f640p0s>#i',P\5CR6BSlY;oTcZ54%]C#2F?T0Y4D<g3DDPaD(`*=='&+?q6`=?MUWF3NgS1<cE)HMn<#K*Oq)MRgpRqj4iM"Z-IKY@ju*YH=r=IU\.N<5(?+V!@ln0CqS%7<Le[-Bkh>?C++/`t`u(lSn_#boV2`D7AcC\[cWW.]6P:8pP)IJRDW"6_u?*i:5:P[_$Eo^G5_Fn4&[AcXOJond=.4W`Z_tg/<`!%hc$V')V:-Z1jttDrU09\\BX&;4fmq<*UpRC*r"3%_Hui!mplConSXeek4:e2+*=.Cmj752:%\S*8QQ[rnGK2Vn;5"e(uoR@gLb0B%V-;hB24(j3fdY##Par)p1CM/aq$A50ieZS+,3l\qb`+@=I!8gEO+r"l(`N'n0jdlLlldR)TT,3r2jf3GhZ'aS/B?7fo9e4DH$E(!%dN:[ppPRJ;_nLHPJIfBcC>.O!rq5=-/3V;A]=ICGkJhD8"_VI2ASR4Pkk$\7V8=8@NX>NaQ(LnCO@'O6U<WE!C'm)I3ghe^CD0R;%<-Y&u[?BFU_:>#qdI,a0&n^BLXPK/%YnSt/?r?/^R;+V:0E&dHH*a2NpYOl?^('Jqa4k<QS?Or9gU45T;E>S+']r/-K*;H"'OmFt%o.']:?m/8,M(j_()%I<M4@[H-1URa/n8>X?=8)*3r/^kpT:Wg3<lai'/Mi.@W2&)I5'_s6\j,$"e\1G1,<pjIJKbPB&t?.\&uoWP%M>uMh!==kk?JtIgI+pQID+C?Kg%kA<ihN\IUSguFB)oC??ZUP%%(jU'G,(e=J<?/>2V?@</;';*Bu,VPOQ&E8S4:md-:_9bMQ\-A%&u'N>0Od7Lc\Q7k`R:&e&=*s.m;]R'4hP,&Li4lXcu&T@c>Q'anp.g@lc^YR!h9oi=,onV]DE$3:AWk.c#fr-H(;"7Fru)#^:3j!%4jLmUq0JLak>cb1YNM1!g]NVDV9QB8mq?]_S'j63K,4*)*G[ASST9@+5jO=o2C"D)WiN8eM2AW]MNhUX?l8_(V'Cp)X8E\AfDmC,%&MXrbQng\dVi"(/"Fsit7D59=W&B*/Zu\-Zmd7"!+RXXf?FSC[JEZ+8">fVqZ,\$#)=HP74AOn*$%H3Ma(9W8mb=^dSA^0h5AMWI%i&H9m<e]([L)LaI>$(!A<<j>*<&/%)3MXV1j!0A7(U$W.RV4<c`0>+jnAqk$5.e^4_P>4XJ>3(c>![q!0dC)\<:A"gh3Q,5")[:&%1L4=lS1Wl4\&.ab'"uKi2j?5JD2;R!Ii.1[HC=g$?]R*g"WR>WIh(DhhSg\eBS0o&)c>Kj",bkWrk+$r:=nm$cV#L$`2?'5N_DLR%:rs+PhPaC)p=]rMnampFpf:\+/R.`AIt/:XD.&TJ0L[@Uq@^e,q)((GmJ_4/l89?2K!VL6\-Y`Hq=3KF*(Z>NJ2J-@-m0M*9XJoi%i3*]KRhJ\_Br\>NP,Je`<uOuT7YXR^U\c0qpHBMp^9cVmFHX;mTUQJsj]og#Z@ReC*Ln[2[!*^2YNiML_?h4pO!&'B'lN\,O]ks5%h%0phK+sfZOTc3dgk1hB3H-.Ni"*'e65(GQ,(#P1YD?#>lrTL=7cr_78GQWjHOlPA`&&Z=>N.RB27K53oG$OY3qHK9=ct@gd>M[-%$'t%Uf,MIF).:$n[O/jQ3lHZ3@"1BHP&eALn^Ba6/Jd^mg[(;[)9pRhA%-de`qecDN^56)_Db*@!.=c$%WdEF2JgA2<?6QPC(oE?%$Q?RiH2hsA?T.t0[oPeDC;@B*&1uGD\cIgtQg?o7@g*f,b'nqSeZ#;`Ji,n[K"[GbTa%5`9'KgQIl:."$M%noPSt,a-dXL</BldE%_*R&3.CMl<^:XbHB*sKC1nB59>B;$Rq:<VP\a[T_fQGFQ\sjW-[Kf=%Z(u8h_X0YX)dq?\A?[GVT3_A1-3aQbWkfBe6LNE^c:OB_%VQH%PdA;h9[?]sZK,MlcoK1$F"Uso8MMT[F]gs1)S/!@h=C;psZF::jP.E>d?S-u8$Q+(\Qp#r"%O13kP5(GaB`6Nq6e?@WkQU'?%Os4PC!IX4-S%0j2*[1=q!_jb$+C7>@%*4',k]d0)"Eq::Q^&^/i*%+Mho4uQS;FE<>EH>iY-u$d#!uVlmSF"Y+G(*/&b*if=\GNs%A&/@)eYRo(rUL.DX_3_A@B6&Q0ket>\1A*uB#74C;o`b3OBJiH;sXNpf`K9`_5O9Om=OmBkKjk`/Ls/l"q*n\MgGXgXYX<XU!Idm%)$.W%?@'ZWpBJ&IB`8n;%NcH7'-5<S<"rB6(=>pg:l?akl&89uPN)NTPL^(Z5:h&,Rkbe]`O21s)PqU9=:!IsHi?Al!_:h*!$Lp.%,7(W?lP=kn4a>O*Z)tih<&%V>PoO2b1nI[Z6!S%'6J4Bgf&R#!L*Sb02I$bn&4fXNL<sSgn2"a0%MM,f[f*_rc/[@]<gsO#k8,)i%[lOi$1:\Y^:Sp#^EXe,F=qAV(&h[%>[1et;#U4UbNc&q#:$LgY`5N*aL;0Z.[o=dlV0NBEU'%"=1.c-@&ib:h1lOkW7hocWUOq7F%*T@/o_&:DQ-48O\in411JeDBH#7TYrq#6b(UPj`XiCL0VCp#Jn#2,*Zfcg'6-ZTc"L-("3p)?:^@Hq2<2HpofR-p:@MG*I(f$LZs%hD0nPIk\"%?m@E4I=9;g.t.lDiNSp`rj``K"W@qu&Z)kdVXiKha?&HD,7s8Y?&*B0Z&Igm@LIoO"//K@,`6-2GfcdW^"ItO`'_rU%arV7Bg$iFKU>.Pb<N)]`[S>1pO<!)PZJC/U*,!Q.g6\f1/jHF2UYq8kO=&V"/Bu,=X"P9m,sF;@Y@GU3Obd68'D8M*r!%,PJC$gU%($riA]HmeB6bW4?+YH8"hllqdraU'XPhXB;@H8so"?Nmfi;@.!;VBl*._kXK,RF"MaNd_=oRPalZZc"l5INnn3q)*<%piR(+*'g:%]$FM:W)2;Ki_Q7^j@lee/H6!/=0i.$MZlcC]U0.(,ojrZ,N]b@onfAk=M-XRXZ'LD7\)BTPWe3G#$k7Q8PC?LEu*qab)DTL%H%>;%KV.0O2N/%$r*'n&q6E,]8oiBM'?@-ORa,grQN+=L?kLTtRM[YPBaT:%_jm@5%)FQS0$f/M1BVX]QQ#'S?_:j5[3+.\#dG#F#)e5!%(GlBJPP95blD2>P->.?@f*X:d1kNMg-7XOH72iRmTdXnqOA:H$i>e4CMhadeSO*i_lCf@BD=d-1&OUo!3I6ccYXMo#i>5>EB>`IA%]H8YFH,^D$fp]a@A4HM!/_:,K)>+!N^l8N;oV`g^ACt3Td]1<*g056b$'f[:U:`Ak\%_Be-jIdQ`&D=4_h;%UCD>#.8uGcFBd;N+%6d#5clsb/D\_&DX+9]RoW.go;mE<p+o\'2^#(-Zk6.0.R'^$M![lj3"H'Q[HPReB>3)8RHZrVuh6*W5&3J]\Sg$Y\7^\]7Un@.3L%^rgU+SJ&P-!K8<#R;%$@(Dh;XbT?+DUMiR>Qf9$"_BNH#[iIZb^_fZ80`uU9C`p"b6X<!emec2jP2:>_=SI]O.[iA[(44h^9sc\.%0<`dcD<1%kT^ll&]PmNNUR2gifd*6[ZlMZG"_u)s,\Y=&n$=4,VX7b81TphiXYXe$TDlW@>md:7g>dn<kJ>S##JYC+'hiDBl\-\V%p3c@F]!TYXcjOppqZaC4nGi7-5]%k:J;$k\J;XcjZ(!P!)nES*S9H^`q/qYL9B'qnMXU@l'jl/S/ar"V*Obqh>gp99okssXZIiF(%qFBME3q;09nSbfa]G_MO0[,ZOZ2F=*IAjY<\&"&rSD`c/d`T!f2c63WIE+ZP0E"SKXJ[<"]C2SdBS0rZ(ZuFDTX.N`R%G^FCkcth%-Y=^HgFkJ3]&3OuJs[ClIJqfKFMT6R(;;>o\[3U^q!W6T>7]`qOcp)_/6XMnG4.fD.$X_MWM-k9i[nDH3*t/9q'1)d"kSe)Cike/%R<[uF8l((JGf$hoq4>sRpI4$*X<%Ki*GbpeZq(t7gCCMRW/e;O2r'77#oCYe%`sGNQ4MhF,%0jfYl*bB(/^rN+DKh#XP2/(8pDIr%;\\&6V2Ymk4;[]Ok"Ss:h,h<64[/2BJMor3HTI=jp9X6)T3c6V&;-.c5rj6n5*PiA0Cce!G-d%[,$TEu8!KpX6$62'>3a#F2Ub]B%b^_Z;9A&GL%k4k^3\O-I\WWth^s@c&iV;Y)@VT9AU3$`>$pijH;Y%+d^#(bH=.;&R*]IlBeLF!<=g]V1A6#cMg\0^#5@/'4"ImJ3%QgkMn]>uL!7(*;>VP5]EDg#RFUfL-*&p=oVOC]D(,+2qF9ZjF%$9T0]4g!eC)t>[IX'=/iB_cc^+,Ua,-QGUF.$,r"PeQlGYNDD@%CgaTVn&`!)]^.NaGU2_EiW,520cD051eqL9Uu<EUo+YXiMWmYMi]9j&ZJ($+k*g*O0$[b8kTBDklr28ol&,QuF404ALf,8'fF;V:%@h1-;7/#Ah2^sFXco(A?9P"b5[a@BSNIm@5(OIV5KHd@$#\ZKeY!+\Xa,tR'nHPVm0D@b,L1H$7n</QHO[H<BY15/MZA,hX$kcbG%c;OlMTK/tAj;E,s(qB95>t[1H/7R6.4KkUeE<G)5l"g(agB`o+91\X"@6h-7JR!rO@Y_m^Kg!aYf'99H]bcUmkL/@H&F%N6?Jh7F%n2&0ggo:';YpGE-b_dYZ2NLG!E+?_$LVMGp\M0)hS+VG$P7D,kRW)dmcX[ebgcP"VC?3io'CZ+<.%W]u=G^k!h?XE)>ZeJmm2=)-%mIr@C`/?WB]MW_UA>I<&4.r0fL#J"UAZfOg#Zp4]fE*rhcd_N')#DM^/drEE9"#PGTUsk#IW,?HGFj`?9T1GZ98+bNY_tH)0A+n2%=s8?/7"eW5fF"ZGX,H=u(c"R.FQAoGBA`@Q<g;*5o,sIL;@1me=oDZ-H,[osWVrR$"(>s+^sq(l"'&#A4Ha\r!NQd:Ud*MIrf1Ch%Og/K"%XhPKpsK7>ZoJ0!BVEkgCb/Urje.NQiJDB?+@,j7,`S6(RJ%tDat%jRPs8muHef>_<X-sFb'E1Bb0f>>G2_t6UpF5J#r-.q%i"8pB<cTtI!V<h2F@B"A-L75;"kEFu!VXb(@mG:`NnPhVreUTMUX3$5"YAll`J[`Y-3OI[28SS.Hb1B).7=sTGe:/@U5`UZ\R!BC%Ho3H4^C:2`;diD7rj=-/m0Bn@^<B+'-'SP:Lt8A)@3:Q$iXTi6mj=Z68'^pn(mp4.:94Qj!lPO7]BqojoiQaLr4rTY]A`(qoA#X(%.oubh.U-S$61cr,IVEuM3BOch-(h+Pb4$r_.n23">mMrO^W^>Z])]2g!&2X)@?69V2:0.)d\7EiW/\I*<3^l?_0P!<f3q_U>GoB$%@RB]o^<H[qIJP]aO%e>t1l$fo$)76heRs"k]I)5MToX:!B%#!h%H/Ng/!8(n>>8[cpEZOK'=10TQ"]<h#cP@S\"^=[rg.Ar(3]>S%Y5D\E?F_k8$0(iY#QGgp1L\d"1TK/X$6$q(Vg;Y/8X6_1*&PEi[2@=SgSU6L)4T]hjs`g4#o;qF`J'V5@->[3Y5:767E`V"d=id:%`h.=/&uqf';q#M2X8r;'gjbpoZMUeV['G4j5XlaPV+hr^,UT+>B3$.6-L;m,mC1,Jq0RkIL,@EY+1<kQ9O,M`R)mN.Oj%a1'5KP.%?>D0!^.i:OQbV)mnR#J2h3d/Ns7m19q#BtQRFJRgnr*peU8!$j3a2[<=sWJk<c>g=jjg>=-3LD'-=lKhfT7TP)Ls%qL,6gm"qJN:%-rcM"YZfUKR]<A3Y_LspKH[SNm(pu=#u/fhhU8O6729!--'d`%UOq#=-TX?Jk)dNF\)Ck3o<^Sb[pb^uomRia2:-sk"_UNmoU81!%1u$'dA+\Y&TVE7YNL5F$"dK/WTENj*VcD6M&JM]u>CPTYi0Q6Q'jtb,EH98tb:G25C*s!02h>M-iZ[fTeR8N9`p;gY;4Q==cFc8/%%CdRr3ku1"W@-5h".&OH+j_$1S#q-]@)IX8"Z#X`h2pOD.(-tJJDfk4&TFoH'#8'n%EtUhYe8I4K1XSd,ugR:-]73:F:DWZXasC4%;>(@T1BV/u%_q<U1na#e<R$+YaF#/j5.(eFlL"u@;1+g`p?;r@,i%c;)Dh\ZYaN=X1%a^biNNBYc>Z!N9k791TFn8'1`ti,g2RM^%&eG]-@NM=dX2%*k65G!Tfhf[Pri!#lH<dIBapk&`><&r/EYhJYfrg!eBskSJZq,'^6'7=I'/d^r6I/<aj"f5]mMiBBVW@PN=M2(1%=(mJt:E!.:L!*b1LVfs*!L;M%A2?GlgROl^R>BD[EA^@)69!]REJkCJiahl<5_5//ZU:*k)^q?0<_aJ>:rVp49j)%rg6Ke0U(kDu%#s]04PY5%*S9t`>kt*FQpY+5A5RXf6D=sh^>6T`1/o7U&[CHN#U\ScTWQABaJ))oD+=t=)?TebElqITlD8GtVg?_glZaNPu$PCS#%_fqseJC$D*9R&Jg^g?X;Y[42cbL%t*=Os0RI?jcD/l.U,/O-4EQ7"NSc\Y'#g9EH>l=V^/Q$9a+5o$l56,^ta'i1;n$iL2Y8f3oc%A6i;qG(=5U70?i?WhA"fnM+)[/d,pT51J,]8@4T8rJn1s47[sY^`!qLN0Z:oQ!$/W>:WX6_%k\Wp0\hpdakIrT")I=dnGX1g6t50%aBUo%.#'DZMukTa1*:>*!i<jF(JuqiYrh71XhV4CVFnL;qt>#36SF1T`.`Bk,ccq3ZQlO(Y0J7cYG*t$$bR+a!E,O.mnsZ96j3gc%<V6I6_a4g,9EN(mgX43OC'J]`Bif5Qhp4a;HtT6O"/EqQ-;ks"U0c4W)P%Ud[GsifcFAc*hT+0YNZpPJQ<i]5(kf1L$$N$IUuF/V%&g?=%17se6Ota`Gh8]^tTSf4q`.c<0L+9a*gZ$_YMC4r4I!n`r;rB_.e6;?&*u<bmD:pb*%8#Rs0!P1H<YIRAfCA%'an7XgMEliZ%X6<]B5@Fo^VC0"<osi-OEk<LMil.PRAXb"<P;tMmi%i=*U3USYEB"YN4eTEFBM.Xp`76Z=B[o"G0N(ZpS%AQ[_14:Td!XIhfS%J]%GS_&>F+!KG&*e,;Pl0blfr&Oe=`rF9^e]-oDo&EbM8FAr5iOMg!gp4Cfi8)1Qg;MI-8_r%Ro9:r?7?pHjYX`ReNDn@%]ds7S-uG8%\Z7;W^04TVTeie:Hg#RrFD?=/ZaO9\?sq!kTCJqb;8>u*Fucg])GnYTX55)`T5#0mgobh9"(G!O@t1JnGM='D)D[$#*EDLL]C.Is%))d>3FbcfU_o*WNBOJiV@-:1!<!EB8%Jm72r%DAZCmrcU(;$;l"4YH^G#m)$6>mn'8C#&1DODnIXTEA>-c$6Qh)#%FpnX8lR;R?1%4;]OLOCHd,+Z4l?e<Z&Q2DO'U8j+;.M59US"(<:p&"_';cRkIKW"(`&%U,2JG]ul<kD=&Y')^5[%qlts0K0DP(?@UW-7K#dQ"<3u%2`8B4c)tnf(JII6A;?.QK?[t@-=**6D]u<]Q3YKnGgL=<k=5`>,D=gM@8%>n_L0pm;r`p42,LhBBW%9FE!@#cR2]+/hrJ%HKh:Ug%lT;8R9Sa?4#`iI?-tB<D!RJ:qk.90HJL)8N1%uh:=,#J\,8`H4(pl7"-;jqf;(lK]\@7[G*54LSQMNXFBO97/51EgS*H91c86PI6%2aaNSOZfk;fEYP&?8j>Q1$.?HSDnV[-VG8RlJWVdPftR+m^/dla4AbC?cb,nA4dhXLjm@n0@*8,3hBTj9r?!ONuMoUVRm^G,8aNd%MX'`O1+Ge_+plVrC4Nt0[Maq?jcKkW.N^ntELJKT;sM]>G%K\'q.R1B8Z$8a^a&P/UfUPHMJO/be^X9G`;dk*\?"Lp"dY%N/L,p^%A,NJ:j\55LF[D,Zgqa]i(R$(M"kLIgW,1KOBGJ4r9g>gI"7@?DUL"*.]SRG\^Xp(9+R+P`^&gEq6]n0$7'Y*c6osm9)r0tLLA'VJ%mpI_Sj?D*,kZr8JLM[JU]P47?Ras/m#u<2C/mjk-`&sg-H%OFl"/b$Q08,YIP`Y<n#&<La'RgJf2CebPh.<"=LluucB,hABhUW4#%U,DXees5QF2MB#Los;0ma5h]PIs($WS_Ai(J=8bp0T&hL`_BQ3*e81.ILS5feh_a$C,\SoB]OUr/0F"eba<r#9?:>mADlhGX*moj%bNT0UAP`LVAB2kLb[6$@46Z.TPi8L`'Q^Wd5m?[-#RSH1LNX_TV[<J>.(3eSn]r*_=Dfl)=J-71e@8(?#dVRf&@.lML%KBR"&4_$%R[Q=2+l(C;e[6*>g,5@/$XkCUHr:42i+A77.H*M)LX_AUqkT\N]0u1'Kr$7#GnR=U>0_*aQ>nKs1AuS+H[kPR$'"43<)E0%jGlYB%?AVTG2[.nonOaVe5:[;IfI,p'I++(2I;Z;SKKJ@hb"C1Ta<:,AQ9c7;:Q\\clOeK6IVR4fj!e!e!J->g/\XFNZ?]Uf;m&.#)-#@C%I7I,-)8Ufk!qH"ZQHoWS7@O@_G,q(]g*7Zq"Z/mKqik1+6**Bh?F&l'\`\JTY9PJS6McRbFIEb?CFd'Rh#i_1gK!iMTl+j]J`f<P%kJg(Ms.?GFf;g"[J`d#0M'i1'3h.ZO5[^.+@9oK0%\>:S#tcCI8-1NV,U"GrW8Ca(ZWR%`&Y5gIcsUPYE>9.tVo<$o*%P]q70ALJ%5tE\F[i5J7]0D[*m0?dmi=GPQI.hef(OB2a_AY>6@QB)t[s\npS85NUE7#8gf)>OJ$;>8+G?tpg[jlAacI1q.-9KJ16\IY+4FlfY%HACZ?6](eam,nQ?f>T4CZtlOig/[paWZ$d:Pb+BJ@9kX[4B@LI;EV`&JM-G%5hTN+5jh8(Is+1T+abX_fB^4TSqN$:6<+cs6k-3.%B[MHSe>c:)NH:>8%lQZijcol1%cO\1(\7f(\EP_iTt"@tUp]M83l^*<XTVdEmS.)"HI6?[E%ta^M:o@1'&%l3]$A=/[2KuP"Z_,'%0&^K.(,r]sU;hA\6O:.GLm-mp12\npZ?RSjVV^m(S_JE5Bb?^A]'2PjOjUC+#F>?9.W68DL8q7D$B44gjdkeu>SJ0`UP#P:qa,/r%Ql\8g7o$?'=q)qa12GP1B^Hq2-2t)BJq9Yp?"orOD!@6)_6&e$!U>*M7,s-XG;_84XLBKq&h;-2-W[>XZ5piRapYQ(^f&,+Hj%M/%*Goqhng3EQY]1#uF[i5[gC.&lVq_VT6'KX4X^a1!Xr-KV%-!9,DMY8LQ;V:G36WWdYTc;;/co(W/Jd^B\esm'A7ma]$DUlQLChk_%po%8C#ufD)C+9%#(""L4]j<:@d?.7+93dlAf'qdWGLI/I0VW<tZ@O)0%9V[;f@+R'_Qnm)3W]4%kp]i\<XP_cMid[bafpL@$^Z(O%*Z7Bcb2sjP>mbuK%]C93$HP\BYmZcdFY/'ZE/kUP,X/mG+)+2!"#NT!O%J$VUm+L3NGRmqS@(qs"\Cd8l7CF)O\5Lt:*FUS3%PnL%F*V12Aq5_*2LoaV=3F,Um->7L/X?FLnO9tXIP+jChsA3I_EqD'N9*DI=m75/i`?JEE;rtZ$[!!plDISgiaQ(oVWRYM/Q9g@#.>uP%BQF)Whs7JhaqQr4#_j(I,Neo&'(eSo%#(+T2sF03aM]E'V$U5N>Zh=?_Uc-&h*LRh%32?G\\PUY7MmN[;+Cm^pr8*Ua^Y/T7ERid%/7la5/&_\U\Qe#C?m;Rm[V<EF3&^-X9h?:^lI]9oNjb4@Rl\^tXmb;tU&jCi3WEgBO7>MPBd5cT]oR:(&m7o:@U8lc?b[ec3r2[9%[PAkTQ4#I;2Wo'DEg"J^pM=H%bD,c+abmYu5F0EYD*F*2Y2_7(I^sD[TF5F9fW\7-)sr!=q&u=C.NP'=BYK<S1\"lCTkqcX-kP<o%2D^Pfk,V?#_&5/Q&^LuMUMh=$Wb&838[BaU+PDEP@ZjFmNR$^X-/R^):^j=-,=2T`c&=+edt.sBMkpm'FCe;VoHA:EC=N?k#5EqX%&`B7$I3dFSdhZYA0W1lk8Rs>X@91&J&'FN;4"b)U<);GO_m1^kg!HI[1_]OQOWI4+Cbk;=#]^9Y04?23"&'WA#"i@qOLm!l!+Yg?%\K/L,eF>l5h*nrmKKRF&0Q:F5:T]3.*rb5!6!7?@<e)WUVnY[]D;F4M0X^#-r,(nX-)'t9_8Je1XC$HlJ6kjob)1T3-jd,$Rp9e'%ZiQo,D(c8+L):6q*e[TQSq49m^"D?;<9m$Q_/T)RcK3VR@c0RkpQo3M.2Gk4"&1,EoqBA=;[6qZ"\$bG)1,U[/G;\*SDPJ1RTp-+%%kbK#53kqh=,a%#a1!WJk4joOmrXkIpepeu%FDqem,Us"V,j[S:%-2\*"+TD,f2?PC&*\A<,VS<RqAbAcRkjbc4RE'/rX6>qYs4p%^V-hgG,3`j0]q<,1j9_P)(%K:Y&A%''PCu<MG))7I;)P!-g`,MKOm#[**/-66$Q'sGUnu*;)YoT8GkYh!I()^;S9so-md*9Ai=KF%mgOkfas<"\?c$/2Mi%Vld/&%]=kaht7tQ#gGoMgK8'JH41g?]n1A<bHL2i)m>6D5^HTW+g)kXKr9,0`-Ym(05`)GP[/HGfoFVXoC%(3A5mC*PGB3+#4BKeO`Soj>Cj=PZo0Pne#mU^hVj1k]1lZHd1)SL=X)C,lH)7[%FY4[N.@6#H+;iCctDFCC5HTH;%^ZQ6_$GRq;\%q3)TYC<@DX4AdG3M(-uGL5/3)BK<H7;Uj6GWA&<QQfHC,P3H(X#TFEDAqtSf5D5]q,^&eGn(UE?qN_UTgI$b_>&U4O-iCX/8r2BG%ie9a287F;56DjH\beSS*7Y/)-fe#*!#V5XA-SVP.adM8W*iI(-*pA?tVTMU@8+RY)liKUt<`CDgltCgklnP+NR$n3]4UQD-;Zcsj%GVo6,HkDYD2UZ;d7Y465$H!#>4(Jc1Rd*U5?^p'Wkf=uGY(1/JF)%Rm"Y):SCj?gLj&$P8[P[T#Ef?`cX8O$oM(Yl%bbkVZ=Tu4;%A>!)Zn\"tIb?u#p(GW>e-djTVO"?>leqE-X9Sqk`)HFmPo10#W0,)\&ESjr?#2L7NDT:'<0_G5mH6=NgJC^OWPf1II@9q8G.-,Y!%h]!\D>`(<m>fQiF-23P3&A:tkEdP?j(,X`L>W!]4fgKgpa;iDsQmn3XgSl$,-G@C2]1T"Zl4i<7R%B/!@\]3f.ZbJuGaXu!md4EM%@H\+<V(0Z1(6FrcCXKJF&UsGASB>^o`NO,I7Tf+:.3Hjdn^fgh+LUsD_cDih2\+WkMu.KL[Au@X9W9bF*KL>9'1Ok>l'?hRmSU6`%N&L!jFAl6n`_0rEZIP4B@rDFT(f`.k&!M;fGJ'B]e]Z/CN7\7bTG^l>FXT2h0)r<h^EEJV16^Ak4JjH)C$Mg1+"%WqV<SWfnML!8%:&5)X[9I]oK_:BCah89e@Tp'7UntZ#oo%h)oat2,->(1H,OQfH9?,ECF5*>-Q5YnP?rgXg\/5^Vgr&gp,+YKdFUViRGnqu*[SdV7%(EL(!?H6iVit,NY+=3/)*b.VJ\?-OMj;!pE9+N!9*iad]<=U:0p2F>:>&A^!]]m8#N$?69cu"Hol3P!].Mk&)EoIqcTd25p*F&p%%,@>6+*P[ssD7Nr.T_f\<9#sCJ9r/cl0gU[Ag5g7#,LRF;0YYOepVpI3R`if7n(k,E1'L1il\K2,>;[mUQ&ip7Q8U%@AWTsP+O@:f%DiGaur4;n:Jkh7-:.LK3I+U;De`-nrT'dBJ'XZ3F.loG'9UnW:%YfnNe)OI8HkuBN3<g*skG@Nf7K\G6LbtXV&3+_8$q/9[!\a&$%V?'Uh]b,/YU&kG;4/`dh)UX_U%ca?[H"MpK:P@-5*PQK[,hC)*!!eFc&R@*B@>Boi\lQ^],dZYl%,h_UPCE3ReX'Ul#Y<^-[&NQ.%qlU`S-(;nQR>F$t,no6a#2iN]ij<]_*9kl%pjf/:H'Za()m2eY.n7HZN`rmg&5H_F/b?i#oo!\g=i]9ZbV@(rkO.:]+lh`l/.h]A%Q,/Ylden-L6V/.d:'K!(kpNCE'M#E&UDTQ"E#&;KNqA9GV`p]mFh/p$Tr%/D;ku^?Tdr(j2K$#q(mt#FcP;khL%G!C[:;9*n)rpU%s1Vd<[i%9V.0QI<_Gt^DY?%jl7^[^Od`,=Qk3nmsEo[_O:GE?"?:0O4!uRu+:[NV8JJPl=Ja1eR$D0fK0%EnnUjTRGmJ\-h69ZBp%`9W46V:$9eb\m6^jQ;rP_3lJrF\N^"m\S`Lk2od9I"*\\k#`?_kE1>FPZp"H`'6r:BB=TdHI^#P,+\9V:c[gYP8`;i>6dptFH$>Z%Ke'kcQ33\nRkQ=uEl[;Ho(gVp7R"_#m7Y8^^Q#uVQ>:`_A+GgmiWDp3nt46fS.:o42q4PNJh4j+)@T.Xqoj)G1]PaYc^K7@9QK_]%Q`tot7@J(h/:dGi$#*K:&rsVc8Jp&mTILaXY1sr+F4S-_`/uuAcpN1B@ecFu+MFjoWa!\kpMNE)5$/C[1/[_H$G2Ya8G5^+G3]ih%[(e7TC_?);Ob/rEHeU;1+u6L,;jL'l]!e-[oI$p]_@C#6S#:(=g/bO#R2eB!M!7AeM[.ur"%S6lFVe]o9WbUVArA*#Kh:NHXV"n2%d%q)/I1`4T_-riM;1MD;4nq)Z;q>t8`#6ODY#<ApJ0BWj)bFI-[O-;I`C(s<X4FGY<IN'#YX_,r@^W^G2Rn=fJ?Jo(S1"#?&Z4?D%I'tss?mW>m5p;=*q3D8&hL,l/)X,OXNjGJUkqW:QFM&U8Ea)F7DY,?lnVChe8Fl,FXJ$c;D__F]iCRqT>9?VcK=r!qX't-e4utZD%FKhYfdo*$M(=eT-]JgJ_Uq.JRP]c;VU"l[.EW">-n_c/=]N/pZAHhU&UXUe!N^>D=Dkr=VetRI?G@ZquFir';8sX.%;i3N/_4FRI%=k?DY"5ud@L:0G>7n/mE=B2WCR6S$Y!U"?[*XlmMGG@Ohj<YYG1:/Y)3:d]AZ/Y5!$(/(65)#`t6H;2r]gL?Ie8l)_6G?1]fs`e6%&-M@D('0rJJfJ%Tn5.Gm7`iHJ$$eJ<.-C2En8^3oDd$'Wis(j?U:QU]%V%S3Au8*:2:U^<<2l"dC+GR>Q2XCp@(-UOSYdQ#OpOcQ%kVP/sE72iE3?oQ[qF7%CNkUK#AQbf86@umQLQh(.oD\!`(;Dr.N,Q=TT2&S0*a2TkaG`*X)8Fk%Y-T[4$BIOb\UH)roCKMTP9ls9%#UC(PgKM@2U_=*=E1Uj<*/b?E[PlB.<IOD>=`+]adc"a2N?/l$=d5O?]"=V+%Od0Z7OWOrjCl4qq5q\re[d6!#VJGP(B0SNGHUq'%Z@BoG-BO9tCOuoih5[hI4l79[7=/WI)'uFQPW;qNY%'J#JIfO!68+8HhJW`g-uBIB".*UW>nfndK&IPLc1?U3K0Z3`cAq+)&K4!)%=UfVA-)Op=#rXFBUc@(+TXk\!`Y5#gn'@Z03\Ml.=BhS4$g$llKK?cCmpp$TXRV5.g6B<?bKLC(;oU'ng57%!]Ji(MpSA4,lP)$T%EE"_##p>1(G`Mc5^XR.Z_KQ3fm%#kRJ#N"]XOj/_5Yhs<hs8c1EZf+U*8i6GE3sO<Yc1fa'>DgkE*);glp8Ee:1hA48P:bd&ql&(%6.BN40eq8d%`%Z>3J8gJ5,'9TlD4uQ<Xgl3^Y51>@#O$c"tfh'?3HFQET'huM\()WQ@61TXff2Tl_6/WjDdmhePK8OdQ!lM2&*B8%+_b=mJZ_OFo0\VMSOZU&TaICYQ]"acIF%/>#SCf=eY0cdE`)@UU0hR;G`q5(6i4Oil?)"2Ugrf<dE+?7N$8O',#6!5:k<_GT]]!(%-VPI;eWC_Wp/Jo6#At8YgC6!9#$7P*V#\+fn8=5h^1m$6iIuIBeB.VioY;AY!c4%kk<?1e*(T9./6<EM$W(!f>P8e.UO2Hc^<m&8%`>UsddoBA<NoV&cPSJ)FW-s$kI6#cSau_7o72$J_nD''2+k,FFW+s3VlN>"SO6AB]8iLC2Ul:XR3jLlFC=mBPCL-K)nj./uXnn"'%p(k%UenWb;\V!+-O92@ReZdF'pF>h+q]ja[FD,9\VHO#d'fB4i3L%:ll!C]GLmqk\;\$6K!=<A3!Y`DRJgJ2,XV$u19@&\mUr(M.%jSduQO<s[[]:*eCVZDl;,B.AV*8^7OKs7ff4gtF0_d<J0QJY1[fF9,`!Y(,E]'S\3pdp8Rjeqtj&V&,k1?Jj@8>Ns%nbIS<"s?cZ%+pkt=Q9\a<N:cIp:umf7Yp)S!o*l$c6ut%:0qZe8E40LCTWD5UCOK((C3AV`;Ri`'n:Y?d21D.F(md`l,^OD<3D:4QK69.De5b=O%TZq1'>O<(/GJj-:f9j:"LC]N>FQ3IHN&X<8kR%ZGZ3\Z4Fr8P8W,BQ&os7h(J^1`4ac6su,j'sPdAgZA0u7[W*l8M2i*uu(SoL6>%T*53F_ini$QDhjQM?ZPFc^jDkI=7N_?aKs$$!?8T&gAoVT;Xac<@*H6LJn;l,=$Um,9!50>fb7GoW>D_#$b!.5Q26J?I)8NJK:g.%YCa2niV]M(f?Sm3'Y&@@bo!_?StF>GItE8H:W*:k26=RQM)`@N=!HmM7ZONZ3Um0"7d`<V.9(HT;j[0S'CaZAk79+]eI8!7aa7hr%WuK;MYu(CP`uQIQ#/QD9TZGj]]K-d4DPJ_en)``_Y9"F/'nk=K&e>#T.:co)hXfu9$D697R#Ge>TeE0#1TLA"J2NG_j5[[ST7JP@%]K,mY+_9OOFdmD)'kZ:^m?Nn)Jj#>`@BEB7oD#FA/i.lXO$+'<Z"5Y6\PfOPk_nF-J!PF<YYV@9ABMfi'U,gtNg^i18G6m1`.9]9%m/^.-Y%G6<i)e-+O%O\Q\CI\.;646DT.Fc@=mDhj^XKTIRSEF+&K5;eQQN\o/)f%],t-jYYLVYn?PLuJkYE$bBp-=CrjLJ0mbdTi%UUW33DUZ_JJCe+%-gZVbGFAD-&d$tOehLSuAn=sUhR^ko[F2mgIX+5eibr]E:lH5[M6c[d\MGS6.O[ClZL.+URS@[_=op&qKke>G%i$3QVDmQG]P<-(^aK_^"Pj,F&i,(API^(<5*kC85=]3l&Li<JOfQX$Z/IA'_Dn<r,%kL(7rE+!5YS+l<:I@rT-HQaA%#_*hI#:9f%ajB*8f"nu9#-,k#8P1=GG,ooQWr2U&rhPpH7g;t=.Z+]MTmY@4^N<.4/cc3B:RNl<_#;P!a?Y(QkOdk^nLk'7iJ[`0#'.N?>O_1S%q<(.oO:f'2;8r&onOj%GMJ#m^2?NBoKM-!tHC*F1Cd+G?:Aq,hX(i\ar#43a's;lE%7j^R,9`ia._qO8#.h:E"n2Zk\?(E_Esr:K%i9>;P"K+aTWEoX(05YAZ,;<+)lJ3ZQV[59&l\^tQE?JCDLAC"R,C4"QJ3GJr6hq]?@PujfB29ut$_s5VT=_:k1j-S^L`j]8Z9q4*%eUR%<4HUX"3W<HEIE5?3jUNjsW=GgYprQBqC^+GD:#?SJo%*6L>=tj/L^:$\V*n.Qj`46MUGR)H53MmfPK[P\rk+&Bit_ECjOD2U%o[LfDZ$UsA09gOE3Q`Dq(b>##j.b28?7ht%F@W\/K^C@R-F/\s.J36VB3;8-b`S-k(%=lu->43-JD'<V9@B8mUh$,eG=q1[?0C+V%9a!fI']8%X.,8b%a]@!t!d-!r(b6L)%A/JC<%1^&UZC:hoBWm/A>Y6[<;eZk$]XCthd5&U=.p?NYQ7+OC)\(1^=$@6<V&%>DZJE$%QO0loY*OQ!Ntc-pSYU#@`23YW#mf/F1m]X9Xi&c5Ze%S<EF$CKB/!B@9<#SKdQnV7%fZ6B#=@c"CG+KD:VTn6@UHT2?9O4(LtH%U%Q7cKJUDOh'/p&FQnC"k$n%o._@gRWjp84&3)*U0-l*d`qJHP7*k>+*kkeTO[XZ$7(0,Nc9`-/W2G%Y"iXH=aS$=)p=8r*l<i"/fb%5UacVbN;;$'n36?]5t`R1V!\D..&W4\Xt&#=07&Vqh]GMEt7PVS>t4a8#*<7g-pCZk0^uq8NXQ=/EgrYCtoGm^W7N;j?ZJ%C$tVL%>>F5\G!#*FJ3AK7>'1HP1,6@A71E5fLlmf5V^@[:pbO&)gaPp<[8X,@T[08Yca1?5S'90V0<JE(:HKIc7Ei<8klb^oiLi:*YIbl^%7d=BFO_<1_Xr/nsr]]pC&,+I\)Aa*Ob7C^2*tFP-\@=2s8NIA:KU#O0c&`/8KupDPI*'HmO[\[#,&cOWSKR5V@@lPN'EPlh_+p[/%T@&2P.:eShQ@s1iH9%1O1P<bllc>"hpSKt&5"N$5X*-7El`HJ+Dlj@T;RQds8gde?#>Um$E321om@l:YNkh#`C,qh<FW`]bE3p#3%re)d5m[$6eq.Cm!1P9mb?ie1&Q!YluY3CI7)UtPgTJuJ15\Rr>SQsLl*G=PX9qO_qC?t3nc1F-2F"[)1"96eB+OP_A?*1V$8rG]3%)4-5sNQoZg%.GFpWSGo;F0I[8m\Kr*GNSE>e/Xip)^;@HIG5VW_]8.Meuaf="%adWaCPQY'7pYu>##klE4p/Ofq'4NH5e'p[InJO%=q_Doi,E,0Cf_EjA,ndk'SU9ES)*NK"Rnr7Xj2PNeujre+m_#:@hWffm!d^Ob61MuA7%726td-a9n$$oT5UquCc>@$CqJQIOt(7O%</_EY\TFL0m@!%emTSU-76YG/IsJEDb`2*Vr#bt,huD;Xrp,(/p!<[-?iK:Ss4;brm=3t]s2HbTG%FnXm;N$mJ,SR1q@EVupV6Zr%s6q-0rNBT.mH["8Q[f"\p?B?jm=3hSr*T0tqdG"0ah3;Ao,ma7RYQY=BGi'ELO#8XG9%CQ1W(o+HecRT5QOZ?I"'[\rcD)j)7PAa%U3o8?-r*1c>8l:sX+RYQo^+p2T*Z<kif9StVntb+<CSEV^Ra^.2j"E_MRX$Gg+hll<A\)_%.iR[GY&A2[pu?5Rop]\LZ#em_@71D%k1J1L93W'`DQl7K_8dY)YmsEKH56:CR$>G(DZ@Fb>92V4O7=Pc$fA=j8;Nf*F?"J>p8iJ@qQ'VlnYp`A-GH[-AqM&*ag#.$^$^j0%-MH.7*Bn[3\_&V:5+`eied``cl$,_m%Mm:1ldt7/h[08\`q:@bEd>?H]tCk"^-?OCpB`4n;^:0ZK;&<>V'PhmE'.=_7I?+tc^X^n%i4Y7;7-tndOkEak%8Z54[CZi4UmA(4>a@c\\H9hqF#*7-lhtYBX9ATL(B_tp`8P<`_AA;Bj6`sd(:esHZu'Qn!c&?B>#!!n[H`Zu%A_^E]NWd\&rV1@ITDE<DjE4^eU&,8r5tX't8^tp]5^Y*d2Tk@;gu+6QI+Q+,-#(!u3Ruh6ZY0@um?R:Pdh-1tf\*eNYm;/X'm9-d%_QqU9fg%\?/DM"Z)Yj5MD;qdimG%,8ai;&Um$m\KqE2q\g[AJ`O.#TR.%_3?U7MARa+]Q/Eudf,Qg`Sc+$X)NVf26<(ZA$-^2_LU%r-"F/1;iR*3nEJ4]2n">22Bot@_1clV0UVG[n*<ElG<4ScJD>rknWG'?SClG$H*J]gDh*JrN04PHi7t03XWf@[$183UscpMi4DG`%9<)n*oT5Ai+@i<cf-c>^\6#lb$U)$B[g"MtGUEqq\"14HpE"_Bg0&I9*2anVU3MZCm`4Kblr`2<[mo51fuQ,?3PDQ<r^a2sjn',1%;$;Ag,T'eb+Z(#`$*Shr::Qu&qt6;im6:Gh%$T]?;\d"kcWL(=Gd^VUNiFjb7H6Q\PW67Yj[QF[>Dk+g@ZdZn:-LoMl+iLlE#2[q%E2Tb=d<33^pL?<(ID5U:d=W(G3_KfdP]_Y7QI@2.b>J]4L0X(),VE;2QBQM0_U@OJp!e)5Ntqh0)YD:#%Z1QE@_H&pcMNi/r@ZlD%oF6-PncH!8qW]\C(Y1V.>MXZO*)WoaZ;Cf2OKEa0DHs`Bd3umHntCA2;oK"N=H+tS)cnN]k-#23Bec2\GX.\WM%suK&blmK9Z(<S%GjrRF`j8r1/60ZCSne&1M>e&^%;l3)O*X;9io>>p%!VD?H07;_KTY?Cm_W+Ig__^3rZSJ$c%lL(]a`:C5HlRfnXs;9a1$r[\?IbG%^giA_).--M"*N1]:T#q\eDD</n:qkN095[afha:rcikA^D(a]8e)JQSkoYq5\C^V$gF0M.&JjE"+$8tIW:.o]T'!lbA,9naT?gko%ho/_[MVX<FMYEphBJbG)"?7a8,]#kKWUb8,dop;I@?E20h\+u*`SKK8r7g'dILB7Ms)P4gKe"`e(]^U8]/g3\KT7YCIpZgB?@%k=%e(dHTa5TNEGS(g>"'+b$#VmB2#)dakU&h.J*5O$:>40L/-u/VG@\D-'`go0%iZ6RJ=E"p'<pN(7Vp?1OI1<p<T^s)*Fm>K?>&&I,%WoN^Hj);<ONaFne1li(.m1`"$pEXTCC+pmt)8YX:G/&%f]LnTXdj-Q9Mb!DL*.;u3e^lLO)&s6-pCqukHGo@kh$4nOC2=B[_$gh"%l^2VhqS"Zp1U1OTL"Cas_gnmQP.k-c^?p]BakC^c@Q;G_?9c(1XU]XG+s)TTWNgUUk&?-gVJpVg$<r9Hksf?U.295>/tU//G-Mj/%6^TS;k,!+j^Kp'&n8,mUCs[_.B?e(2js=_dB_H>Xg]F/kFpNHGQhriq7g!'Ej$2*"*Wr!mmcqUZ0(\l*g/eX/J9fdQ;*&@>`_U6L%PYK&?LX>Pp>r]uc)(8N'YY0%*)S=u7_`:Md,ou!q1K#cV45uU)DC$":I'Qrc3@S:S\5nDYodq(nM!3O]T6$(p)"O5b<A(@E_+Lb^%bAJ@_hG..%\*gA%("eEC/q9u607/QWa"TVH27,M+M#fGUSjb="ge&!BgVYN)4c9Wq=FCstp1.lB__QF@-o*@j404X(Me*\kka5;h%\!Kg%[3KB*S$"X[k'QpG)Ve\@6Nc.ZdPDj3S[&VB&sgn[nZ?g$Nl;2lnT3_J,.N;dXm?=od=^)q#-,:C"Eag-e[MOO5p;t<@oa:5%Tn13SS;FpC#/^?0Xq2ch$E[oiA/T-6e\(^)`g?kac"Ouu`:klX=HHfjV!4><2C;?4^5Ed?WFeRRZ3dY'_/28dD=';V`g:<E>aXnU%\In45(mb^@O'&,hXj6Ni6-';aAJL^!=T5kF<&V^7<f?h/q(m(;.!*>2@.5)AC+o!@,<kF)EPF7F_l1fK`"[$TI_=fghV77->>UKN%U`>adG>*ZBd/7a*"'P%@<K*[pN^g]\3<2.TMgER!Y.rW)K[I1X^<Ggt,f]PP$k:V0]g3tZ)T$d"9qPU[1VR_102J%GKlq=6HV/:K%^--SQ+jLgMgJ(VShl^8P60.;5gCNI_%h)8_Z+#2+YqPA+Yd)o&BFcW$WWL\iKU1N]3GTP9$-fl7DOot+%Te4f6PKS]S's=/473\m%588[(Gj:t.FAl=-#ej(ZcJ@:-EPB.<l_j7OErlg[iTMk-4!<n2/TW9o]KHHqe+HXgRA0fS@.o0;54tba1/6ZJ*kVhS6L>oAc7dIo%6OULCPfV_H=;P`T?e/QI/eS38Gn*TP-*R6`duS&EQTIoKU'G+GQiXU&0+>/9\M2JkF>nfccbMl0"/eY3<4ge!_Ff:p*FI')4'd&:%A0(C3.F$2XF=&Q^B[-Bs=^g4X;ie]nNQ1"76.fp")38Db:`N_"\gKc^a"'9TNq\H!BfZ#h^r$bX[u9?)bjq'')ou8?T^j66lc:cb%9(9F^oRa[!Kl]R\e4;YUoQ0)j;Uta*cdr4CMbFQkqJLB5Qr$Dmm/E^-^YGN;;3fr.eP<Muf;;TF548%:#<?O8aphIj4&WLh`XGB.%8S+?pb6[;(?i\MiEGSCqnF>Nc*fG"=LQ2l3g?J7>Zs0p"F<>1>\2m9+\P@eENmu6han.[^Y@n0RNq8>%"tB0UHh!$iHC6^VC0(sq%BU.`VTEc[H&B>)^na&T+pua(5itfaeA&^YO[@`Bt-&qVuDZOa39[_pl).>].4JeC!XfWY/%R\W/DGaF%inS)1TKp>I1hs213]<Ek%3NOG!NOEtU)lR%"E>V`3bKgLkL2p8X0g%1"^!'U+[hIl]Y<lh.?X>n`C6VgRUr,:]r,b(7=)#ISRP8cQ+]D\R-)sbRmMGl%10bDa%2=WTi2-`#/UmFZNd<THEbAS12k$3E#Ziqfa,n>k(,tm!\\;,5H(WoCoY>]@nL2GdFUeb1j,Wsr(8)go^Q*2(N_a+sjbGK;Xkru7?%^acP3])K5-8k8)[iC.@G.Ru8UZ)t^D\/]5FC,[@VloG4d#qDGI,c&3KJ?^2(s(;hn?UOTh$,1C7*I2J%%s-Z)s%eLm]\^UpK8;>P%J4W,FRQI/?NX2D'R9-SOWHJs7C5sqbbB&'#V4l1$AlG'VdcE.-LWp*4E&rut\474sEoun'8WsLYl,MV>//=4H50!)k]@8L:"8gL[%Tu%rb%6uIO$%E<`6^\`qST3*5>"<>0\@Xk*V-SSnh0r6!J)#0"_kfD=aOc=^!9rZ@g9X[u/krtjUQ'39<EOWeda&]F,kqRW6b_h*%jV&^N,[UM^N[s&Al5pZq4SB.?Y6Ln/j.ahEklep%AK%L*?:nAG)Ek7:G?WFC"B!1T=hB'nd1^jd)=BlehE7(!GrSOE\^).]_2hrQ%gRA,0n]sS9Z@?47H;o]a(]A_@I-jQo'Rm_T%eY.Y,E?]cEI#:ji/]X=BiD"K?[$LM67iL>ZZBrcZa\,d2r\oA8NZD:e"M'O_)Lf-%6a-*qe`[4NAs^fbCrumUIehEOL5UV+Z>U5$E"T+lb9g(Idq+_&oc/GfB\ZD^s43D2@cQ\5b+td,o-X/4ld&c[Do?JQO#lI+N.*P$%^Kupb]DZKejh#Mu_7K=1+M3),)2LAe_=o!uit@s.^=2:F+o#M'3@`IbF(\o.U%-)?]F723lnW3,4nteZR#WUcXE/h1Bcl1hmI2$E%]/T;?[2?f.rS-9_5dIE/YY$oMh^?A\@Bcg-f#Y>SE+phK8T!KI..f52J<-]k/`S&F`=-F>PPrb:dkNksN3^ahD01*mgj];#Nld6e%8Lr8r,jd7B*P(_2%P^ZIg%]"WC!8328maCKbLU?X=a9;B92K[B$2F"%5fdog$/3J>^"/P5frShi&uX=E(Y:4)\RAS2H?hG1Lg=Mk%)dg/M$2CCq6<gs/l)BXQ[o.OJP;(JQ'Q;_3AEMaN+ZEGbMf=hH(L&9/faE8[b\pEY#VdoUTZtfSr>jt;MNuZNSpJ/(!4DRM$[_T,%[XPiugm4)ci/P<CFkT^]F5@oYEG=h:*k&/.ZoG\hW!qCA"Ei7]$2=nt"BIRL;Rk71DuIaD3?PR/+N:Ahla@#T\@ur:[<oZk2nUBd%QGZC@q>)%1<*5T1"1NuK4O9/_`&@AQo@JJV$'H!qOG!+^@V8oZA74%m5VV<diA=`!SkkhN#=RS##)sV:o<CA\V,.U@in8E6)A#B8%X#[i8a2*`hqiO]t;2SRYCdDOlA2tK+pkL->aQ5Er>O);P(%9.]pm7.Q%Y5+5)8Q<"ch63VT4!Z`%YZ[uLsAo$D0iY$Y(^AiVs,6'%r*[CIf[YWlRg3=aKV1eAFjt]BY%$\<PF?hC9WQ.2EpE6WK9oBCr&WF%=%OiEp>mjsU_0ddYbJkp2#aiQh7c=Nc`Y(ubG)D=P'T7p%/XKsM%WV7a'B!,U++$+UhcLo-)?8ss2ZKL2-f!lT*+Q_def$2#s"9ftNbAE3==l#jo5b#C+8aeW`0.R7Ln%76V^DXT"Le/-ng4;i%?Q'j)kAqm*BM"!$XIoERD;8d;G4=VZ`<rQA7_\D]3qi!Uc96Oba$up#p&%7Klo;[OAS"pP7e,Z&f<73dY<Vc#"P82;F6i9:jSLj;%QZOeV[-5"kDk07SpTM>O$'/ldAI3La/-,6GN48Di*gbg\i8<;f^-5c,@$c=+qKtCR:>NMh\N+7:i6`kJo-,51rKejq<I3n^EocX/%qprFL<_#;q:3keR2I`7"^])6IF%bJko6'm_GD2po.SO8Z*;][@YV3&aOG;,E[0?W$G+.SeX8R:`gcG/2k@BUTT)/AJQ@IFakHEd!%]obM`@3XH=gI]Y;;*;<e?al1[^nhBQB\e"[J(172n9K.,OGMjab,N*Ynh9!<)h6)CPfWgC/*2[e@PqIFL%E>+Dn_/"deQ?K/3V,O%`NY]e=LEq/DXG-Wl.M3"luX]6Rf17CGpB@eMYkNsa)rZ\1\4nLP%M9G@%Fn@N`@t,f^:]\C.A&UZ'AE@rtiYD@sX)BCtO860kb(X%WXQa;6g.,50!)*(-Tt`.QDoU<RFZO!5&HGKBqU[X,U.sq19uhCZkIAepSqKE[PeKEMIb+d66lC'aJ<ZJ-!suiC,rO_j82q!`:N.P%X`PA*bn>>!NL7NtD&ADbL]hrLBG`TR_U/#pr&u3bq;%KXiOs*+Q%JBXKQt&2:<?'$FpM]pKIuYWBthU.;)JlUq^W1)@472e0mZBd%fSprKLPM#/&*74?boLJ`EQIF"_aUVuK!=CS:,t51)IU3ubfdJ7k72,k;QF+(i\Sr]Ho.bHDW%;)cG2ons/.=DVWE*CZ2RfK>&Sm>%U@hcWZEo,(ZgC[#$A5mS?n$g%o.%/Eb[Li@RWp';2ZDqoJ@"*^eeh0j.<qAZn;H:;$5-f<d@JHX5Xc]c2c'T'Vc;]C:(7$i"(FbO%6N]LN>]`Sud"*:mbg?Fu+Bie<FtZ)TK%tS:_Qag_>B-&%LB5'>`5[tFjqrU%=l4Rr7Ik,%$a.f]>alStM%=O19nUXIZV1*V2'nAf%+;#5&@Zh.tHl>J_r-8XcaR-W;oD&45fBq%u`+5+S(O,?J2pP+ujp$[F82FYp_pMtV+rd+n(3PhNfaZ#5,gLutF+1?EUW]B$[oRi+%&n\OtmD-36]14lcqf6GVmPAR:gAnFd$%(7+cGs\j0\c*u*R7XjOFCQqg$Z/D<M(l/7"X=A&=GIs;E7M,mn>8=L:IRta72V4-ao0(%kW\kC04reApV>A21pM1:8$?EhP:gWsf"NK>`\a?)T;QLG]RXbrIsG`)]S#"b)4F2<#_0R?9>WC".4dbtha5u24R#PJU,b,nrKY;M%>="<_\5cZ?\GKQk'@kBul!of4b!=/@'M/HGD[`9kMsrOp]@D/+>L'1(#)3o1H&BCDB8E.-P-N+X2beNn10ZlE%^&UJB`ViRfQ@VS%GH+`i'#c(Y)b3`:#XE7WK)U-:9:&MNW2EAa6`F3.jT?"d?#8qDZ"E.bjEDrH8ho:j)hk+FEBT.[a2H$ePMOZ9/8^qo4^K4`]4d$j%djI<H_BShQLLA&n;A'S(F0IdoTl8\WAm^Add^--!d9G_hU2JgCk0[)f.p3XoD7RFS:G"kY8@O3pdtD9$4c\4&N1jW^FFmiCUD\\i%m$Q$8>>=;bT]D_U%sAn;F..)mqBRX\$Q?r0@MK]"Fr-NsfKdkupXeYg"q($oEV/D8iO1KjFS\!k(C=jDb>d!o1UAHU:g,IKp;G,\%@^h-grmnLLD2<Hc!).Gg$.)?SHDB^>MP;A=p:T9'h/6tKg-%TM6=*0*Al_UO'^_i_?)`BeV.=CM;\)K]DF%9mc/!M]nj4=4U7fEA%E2smr>aVELpdS7In,gTZ#PXV%`fe^"^m=r)b[_=GL7#.!N1ksd^W)SmW62I<3f%OYJJ^EaE*I:-6+sl<SWK5FduO^3p?fm/J/uKY%)Xmf?',!YQ_GmI*%31p>.Uh-VFP[W9ajH]^.^"V0[Yr0V2aHTr>A1-TV<*!OO+H"5)g6`[?p4Ni%@#^:]XITY/finm#e//IA`5Dd%Q3jAc$tN6PelgY[\fEr$Z#Q1JKAI)PTg@CT)qWHG'@rFC!W05NTZ?S2'p\7CVRl&c%qou'K6mNB1=EdI32up*%bqJAb1luWcWqsY%b\Z602'C2OgeVPk756F]<G/CLZ39RLU<Ss)dpsKbI1j9Y6'',#0r0kGRkNOcr?b(?%ESY8lVd>t2Jf:>*#+7\0C9PcoQYb#*SdgN%b..),fTPU#4>=G.Aq87a^MJFY18'2Y>O3.Fn7m?0.C5Y4A(<Pb<+3=Vn6AYk5,&;Zs"i/W3C$<*c,Q"X$ZHCg\tb3rE=>(a,h4N$%?)B_>j<+T]QRq01J62_B<'q%D/*mtkr(PacZ2$`fIr>-d1HQ7_b7YgFXb/oghRpZaUV/h?J7X^R]%,DQGS_-aJroVd2VCG\.)oGX%q.#=Ve0Q7_%6nI@bJ3#F%YMh+LN4i0,:a+?nM1mCj(c%FbP:),WmL$gD^XGAeu^(I5.LHHq*G_=6D-,D%cTXkVjgJKNf.i/?U*Cp%qUjs-hgakUj/Ch[J7`u88(_ALA[]!qq@pfakRjDBMuC))Z""$Dd2=R.$!4t?%Ql;oj20Y2_=)9/Qd,345Mg7qa"@1#HX"+1M:S,6%RsbPoDmGs]3[SjhH!o^*^W9/3;]uN*GeEb71PCZPi>T5$RU_7Sk]+UL,[VNJJ*E:XiA-,kmm.IVbaqT=eujM9!<Z6:lbq.r8E2f@%_?]A!_m-raVk`P(60Tr]hLGY$/=;S(>r:LA&rI'@1W"k>XQ=k(&#W4_CA;dGQ9'krCk(k=X/q04Tb"gQXkIhq&f5nUn_=&)^`s?W%%r7d'QR,8VGO^>tJlc'/8N'5s)r&2p^'1R7dJ%dBh>Hg]AA)Ar[/Nbi0a!9LfpK`Zgh^80?T:^lrjIN+du--WC,$i83F"S!J^>1Y%>-!0Kgr19]eFq2;.rSF>60u4"6_FJiaMKaaB6\,bMV%F5o6!9$H)'SdX'WDEX1-V=lnp0<K%!,pZeD:dZ40kJa(N;*_1bl9QJmaY%V`NA%gO*Eoan8@1Vhl;HkqI7n-2:B/k*>(Za%j1r1FMj'iUOGc15p_Ias`N3S"b&7$]YY&<hImoBX'rk3\5#1?-jdfjce2ID.Ra9%QGc6%0N(<\gR<n[d\6aBq"\T)S"_#Ohg2_dY4cT:&p(C@U15TfGN#QiUJ3TsX>-aq3I"'m`1nG92JM.cKDHDMp2#&Tlq`'*0j(]k%Mp3ibdHRqP'Wr$,_@^Ut3aPXqh/'CZ:^>u4Z[ii0,\bk2Mr,:Q4p`hq#]#dY`UYkk)t6?7K[d)#mGgNJ<q@t]1:%B/I:S4Hk#__r%OiCC>3"q>!%CU4jTP^-d,TkW]@f7q?#>^Yi-g#EXe:7FAqsBkRht5j3[u]QqS-)EI.-t(2o>f^<r)lcir6q3ahEr+UXnY3>T,o<u%n,O_erP$5O9uK>Ocru_/1!qAR"[fOr#B_n#6&2$A]@t(!2RtKsh9CtV_$4N(p)DYT+]Lj<$W'n@bM:s12rt^:_UTGDfEG>#mC,rf%J_'MP@PGu[0XDhFmdB1EF668p5"86*fQ>Fk/Yg#IjGfN27eSe=[O)kL1(t.AYE`S4*-aF"LZ`I]o&A/LZAY-=Gi5I:)n-!J"r[bO%D&L=3cR4drqi'Dsf3;arY"`**&]/Y/<op>0.3@3&iPlV;1\2[7#.h<[R]`1P6dJ@E[D\b@qu6<;44u2T4gYa?9&#Ns/C0@7\q^oI%)8c9,pn'E,h\ZTBl#.:9.q7KI)ohh\m^@58^(.K-5;2#.eK;675P=bpaluV$.AGb>U0OU\Yu;R/"iKN+9Qj.rOmr"tJ,3UJ<&-pe%LD?fcSS)<\<&\`l0@O6n<S[;SoU@uVZIt!4q`YO0L]?9"_6ah.pIcD61L5dbYk!NQRa.,X??3rP*UY44`X544fS.k_YFQ_m"k:@*%L*He4+8W]e$9YX!KBP%K[Pd<BBuZ"g1@2jd&#gPL%[ahcWrZBQ<*7l4O*O;$Y#F%'IbWH65,Q1QPG8kl>WsU\5,0dRa^&0-R2r\"%?fEQ/(,QX,7"LjHaf!*O3Bd^hOnn--eTHO6P.PXrrP&s_f\OASU4!)$T&u("'6M`;%t;nWosC+"<s9<0Y\Q1V[CR1)gYDgMJ,`ZP%D;Pu.;m4^Y(YC?XNne'KXM6^,82tJ/"OuCJ:+"9i^gCaM8:c$M,H^*RFhM\:ob4fr^%7QUlJ7\K:/a!r:i#?*]ljk']D,toGY^`4%9^%k!lmRL^XWej9n!;o4Cgsg0/O!rlR+DXVH*dG[=-TQ)b:G:cYgIXad=BVjG7Ptc01KTSr"iLsbK[-eRH)+NfXcH_3rn;)7=RZt%EE(PQ%Qk,[WaBWb#;A,A7nrXFRV1XI6<ilbNprRLEP5Y(,,RX79V8J*l"Ce,2;g:KG2b0pK_fWqV4lV#VZlO@Q@WR]6H]u6c"bS(%?B:J:qs/F1\L8>Q2"SL!Ytiq)58enC!*V8T:n#P`<>`N+'G"EdJl;5"fXGf4RVng[eTT5?MRk'p)8"PcdQ]1(Z_t+'(F"(4\o<._%H8*DiR$PM3C4Ta-kJcqqLG)^`3,j)qR!N51MVWP^PL.")Y4=\]#bAASho!FY'X>j*]AE?t[9AS<Q20ads7lc#Jn!t;]=QgXG1XaQ%_U?VF)DbM)e_/JsVXCj)P<UJ%+`pb>D>$8.caTmAL"ZHGo:PbW+7sbY$e5#1m)\"nKf?u'g&!39R,=P8aCeK*J:@q^IMVlDPCWXR%=Wk5cfN?Fh3Fr/\-$TBn-Q/FGqZ/@s)l"P<K4@ub5$fUfNr97/=T2rBDSqQWV%/$"rSj?Kll@K+!k\ut1&F(9@5\1@<dU!A`td(J%ameW:J)$Ba=@dP(02L>T[@\boXW(KMAW#.rc<<_e[Q>S$IE#9Z^EIu->1SVL?t-g@d!\kWVqpc19XH*eDZ9&F`dOYl;'Xk]M`\8L%I&1(jO/e]^Qhdm.(&C@W\o=,4^E:Z[0eE_gF^u_bp=1oU$p/YY#c1@c`6jRB'.[iiY04LPh:R)4,&<Jnn%-7YTa-'c`tNc[)&h-F%9H!/VQoaHEi>\e6i(a*fH)45PaN=ZYeg<Iq'Ij`=?\)S1$hKFkeO_:%Gt?=l'jG2GF$EXAS/Hd.L[iTUY,dEX<@uh(]8h&CKk!l%%YeE!VJig?,m>HmJ$S/c4C?g=Eg<C%<P*?8"%+g@WqTJh>3&o4+!T2DDN48q5?pQeRHZ<';bd0j4ZQ5Bl(BAJT]iQ62*oE-$.[29h%LnR[%dV%W2d&N[t>r7/_-\Zie]='62lu*5(k=-YbrHWEFd!gISi5=C]K-)#)fJ!4ac,eI'EOaB'Q=Y<ieRHB"("$DAW.=t&VAg>@%I]G*b6HdcBbhXL-J[m4pV_n53l7#86$,MlCQkC<#B&FK0fi.$AMHC)5OUX4bK4?IWYfokie(e6rjd50a%p_Yq#+ohgVVO;1U5:O-%pt,,_`g4+2(*Ue3fC8ngUu0FGpZu>o5$"O]h($\3MOW#NkQkNBKAFj(>W?'=]8JUgS\oa"4YUZ"03)r_f%jrD,8Ib+p2\J!n5r7_%(S0k-JXAl<G>B%oJ+FKT-Y9h;PK.*gQmRK;/cW8m!4ppZk/FPn`:[QI3ppTIeSVNX/-+X4C;3uD,n2c]<qJd/qn%FhR+&;2>!]7B%-6%5>51s95r3QO?SeoCIm!E*G^ZEXcp<S!.>1BCc\MSm^*IaN5j:mJ904K9]\XW'Zd`<BtW=_eocG0>NT:>&(kO"o:q7lY`7"Lh>%5JGB\dP"3OfS',npAcLmDY@!._FrRQ;3$NCoo8gsDRJIc[r1[96F]5g2@+HkFun^_($=@!`(*L<5lpG&i<@op):ND7Asj:ULi*<?%4(1(`'kYYt#sBuULGr_<l^l^O6P%CRZZr3=+6"/J:TCZ6LYM/il.tp[.^V7CgVrlJ,aa9mr)2pMkQ65':P>I2ZZ^Wse];;!Fk)km%MgN(ZJSSOBCnN9A=P$sj<98"c0IoChNsT/_dGF\boje1A.S<r_DcEmA-^3a4E;q>&9dXE>C8Xe@8,(2:Fl"@n9"$ggP,DpM*ZVJ9%/Qf@PWJC61p;ejsVO>\[f*Za)qeh\d@eh8g`ES%&gpbTt\r"lU6Efh+]cll[m#PGL5Vq=[=01M>86M(=605V-i]dX@-U>3G4d0@'%[V$/3.31+J&<9^L#C7lP4rCMC"tgKEd$<ZlAp=C%XOu;c^/'/60P.]BL14IGYZ)lFN<"#K/@_a<%JR"i17q>5Y93dQ<sjFo[?eEB%[eJVM6FR<)j`Z(,%t`L+DT4&RK6`%`/GdYL6oQaRR08Fs;bDQZ1/iVqEWfJlqr7M]:![\_J8T\Q0^XUWEA>\Or"mZ-Ia7cW[X\<I%.0==91.flFET.\c*k$`es,5bm`'iFjOejn)bem63Xphc;g]-J4^hQkLag,=@g%\BtqHNejO.1RhGb0OL]0*mq;c,:u!IZ=jF"5%%%g24TVNT;X_s2)[<&a;(DVq5=q(HrJX`Q#P"jHB@U.XQ"#s1X-i_fMJ]bo<uLm9H%)q&cR9#Q/7YUs4RFfKE&`8(ustR-+F(^$eck%Udl's?\!?>_?OMCF)WI9)s<`N%1Zla(r3KTh:)BRV,fP29bY7s]=ki2SXg@-Ki4n5.Y)@:2_/.C#0KTi"u71^qg[gh11Yj3l2)`.%_eb%L0=[\5+"E%LVTtXpM`-<d9OWeVUu=`>Xl+K@r-eEJmkjX<k'$ptoCne"Z%".p!kY!$eS2UHFHK%0'1LK:_&hhWH*![p)^_ur%_s<V=!;*B0]:PAu!C6"V-n/Vk70WSZ;Zra/?YI@Yr4(,SZ&%ZCf[h/X%ET_9<%o1Em/b>%KH%oTVBSiT1mP+6P/</P2V#3#R8Qc5%BW?a7ZC6F@j<aMAW'^H*`k6-IM2TKFKcg+ikP58?75[MBgdH*L:c-0f8>R3XBZ^D>q2=o'R0^VE$Q?U8T9)?>:rs_ENKg?X%G)VE%(X$>-TL)>.5W0$en5R4[SLXDB*+lP\hi8M!<>aOGq1GK?1BRgM@7f'b,NA;==P3[6?3)u@0ca_%M2%(iXt$EP;'uhp?u=B&a,\HX%3=t"Z4&n-h\18?BKrFK,+tOEVSmsc)"a(4X%V&AJ"lQK%aGk%80gesGXV%6><aB%q@0=V!fZFJqMMWc^pJ$:tB:Rig2ej]6)DN?I%M('Oj^WIZ0Lnl]Qm%Nd-8I+1n&7D2p8a-8^VSR\bCjNL"k6@=K:r'-V^g=E[/DF@d'b"%\[JJcg'hL80r'_qc5PtjUNcesNO<K/Q%Mr$_C<3bAs6L')'PK3m:TF<5R"''#o&geom-K_m9baQ80K48]M<5bG)qTu/YfKTW/23]P!GM"$u8?0NHhm&]K&e%_qe;XUT_;q^3%/i.^j!PB`)"0+YkSY-Pk*q7Wtj;+$7X7:NrPAq!T]s22,`kPV_@c`2'6mYqEH]REM+^9n2WGF1#FAldI1FWbe$)aHRRoiE^%@W$>%\2`1.@KN`FhdbCXDT1$QD'YEF0Gq(JagD2f3`At^OcP)4&irV>njdR:#h%5,"&_?\9N4I-ZU&]/]96h-33dIl=OC2pBF.5/1jfuI%>>\?Pd2Kr-)t#D&3`8]Gl@Z3,7*($k[2?s""W(KS*!oSrY>hP,j-WQB$6Y-QeG%F"U`"h$M7laeUET@H]0MP0@cNb?TC$IOVFVK9%_hP6CN`JDY(mH)>Y@/>j'#Q>h-G.niMN_:)nr<a;)#Xn]+0]1TJG<DZ6q:ec+R?SVTM$.j-.,:mnh3TQWEt;9mr\8>AeCdFco@Sq%:F9Kn1's!e0ZD]n20,_L8Ka"pLl;UDS2Dcm-;J!L"!k_W=R:PV:aQB'J/A\\,*5fBE?mFEE"t5>a5WsnJk%Wq:uQpt<@1C/#ETh6%`4!2mHE%m'P>tTQ0M(r7RoH:_<L\9$;QBsbFIU+^jM]0u%NR$P\k--Z<1'?uV`)=U'UYX(N[XPQ8p=6Ph6Q9j1&!5\/9R67CokR\%bGc<oPoAjr(fni$o/Uc!PNllb=Rb=2*3DL+MVM/Wb7S4RJ_X3(4BNm`pFg-b-"_?p`GKc%l)Q6K37)5LE](f:Q"XAR.ZE)98NUDa%;i<CjK%_,O%\us2>TZR;6^g6jbR=M%R?'2QQY'5D!UbH9NE7:lJUdsSRNdYcm1R)!P.isb><mV)+TOitBO@/q?Mn6O?O@'q]-bW(%o:Ub+8;[1u^/\8>=g'M34PqmT)CnF]0/EdaZqq!I_'EoA$5H,MJFR,!"soHIiU0pgp&a37L^*nL5>V-iJh@RV$j*0I@tcf,00mW/%j'X@FH;OH2Pp4's/8c4(!4HPkooB6>\kS5"hKapHJIM!C1@#@G)`"]g*`H/sI160X,t`-\\ptrZ]qTVW$B62/%[L"\5!^cE1A(qO%6]FisXK&)LU-<*QP_o.56t9(b?YUFq<cdDAXE&rO/AoXI<@'p<,&/b*S=5,KJ@n:O@GjKS)D`>!^6GC)Cf2F`&/u6r?VT\p7VK\8%K8?ne$DpYW(6]p3i-E1*A+(;V;_$b#e-<YZ"u\>I?36:R^sBN>M'QBVKlT&)BpTr7JG8(?D:V8q*f(j/Q-UUo+A.2u9ar"q$pKA5%n5[;C6,GhJpn:_SR_3HVXVQMf_9pAm?F*=?WW\aOM]&ZKK/q"L@3',VfWu(SWXr@T5f;I3/^hIRfKU3X)SDmK-k&i$nH1SYqZd%X%%^.eCqhdFOJV]!q!=K,c/DZEikR@c^NmnaelB.)[,1rs[HO6&i<0_T+fYmnHQMB7P5+!1eZX_U/U'bqa'[`d7;EMS2QjrR%`NBB%%&N1T<0q6[l#V.g?d86eEO+Y*6b\'jFATN_8VF!S*jA29>V%/3J@qcb[%KX0M$8s"1RM-Hk`@VP6qLBh\FXBi%FT`t+G*P(>d"#b<%=Hm@:&kFlEFQ7&3(2V\M[S^ElJ8Kf"&2Y#,Fo6^hi$8pB"9G/SgeL,,+([(aJsrh$kTXhZ63I-Sf0FbG'Uu`Qpoa@pM=1_gbnCgZ%GU\2Lam;lnKfm1=#;P#71fFH1:MM0ESZjDPC@Mcq[6&tuA)!65@kROF/UbjKU6,7HqJ%8W&bU:n$Ojh:5qO&"2PDZ!HqdL&jKFs>%VO@D6V?45!4CU[TPF98i`1FsXkR^(R;X:g1/W2l+FGW%G0rp.&r5%oDnLaW*GAJ*/<UU?2i#.1X!Ba8[J<$><+BECn<'`PZ_Ac1n%Yq%55\A\Yn"E4cp$?1h)hNP'6-GLcdajYi%R)rgEW!K&2Js6D(Fo#ijEtJsg!/Slk0hJVJ+%De-!E1N^H.AX.U&G=t`-i)gpbdoV%!$nm-k=X1t(N;tJQHDn>fOd[m8GF,C=cm:,4\HtUCgbQh`Ld``4(A/\7bE:,!>guF63'8";eN2"`k8:fP7hP?=S,II9$2N1AP$?3%8;hZAfE4;c4A>bZEu;@P@)j2=nO&EF2-5KN6A>6QK4bZ%%C_^57AG'rp`[`F[2lc90!UK<qQ(0u::eT"/[1KAHXgMT6fo1M<Cl[S%L7MN<CPH9'1`G$$KZM.;]LOZ($uC1,"Jn2Rg>H.Ef[TL`15MZ^mD\k=_.D&,l4d^m1_U.?*oLWRiX1R&]TbR)c]@jc+\Y;(4qLqo%6rIkmKhsH()f4Y8-3;rCe4aEFs+_HkJVZ%LRf_[7_2b/fLCO9/fPi>8poq\k,Oc22,DPAQ).Njf8'%_XQi_!kQ"#qZCZ5U0Rq1(Y%R^EEK8uW+.h"dqEW('JX9R5!@YGlF/TQj9Na@eD'Z%BG:l"ah6K0-#V`2ot)%:YfQSNA_MYc?+&/XrtMhi/4&AL`r;Ihg$OTK3%!%i7+7ID58$gJ9F9O^__?E+nd@H.qs`!lssL$_k9FSg-@n2;2RUK#+EQ'RN4te=m5rp`.k)7^_="^MaS]Ja#Q`Sp0ej]O'`WEju>aN%Zt.4p"9oudj0C-;f4ZGu57-eQYCZsHl7"]Cc/<WI@6rj8S]#=n.PoN5W&CTK7D289F0A#A_^m28K#+0Z^hmFk0*I$L!\PYWO_tl]%$]n0hlo.Oq&3.I[m%-C%klsdt#Gt:N.Nr3F,%c4^GgZ;Xh%W;gs20`o/?G4hVZ%Yer!/q4P_?OI@iu.%U=(neHOqiPCqc#hlH>kT%K*Gjs+mH95>#]6jm,c1.!IP`8N:p8mq_*5nU<1Nm>,AI].NFem/4_OE*ejeSj=+6lq+Fg8-F:nBCi&1#A8kUKPMlF!_/!jbo=kK#%]tZ-,^l1C!hujLGUo%d\V'7pTBV^=1@S#P\cjB@eCp@)U"J[]Hq="khp,-ZlaGYL97-r1I>p;Rlc6TJ[Qiqd=<FoR8J7efZX(NIL%^jbnVE2quQ`k-qTB&2-Cg<%cs",P&MS?&(_8O&fd)7aRQALs)1gB-FPiHap4!%?th\E5*`I7dl,EH3h#0iF3H`WNJ%4:/PuAEo(4%fM'.ri(]UcM'Q*6E$H^+,h!\)6T8TM^'U'KH,P4^o6_ZAh\f*Wr5J^D1ml1Vq&Dq'23rm2VjT)0-Xe:1g!E<*.k#D:OVGr!o=KbD%0uU@.h^^6(W?q)YM]/^U!a^"3Z^f/Xmi\0ea\#7b#9*0Hb%MIF+j#OSWP%YP9L9ZmBu<$-MWHrE_lt[I3f3\1U@\r1:t"Ickmd.$%Zg%%#c7)(JFV5s[l_:U;+".^gZPI==VT>u4joht;lH<bk,XE4!Pg/88a?$5]][d^@_B9(KK80j_2\)'#+lVmE-*.(kM+ghmi27uT%ZIh)I2r_3e"QQc1-6</68hmPBj<;X<q0>LUor9odrZ#hG'^r8,RJHI5gg^Hr-12<MM<Y@r11`(/=u'M.\.PXY?sB:afoW+,+ne]^%4UG5@ljgrm#L6UT.($6`2`V![!JuK>j1Ic,4TsGIf8+E%W$Fb.5]B1hQ:90IR(J'6lP<!1o>Hh<0nBKOe/HN+BW=bm7WaE3cj6$R%FW_&A>o*,U-&pRF9%F?sfPCOg7muNl5FtR!fpsE>(e!F$0/^_9cQ!=8S+s$li3K7o6RMPbS@MD(CXPSCe[lZ39TgD5UR+HDBM01I%(qYU--Ib(#cA!1J%#S>f`10@QFqN]NPR&;+fL6:oPZ[D_`\,s,"3?59Z&9/GW8'afIkZ'1>U-Kj!/PW\Ck,E%_rf7hL;Lgc*9>Ob%Q3m^=(UGa3ad<]XegQB*UEqNDVP@6!#G@3L'0ppD5++l[aY`Q^XtrsDW%J?6/qJTO6YAf:i#`.t?A.J\8ZJ''MWC14GS6O<%t'q_%KP<1qdHQnRU]-=/O621X21>75rsG/rp56fZh^/rY?@gaAWi-;S*SCOFj<ujA7#G^4Qb+.+JO4;[Se;WCR`m.PR13'c+.K?N1giVP%5FPtJ-Ofamh<YdCd7alR^BeLbK@Kh>(/tVh4\/NMBgS3h'6<Kn@Pa,M=>_+iYYTJ<5uNdu\UcVBA6&%p*Ht%_"gmfR$+dJ\Q-`SE%C2`T=SOV3<S7Z3;cD\Uo#%0^L[dsT'`?9KJ"!#nYg+\c%1H\AiXtJgiN5Tb($%RT$2cQMlQ:2b+J._W=RrnqsD6E,o<k_<mU:?hH%]i1SSX?k^B>sL+q/rVcB(cHF:ifa[C_Q',,BDp,3_FC*L>sL]CD/6`El)V)%'>gETbr*2`b1Fa*'_aDfpApp@D#NoUb<]TG=Ul&P%N?SuCbmk?oUH1psXFMP#)i-gf#MR%n:8;S.::%0.B2i;H"#+uiAD*?QN2:k68<,/g5V>&k1'E'j[-0Jb/uA%eX.\D.b#jpE4B>)e%0+"#D@4Dhim%6mJAfe6/=IsI84<gh)JlCq'^i5Lh<IncAFDnKtS1NH'JK$MncR1WgfH_"0P]MYQCACXsh9]`mC2PI-BRYDhf*6Ff%<FBQd/>@=O6IIKB,dI/s+>V8!o3en?&9mOXljnno/IS(`AT3!IeY*9X`H4K%K)>_N'.IFR>f($L!#K+W2-@1.$*K?Ye=gUZbttKI%j&oSHE$>+I,2(gb?"/YK5hS"s1d/L@o27fi_$qr7r1h%`'*UuOau/e-f5tY;Ka-gmGCV-s"3gq#$m*AIBPqNj%*+c<=ZnAB_[W%0%9t=*RFGqSV1UAnuaR,F0Hsks7:XiDWYJIS8m_9-\RD^V_%".M<7l4L<BhV&GFd&^7LP1Z229on?\d/n<N^,h]_EP*tO#Rl#M82\]%_7CC31s<hIac6D^2O<.sRSAdGYnjb&C:_NRXN;/&#GrI_YAgl]gSNZ)X>C/7go+?#&ns.oeGK2dY,68:N"ULm?&2Zh708$5'9[a!%'$9"X@PS568guY+A'6-UNOP=:4Z:tLfrMMHA+#^qR?g<]ds+(J@'aX1^\>=.T'JH-Kf*DU$`g4tqs%p(+8T8Eh#&bj>I_+OiP!(/%HNq,b(cKtoE1ek$As%nZ2nP\a4`C-,6I9<q3b%],('[k9BP&4/q4/;DPo,G-2!itSQXO"u%]R$H1J-\AW[&4a2),&`fWW_5_s+'=%1bbo!NpZVcHD$B/[I1B1=;"-?,f<gLYVlI6C4AU64_qp9nLgjcfT5"h8ZH9[Pe.9=[X=$De/cMiD9J1t`!4/egt!m_\0KrK26n"=%TVt]K*J]ccW&u6P2b8dMIP\p[kmmJ*KI,!PQfMRK&S2J,0(<bIpt[I^)O`uBN8pBr0:tt=ne!B7kB81Fj8^h7Z9oa/P)9:"_#"V#%9BUqo'0ZW0$UOh7R1Gl0/B/&3imLHcrg[tQ8"_*e&1sHuBX/I(n-7KEp+jVfU%$2WVX?i4CX,Kg%MT/fAKf^O,I)p.W:15)VTBt$%Foj[2BOC<Gb?@JP:fltu\1FJZbYgZ&HNpN!b#SahN36<8pcCC>`6Lbkc;2>&OB.jCT?mrEBTbhdXRK9Z)X,m#<B(Y:[JaR$L[#Zc%Y)9=kC-n@ga^up;k8P8I7I@jIKF91Vk^)JGWfC"sfnp2hG)lN&QWZHbNoG"hkX!mDB[YM0BPT]f"H#m6`5Y6`R8QSrL%fY3e=)#]%L,4Dg8KjKZNc,I!<ff0=[q!ISppS<N'EjO-P2)<C#Xql`\9tU#ec7_MfbtQR-,G8QY-5tY>3q03;Mq]OX0TGXhm#]fFG4'Vc+,aD%KA=>dFIbeTUmHol+/bC-!Gm$.X%18bl+h#=oXd/29uV%^-G(?Nr@S::Ro$C-cF[7'dTg9]Lb9PXnRK$<EhJL`[,jLo_+dXd-#AQ+%K"8&]B:puajFOW]P.]t0B$"fK@"2/T:n]U'nAV\ZJJN7eE%mQJRnXrS)<GJoB/rr5d$T`F5mlVVK;0+aSt!QYPastNT[;BSbplp;%TI!)XS'+*ZAQrW79hsgS2?b_.)LJ0nOTc.B']'_Z'4kBVk%`]q=5_<FO'1HUZ>BBirM8Nc@n+ad!HK[]7=q`shTG;G,-j=[(Ek.:%B-/+`&<&np>B(M,^haF;_7<.7[?J+V!$8n>*=GgQ;Cjh-M;8[i1QlH6n,].kMq)6YW!A(rG[aLVJ:u/_osp_u6V4U-'[%2Z5sf$\%>B(9sDmN0dVmh'J8**rZeSR<39K,Kf1iC2c?;sURfJb!Riu3e[\YG`6##17LE(hR3"::9EP[t9rBUTbt8-VC;#'I]cgCbT<?pZ2b%fGrn4%UZ!0U[u.+YZ3k5j:<Ph>7trK+9uG]"^6MJ!i[b_p,9nA-eU$s)I,_F5$Xq9q2)?1-*UTM`%>17B\!=oBJ;n'?;RT46_FRk%fk0it.bco&@=it=VMY)ni,=c;LR(0g>(Tfu?((2&C^E&WH+(!ulj*)N\YR%$9NC.nSC_Q9mTo;([KUbl"qX^f@^71ei`7U<#Qh\7%(l#7o<EPL*WM/I9C1)`0euBke6fLuF.I_bK.4#YRb8FGrKa"D[9XC.IV@/VSj5.eSeY0]8K-U.9Z2(V*,4FkP?X^.t8O;<*fR_tD%Ta?&Ib:VBs<#"G85Z(m/qI4A?k6bmg8I>qs?R]s1@?DoUYh8Nc<nCOTN[4+;FBbe;r5O*n3(T\b7CB?P:(8CB/(RNS=Z#%F[*UIA%^>fN+0ScE[dkmWt8s=30!L6?H>nF!Pe8Z9P&n7^A<^bdeQ5nJ78-u,RP+i5"$jq@<_G7qK=d%EYLgkG'$s&nR,!<U%]=Jp**&.qm%!B3$%M[GRRXQX^7R5+ksA:A/RJeg*CDP8ecVI?fC;^LE'UJ!Gg)0jM3]$kJr]'Pq''DQ[g[_/_'b@(Y<=7C-=6SR0n')n?$H!iFg%)$%8K&h1e-<#9X2.X9#Pduh$Hme:?T!i^74)Q>2YRLO^b&3=>^enWNa/cM&rIUl7H#32R'f$Rp)I`t>5gHJ`[\-rbmZ3kZ92*%f!%(BJT?JOY2()DZAO"J8<(2Ym/p<p(eSA+C2iD?Fn?%i7n[_+E4GWDb#f^'GTX)(rb+J8FfN-UVmB8Js@(-K%>t#Ql3+S4oBYTD+XN%qXfQ,V6X]6OP-m6):[I)ZoE@bG"lVoQHfJb'0#OO8Wb/EW<Bb,3SIC"BUYca5b6J/TKJ?r/Y&?HD8!/aL*q`^MTcDibZ'Q;C)1,'%5VOp,TjoXnObH=WAe$:EPN"6kfs'th,SW"dljp2NeCfhHq%FFkJ0LF,1UWAp9pV/pYaJMZ[X"H.@65[2*S_s+Cdt^-JtgH1"LuR$%;8gqoX[.#A$89j1WgUuU6*t)]HcJu#(A@rDfO/[("SmEKdc"L:,7uc#2^WFRo.6_XrC\K^%,@qn,V7]$'K/^+",53?#l&-o1f#LX%pC&boc-lhOCRAq):r&Tb6Gq`hhF.c(1PZ6;X26as_#^ja2D_T1M6.9)N^^"$ctj'%'lKJYMCE%jr#32@$<-[QODC)6d2G]GZH,eA%7OjFVD[cnHGjfLH0P4=pC];NV)]g!kWArn+iqj&XLFZ7qpNp'<n*@^TIA%Y858i'tE4mjn(/1#ob:V_"=t$>fB5Zk4X=KB8'8X&l%i@N>*_I@a1KCR'#clm*M:;LO.\ise)iW#G"1M8-r7[pNJ7RuarZ&2!ecu9\<;V#M%&W7qA#IV]`V6(o*6"@!#Z"Dcc/9;p0QmOJ?%QW]6sYLTU8%Q>W(6pabdU8$%mP<A*d_!2;lF@r?0#$CspH@2u06>^Zf65EX78?>FN\(NPCNTEN/'j%rS+:XFP"8Z9I38$6Uh+;oO%E$s"(nmt1#Q$-8>JI5m6M)8l*#*/!D\&o9(:*BiS6R4<BOm=u<U%L#IR2"s,fRjj&in7Fbn!M[cJGC=o20UbtKst062Be(/A%c[W%K=FJj/_DpY->5Y?RsBJBg8HRb#_U8D2+KNX"tnkLT=?PtRh%b1WN/;BKIeq`pD2]3MP;dAh+/_VYk?a+CU?d))$ZY<<1)`[>.icI%LdX/mqVWEk13WgfRt4LJ"0fm`;I,_d-Bmi&83pE=!D;+aNA"*?JJQde+^#gd'lmMg#n)X1:^:Bf-.W)!!\\0dXGbjlZ*-o%&):5f%BG`\X^gRua*&LfkN7'!)j<6LDAj_*(<K`:WqtB5)9[;!1.TGD3<a^fHKhLlkI;O.G5iA:_LspV=8-VB`LqFm0dtk=3;e#6KqRj0l%[a7r!P&,],-4D`<R5@gRX!R:.-"(qlJ5Jksa$S#)N2(\j,86AC7TiGlQ3];YPEm]7NZ\&MMOW_1R$NpT)V]Sk)9BJU'onhbl.P'B%d%i<@fHAnsFK;>f3uE[I9O\)P[VgEri1_ec,&07&!LHe6/mPJO!k,P$1IT$Q.0?0)LetS]]?0%>5j=u@`<tXU]q<4r$4sFlPnAEE%^J^o5Q:L6V1I;BG8KBLHYuH@0T/(rV4jZ*AV])Q)b._Lo*B_0SUUKRp*@utQ+:KJMJ.ot?o6fHJ5V?!q%Z`ZX=n*An\s@^:%Rqe/%";la8S4GgF;#s'-$/Dd9)(Su_Sp9M0FLNC"l7A$eE<=`c3.@3BYL-uIbk;>CE:/&CgeR;`S0A99A<`7)0!cH8&5PnC$\YAA%/GHj%kj5_6\\?^fa^Q,j(,#r]2cLP[Y40n1[#Q)9(^1Q7Jhef64)QNO_!P/oatF!J5f_o]JqV6V?GR@iPg&,b=H*USDZV4b$e1>)Y9%JV%$RMWr9Sr0W#ogBZZCTrrhgm-lq'hL.>![$MNbp'[#!l`s=_+U$[k*qE'@[iHlah'P^ObZ4f`4;MYkN+q%BrOB`8<7n@Q'p`6(mR^%e;<G,4+P>]#MAE7SnGr[#`m4;WON._G\?;'9V0s0)s#_E+]].tUF\%OW2/tq,<V3eif_pcU-V*jo&?>589rRq8_c-\hs-0kEI%h(%)%E7eg!PFk+PSI'!_jrYA1L,0C#4$NM&BoN%pX,lcu)1#R!?Yr#8P$?.+IHiA]DPp"Y<i9ZTm$)nP:K).NAO"RoKuO(E-Fg+Yf3(%KBFV[?j7rTliC:U=SrW_Y,`-XPYFqS@0PK';hNG)G\!S&hU!/;K/Y^3M$gQ=JH^!1KFLQYAP*5Q(".%KT$)gr4HkA1R8"YIDR1a4%Rb-=KGqjG-m^5T:.P?dGEYi[\BkdkQ-\]%kKS)@G2A;TP1J?LHn`"t)>U/LC^e@Jm#Yg"T-2$B?H)oU*.*f+T%;@08X/%CEq7sH>%O1E&Af`5"M0V)J1NgaA(6l4]L(#BYX!,Q'n5;9Zdnm#s%/:-+sM&4qo@jKgX6d]$n]OIfd2ZhI>S#i#![a*^'-m8Y\6pq4J)["Pc%_*%d6G4gR,#5;-l<#21sm)H;BKhmHpN9HS>d?6I*V,":SA(//n3O$oj>6l'rZ5u?BftK;W04>#`BmHC_P@i;IR/u7nURO/-%,7I$%2G6l,R30$q5e'BtHf-J&P;u=n`mUJ>X0NFJ!WILq"q?qA6kPE8]IM1tLA_?V.^@ulo.C;n(GOLnGLW9#=MtFLMfT/i16YI)hA=@,%cO1jBTb@.U9LYWP/8A>:,qeg?j98ZF-OY]'[ikM++`"7"I!ZN]^r03?h\r1c&MJsba-FU_`\>e`/r7ti#R_;`UZi3F>W^->G+'gk%6;L&[fsmJqS_9se"W8QuKnr2o*?$"1g>>EVO73(gpKK[QR^(OAr#p71&Ia7]XWR2uiUa8890\``2;6ANC(B%&J(NSHh3l/uUY/@r%s#*5n/C[n+O10#?oD\8HH_.Y"XmD!-e*52K["#e/=eDk=R5>gKlu,/hEi\&hna#Z/.SJ,)%rqBBhAY6XJc=$H1H$;kk6#h5D"5DD%K87OnkRq)`l[Sb_:WbP4*l7?X5#Z7J?\NBBLk38fou9N#]0CAjYBRn(XT!Ut^BlmCc"?23jjmd8SLfi5[@/nCSqADroDL[jg;-".%N=+L!h0(/=:5!`5Fo-sO;#AJeor.]bo"iYqY7CeLiP")rC"G_aUAb!HRY*cm&7W+XpFfWZpfNf-X8^G[BHI9`s,O!1h0,h&>FE%#%G<bB=#aDaZpKRZg9n9Dq6*5't!RRZ;pY0ES5;U9)n%IC>8).s22I2rmQ["=;cO]?6"$Hkih/<2ah<]RJ+mRt&5:Eo(^#$ef"7[P8%33@\<dC@;d$n"h'Z8-"^'Qj.[#so$XDSn]sajZhI_C>CQQ108<@RLZ0l?G*H<!?'7c609FoI0>RR.0R5<hrH#bL2?(Ft/XSrgctL%,b;eUkL3VuJ!@]dAr"%YRF-HmZ;jVOs%%XgZjokUe';%qD=enhs!P[$Vg/Srl")E^BI2R@,3nNG:X.1hs+f4=m*#lZ#`pEc<kp15%OnC7l&JlTV2%))PrnV>j^>N.MrNCnZi?k-RaR[)h&VSoe73"/a+XCb"f.J>9AbmrQ&TC4;2]F>FNP<2BhRObh$29Ib9[>G?PMl`F%U9S&ZMtQu#JH7nZBaTV0ZDA\k,]nf&=_CRf4T#SL6i>BP%:J+)/0nbI89".3$X#.^ENj'a<oQo_^nCc,"n+f*L&V&d#K#O],iOM&%R2'`DPk<q2lY]M;J&N1ZU_pgn4n'7Dr/MW>@1>VR%r;^dnLpXWK;oQ9JY2uUM"kkWC^?O29NnfcnkX390_$$T^Cjf4N]Jq=9!N!V%(.>Hi>(gCXVsiX$l=7p3iDSXgPLRc<USFTH^h6/)s/Xmb2gG9=9.0HtUEeGAUI([%[%'FQi>i:*"%5fW0D(^qG-KtbF_7ooOU)ee%aF#8YHPiuT"=Quk;,!AfK<@etLAcEIK_\u]"IM)E@0pTVD$Jj$#\XZ,#D=I4I$/+NFo$V'liulpk`"0S70,0uZt-%"s-QAf6pM-5%AQeZN&fd8s3f=1XpH!k>!IPVQ3MeHl;ID!80<e:,lHkir9-uRm"j'cBrP)O\?7`__h>YGRrl<54g>7#mn^d%->5$04/:76`eS-no%YLmc2jt3kp+3l[iLh2Y4BFQb5Z'fF5q251'B21j^p!A!G^MR<;?bP?$e6;ldp$]dG*[QI'W:_S`DFb8i&4RpuGn(`%`PnTuX,3uQ%$mn,`NkF#_m0WX#fC.;f+73tL0b!+BML!rd7k_-B4C8;^D3VY/6c4b91U'O-@@Tt<9B<#"^V6;o/K!XMd:P4sV_MRu]%1?fjl`]?%h(R@VoiV,HbPmK?#6+;c!mmkjc.VRCW\K]#C"?KEM,(b380YF!59b!08(;<$nQ#%+OsZSSofDKSVcUS)d3D@V*m!cBM%blo7trj7%[,n.?lB7I@R7(q*-MPu-c^`L3LgY]0=48rLg=f5uhEeNUp[Rq*_T0dMJVSk!oksf??10[`d+I_<*s2IK5hmsCD:WcAZ[_3.fj)!j%-bE,-"tP6-JH([:+S6K!<nLagRK#.$5GS6FQPA[8+K*R,nbHQ"\l8b]K<s[F6RgO"s3uCnIX@BWRF`4YODhMrp.rHrn_K`"2uhS*%*.b##Vq^Pq]768*m6Aj5#8![ID<N%l\pE>1^U-0c#f&]]r]/Frkgo`F?UtgeSa2Il51T9I`/`R-RHJmsrr#0-Ruk#dJtW:\`+Ntc%r6oC8n6@f^4Z!?=Q(H[ZIdNfaB_p^@K)7dI>2SQ,1n)&RnbgjKgC_a-miGpFisWP,hEP2'DNgeV]2.cppnRjjLI$"O]D's)rPt?,%:U0)THL$?/L%\h<5GItT3"+u]rq6$'2fSe;kl-A+]%?e'Bh$eL:gEnlS[,7\3?6"MF?4*=ImlBR^SZ1V`nZOt6*u5Q%bo5m,N7q&%HT/56i>B-eCcDChB_:2Wm"fi_2t'@;To,F!Cfg)MO14k4P\m[ss5n_a*Z)2WkB=Vtri.h_qhNu<,[!Rhg>Fp;8a"u(pJ0I-h3V^p%?IGR2^qXeRYQ+Bi9nb=*rDW1YrYmZJIj9&sf%c2aQra+GZe:-9):nE:9/.(*+5[O7:cZDL&9=:!qZh?Z_tPPPrm-\6rm40Es5Dtg%kSJ[?:ZSPd?2r.d%GQ7*kolYkn"jQE+!.TYlCb;33<WWmIllt+pB%JY^X5sYm9oa)p?N007$FdkSo>_A%;L3FK&o=3r:00'ZgmSW%20744[9GlF)OWbgrcg_9ZI*\SZ96$aEX;A'*UN2]X<gAE^?Ns'S,d$\oKY4aN'-^U(GAs:j;GD7REofi4PN+!RC@)2V\@eW"0K2l%Dk\tUR*j<feKlR>_[?+,]m"@p_o=ZE_rM22d1e*Ud0a&LZPg/hQSEqhEinBkVr'eP$=AW6N83mQ^O)M4_NgJ&cjDrT1HfW#)nH@]%bX5/of\FifHulUZ7#mWLn#Z?2r_0<]dB>caZp+>9n`+,V[K0X5e\C!jl>Oq8UNVD5pDUj7V;5uF)hd^<4D#ped-eMpQGqfU8#J.u%*a>AK=Cihg")!1ELo6sZ;$uT2`iYUq(;fd5FZ;nb=8P"1TEf`,^!tnV*H3&ii+T]9e3GtF=hW>mn(%=5kWH?>hk/$;V0/75<kW)a%H`T`+QJht#>%3S(Ge[cr#^]e9L]bsW]C"dPn(77A5W@pj;K<HpemWme",A2p3N`<qmf0Zj+,I8ch!::qZi,+&YsZibHt1WF]D'.%%/q@C<U_5==KKK`P@KA%0"_s_p&M;M0mXYD4*8(^/REg_VBc"l9]dqobircGerOY@0TSM+.kS*cj"qX0&_B7aKm/:TW#fq!RKE:<W%%"uI2^/nBh($QJO=JYhmclug+#M0dqUXSI>Lkm!t+/)J_]]rA2NR!TfcJ),Kb*dE\0@@e)-oPG[c5JLbJ'A\>++JerK\^YCh@VRi%^F<JO.gbVh0#S8_\.`J6Om.pBD1_r!\sY5DFkFRBND-t]Q3ghZm6c"A=UONGH`=KCCoj?/re.?mGNuPArX-XZdc]`((C!deViTIf%';0`Xo'Pa!dt9U>+aoG'enbcZo)dc1JP1IjmUmFif9,k%l2<`N>q(4YoeJ,;gfbk:l"-GNi+e!iq/3psSS-T*:+u#'4uOU=oP)F_%:?qcYHK+2@H`nZ+/3IeGp4=+(mq0m=!6&:ElssAiQ[Z_>IGg5EGi>Sg]CXGld\.J_Fki\\1Q'W>q)nQV,JaG4j6-:c&ja=HlegUD%&\q`n_nCe%iKl3KE$W^bVjWsrjtgIW8ChS#ga,]K&!-.A1OkYY'qo%sh=g.>]39[)N;=ZZV"s!5DM#o'f[racCgmn8ikGTUp\HJ]%:pBH,KY\hIK[4=]kDZ-_dqJgC>2PGYeS.DmS/`LJ6FMJjhT$EF\.OjJm76KqB2f8EZ@qr<3]mg+ZA%uu:G>.]BD_A0fBa%6p?q2-%/'0`=]oTYkqOlF(/+PpR-^_+MECU%`6i5D\cQE+hH3hcHY,"kF,>SItE(#2<R*l6>Srfd8:G1NLjle!Y3?nA@AA\2)ku#K&6pfec%h>a55&^Uod'&m!o;?U03X54^HD:!_T&d%4(c#9hT7Ctd;4lZq2S7\"(d#mucqY^9-"k4(KTe!_&+Mk[d63!d67f7fo_]djIK&bW?%d/sdpch20/"LsI3K5Ql<+!Pgh,U,S4Y"R+^elsC57UYtoHM=c/??LqHI+8i*$EK36>?nS>,3.D;:Tmo;^Z=@G+h*i[LRmjKq`F/M%A#\f&-qH!2/Wdp$m(:4c<=0:J\mBuAPtA`^Dc'%A87.$j\NJt?q@U3G+i9?,`qp+)6tW/SHES,I1DW`AEUW#TY:t:eFDU^/S"dM?%\+AZ_GJV_62Q.?PhRIId:`,$KNIn=XIZ%d2?#0O94*Ol\fs10Y';u\*RbH8`bgb4_F&pG\p/@rmpV$ua;mc5X<L*T'bl<EI=Au]S%qYB-O?2:SIT5<#8YL<(js&DX-S/C_$M;.-Gfp2N:lWANmoo_>(>uAaug!o/fS(Y`sD$#0dACR'-ROYY%>#/E``m\^-LJOC;okAUX%(2'I%NTKtFZ^^tDV=n\k`P%hq;tb"s1R%4j<@^550#Zb'qq[1r>h+'^b!59#(:LXDocn`B\(]DG$cum>_8tA%G.ZJpb/M9DCt`',%TtM]iP(qQc=i;8Jc48EShCc1pHuikse@g8rZ`J#c(KPOinP^nQWd"29fZ$F^!8ApJY.Xcq_5i=>T*FAiE6nO_]NNKp*sqR,[MFdf%ee>%[>j_1JC^SonWuJD0m*Z31_"qm<i5S5*qKPNnP'hT#bbfhi:B@eZZY=,\Og5qX$+r,VWRBPAMoRnZo9O,/2oaIoHMXVr2D8(0%iVY0*+.It%GB;e)\'d:hh;5JbS$BJ'?,+UJgGdhTWI&h6'lV7HBB>-.`XCLhq(6EbOBt+:o@8em4%(t0#I34O&rWO"f6Z9@>42ko%ZEb]d[F9eR6>0pnX5(Hd*nm6E;I`SD1ESZqG429a3Z?cLTh!<bN_[j!B\)X[?hj%j>3P;<,$P&8oWEPUIs:6DBuPJH=*G]@^6:`3%*7R*7i`YKP`lDC3@++`$7(4Pa]De!8a`lI/ZF]B]Bl@]s595XelrAO2e<d=2rf_*K=&N1)hY3R_Y1t]Hb`h+=1MJE.9IlCS/rKao%)Y<Kodp+M=dO2"LIrk$BBdLG5M_FH[B<HU_I.s[Zcq0:aQ9;(FY4Z!.4=S.dkE>^9YIjPOmK$"M`06q/Lo6]PeMd+/.5\$T*^HQW%olAudHL#OQ+#GEU:>L]Epk:N+CXVd3n\&J3^6A82pM/'N<NU[rh0(,63$tBJ>b\]</p@1?mJ]5inRQ+pp>0^cWGInZ""#nfA+>9%%Msd&6?FB*GWI/&9n_NG7\[N@Sb[-h9:0Lfr3H-<6kMi(VWVNuNkWe>.Cpr*a*%et%b6-Zc/h_.2gU$cj;R>DO'N(6dRD5WJ?DeI.%8WD3Qk679\FSAp]mIY!pWnit_hb!"2^O,,+r3:f#NQ&SXh-]T!"AZQ,q,k]A9R<1m:03oJ^I_r*hV;H6DQhGml20jJ3dode$_6kI%Y.C)5R^=2C/6uD';SY$5?>K-sVf0ljbBMBmRbSCCoXp?h[/;7>pB=:'-XCiDD1;Q;[ZVF;QVTX!8M@QEQNJU`I*D7:nYEGbi*Pk/%l2L0'ks+FKiS1Q:iqftLV"ai3Z/;@5-H!2t8#aJ.!!(oAV8qWRli*(hDC<'*\R**rdaG<U+b[X<]R.&dZ^1npND*NJlW;l.AukfM%H)ncWWI[]`35:c,q"]5(PAYK58^T)6g8F%r"hN;]HeH;N(8^s3*D`[dD'l:N8Mf2Zg[70tRN<^b[ES!n]MV/-ZE^pq)^'iYD4=51%PpibZ:3AHr5$T:qhY1)q?/SGKVq.je].dsMR2!n48`@4M2J\5cd%obFn"ed#XX'HZof2!gC%XS1?X1X8Wa"YoRVShm[ls]cp'>1G%m8Ou(n:A84GL\q76'Ec#e@D&qr]X,seTLn!o@D@_H0oM$q,QKbh4OQ1]!QOFlMH&/;d\7Clb0'=^L,A+PZMJWq1U$jl:59_cejI[%?BF.?!OS8q^3:DEoDA3mCED>6omgEHI7rG01%FN*r4]Ks]7"p,3Y(qm^UCVX45]Z0F\fTPV,I/No;df<cg;U2#MY_49*&Dg]cO;E%(MVc6Xb.R\EDgAe#@]Q)JY2$HcI\#ooD3<<1Z6mX`'n,5E]`42r:8r9pENHVk4<qBjfr3`h>.)^T.Brq8?,8]?OoogJ+XjU.Habk%`"&r!IAso]'(GSGmrnQ6C&.dTI=GdteC2.h!lXMnD`N7WIf9'=K$crX?gCe9`nZGSpA_OGF\qMP*B&Nmp+"n50E'UmoDLOqH/,o#%bT:TrrS$XV4<CQXa,'rsRMic'h$k[FF*O5TK&<m:?frKFHF*?=7GhI%SlQNJnb(Q_^L%SVr-@!e/oP)Lf:CeX43@.*fD%Co88[)2%KjU3n+mns$^f<0H>W&!VhHQ2+?F`rr\HL.pl'7<hZe<96nd#/;"<(r^2SJj@A>-&"PC0mNdJcP73Sh^H3AY=BXm[R3NaDZlAI"@K%f6'8+OtF!^)p_)$iQ[XL\s%9cc0h+-ZuM>-lHV_#jG'/q.Zj\d0;@eq0:[DN`*/[19AX)/8XrhKFKYP'%\-KJkDdB08WEP"DftGE%jSQ)oY9-(XXj$(HP?'0hCHe`_Rae@Wiq'pET0"rJV<%pN]f<!7\fcV!Gl'mr['@,#mnB0RCRlP,PCdo8!\e"da+%"SqDrlL\al4(%3%;G(TK<;C'krk&GBaUdZlUu:79Xj(IJ:*N+pjbR,a.aAn?)mh$?WA^ZfjDLGm2;.G^B9HH4U<GNCa!XkF8&l8:pO#3Hqtf)e$\Q%cf8YCTGFbEQg'E7>\^l9?`t_Qq0)4W?pFKl!T_!9$lF/\r5MeJ:CrKZ=6L`1P$l"tp*";7`$JW**\AT,\9(rJX/MZOZ))9CPA$J3%8J@OVT7(Vnj7()OT4$?ub_9)=>EkKG^WJqc;ooR\g"Y:5`J$MfAT[!MO,`QEQMI"mU"a]*/FD`m31:$M#LMF-PkjRd%f$TlWQf(`%.KE:qI-(83rGrRhe=U<e,rtfc=]@&%;;%$+eJ7ueJZ#]rPCU=>j+&+RiI$3:s#:U5EhE;Iaa:F(qa5j`1g[pHL7b-MF`FiSm/0oX%.D?@AaL+5p$f9jrE]C:tT3p^PgOl-B4r+F*OMNOn,<Na&?slR09>@[M`%2/!jAr_NqSH-Q'$,.(BDpa`cXg(s5PIXA%+KIZ7sr[H%=2)ADVfZ#(L_K:6LQW]fm;\c<6V/odpF:OreK9=,]gXE8q7s.TGM%,sb(94ng:dW<gknSQ!SEZ&KAHtYgB"c=)1ZB2-$<X5Y;XMR%YT;kDIQ48BaW1^lLt&LjSd4[5(2*M:0&g14e+W*m%V?DbDMV/WdTnTf_K:59?$ItZO"uW2=^=.ec-"j\5Hl8(*XOO(X,3;g/q(s+%`o5@F&58Br$^obs#P5]QcUo/;1&&A^cddDe4Y"XYQ['C4d,`$L>Uce:5Nl7lhu7<ZXNj6o:<N;['u[P%T:9)XgQr!IbJ(Ga)h[H[%r>iiNT9\;+rl3gf8(a)S_FFq@4-EC?K+EWNY@peslgo!BXc5r!.KGd?ZY+Y9*QBp@Ae`P";/oOb6+4_)(lJndhbWQN@d/a+IC/e4%fl1?8rj"nXAC#u!8nU:!6om0^qg?bR[[fMGS0-=F!`!]j8GDnc'_VB5nR3VIeGK&UFZHMn%Man_0j%qb?5dN`S6?C4k%6"TD%_))%1n9U\=J/VP%`B>j3sCGN.GBTIUin>-LJdVDf4h_R>(s"TRTMUGD>#mph8&brW%-bU&)O<``TpVg862[82=[qij]`Hcm/ABI2hId*%q)Pb]FLL1[<0d$s#geF2p'nln84mjV7pf,YKqOXt"VQMk4Mk"K6DCN*SqR_MS1J4g'o9.,[qs/%ifu*N^gu**pLo<-C6HaoDAJMP%HIPF5aiT_n2fXbI>H@OUr59m1D'b)<d3],QC@$J&>7$O&r5_CD"[Qmj09>j3'(o01=k#86!2;/jjk%eB#QWT9ii)^&i;U/cO7u/;%fNL@e^Ao;XapS,M)^*6QpUtc2(/3^W7&nCP-]g+%i]`5qOA>dj7s^H`Y"&O/*X02o#(\Yk'b:>24p%o-"IAqBDtNQ7(Y:/*$:6kg%0B:aYG!/nh^d=2hU_XSm7$I?\_Ni->niN"u(KS@K0MEpU@$9@=b3s^nq!O'0$f+uq9_4!H*Sh`Db@B1Q^36>bn+4u6+o5e*_M35`%7^pbSE%uLOriM.d(`-9q]0gC_*`A(,L/*Q<7O/-I*><9!*aoslP9m[d^#p-,K-kR*IXj,3#lOUrYhR'3cuo)rl\R/!GP9g.d#/L@%&K'KlnJ(E7SsKZd;5Fgd?Tk!'1I'DA>=LF%Wa"Y+Fn?-R4<Z0A>Xu$'LD#-_Sql'Wr+..h\/AQP!FUir:7k+a50u#/5UV.7Me1(B%,3AOU5eFTg*U2F7W3D'\H`[Wb)"GH;SdsY!/2Ftm_6QqbbK&<t5a,V1Bi;N?5k*S.M*dCnE>>*LFI)*=Z1<q8<[>^kc#kBLT>iki%0,;b\Z&%F&G"8h9Hhj8Np[MYZ(W):=o9dKIVr*NIaf-S$*C_l[Ra>Fj2nO(aq+!3Q^hQ4XI0/:#JqSr\Z\Y7g`D8E]F5P-<jK]:b%4.hn73TkG1ScV@HIJOR";1"9td<_G$O$8",%DTRQX&:X=1,23b$Gu&_jELVd!_&#fpWk4aBNTc#j%M"&i)-B@p56n9%"(+jQC@dD%/B&d!/0Ic<pQ;RLJ`[0ge)>hr9lpc>$X(>"n!hKAVlh`p++/6]J^rs\Bfs7r4?Can6oGgA7V:%UTi-:uO`f,`1t]b'&)aAG<>icb%f>uRSFB;.q6kf]A%#m&2OGgW;N5sX.mPn&h_,uA1JoAqRO^*9.^k9`B%-BHY-!*4AOO18UWQFmY^\rE9L`.B!=@3pm+"u[j`IYiL%WK4s1.:=RK@tPd0dHYetKupmXjhrJtkO^-gmk4cgiFlK_14joB2i8Hkai53R)[7;7^(OmN*h=7%9DFC"(HS-@SFV`c%BmX-b1(Qk%G]X=R(kMQS.sq$t3YE5WSI6>1q?G*Z&;`0JUl0uUU/Cn<[sL!+&$m`R+P[B7h\!e4?[^:Za]B)CH._F3\dBM-[E!;Fgmua&Uu4lq%?plOqA'4QpC"H58;J`9N4]3^rPdC^fCMnS#g?VBR"Ni-Z.t@4P2^NBH)!pu.efsUMnCJTrX?S<M%mhh)4]r=N>V?3IPOpil#2*DK%?i_H@+d3@T^(i@HlVNtQ7<tIja7<4Fj^d?bmPCIciQoVt$/&lb+Yp2YS$pb+3/0%JJh@h2:(1EQ"C3QBSJ\s-#WbbIJ?`VJ_B\8L%d=N%Md"P!:\YB>KO.crBT^tV\NZ1>%*^LU#:FClL4G(il/N@n^?$HJmNI@9UL+YT?cACMN/;>bl)F50Q+W3"h/j+_\Y[)oC,R9+<%FWr6IDBJZ38>'g,n$ArcinE_G@X"4"p;V.t6?o/qQ]#'<NbZ[#=rcNp*o58&i,gf506uL'/^4ar;i1o0Dj679[4"LiI'd:ce4=P!%L)SEG@'GnFm>o<4n[h$D8JcN!R0ZFeNZ;J)m`1i[QR"s_%P`Ti^hIK'*4@4*YoQ>%f^"f?T\:c>%M&r?$4]iQjpL+qp`<%kR#PBU%9+*qU+^SnN[Pj!n8<BbJoh*9N)._746u"BHaO4:MqJ='V,lanHnS,fpJ&DQs";]rs7SuQ?e.=H=@!i`=ZPY`jgB@uLXHf#SLa\&E%j<N%4qV5)D9kfF3lh0Wo7h%3o)Icl'462IMjRIBiEp-^c0pDBWWe;3!;hJ\F7O:A$;8a9O:FeE/5=-'O-][Z(+"g;VO5k:!>C:hV%7u.6d)EY=`(4G+.(=h<r%:GCI6OU.&*\Ako#G+S?Oj;9Zn2nC)]Ee]mQp]1Q/<4X^9MAu-^_q5!nfWmN=TK[$_OJLmK8"R#Nt*oE%R$fZP(Ank%ng=<6+[h'Pg[K!%]rq#>kqalR/"2"e<ZN*o82#=_h/[bQ>egor!.b9nM0qFLaWElfGCRg1G)&;)pqM[rR!(i]4^V&[%a^<@G\ujPY%rq7Z7;Hn72$RP[6:9k/T$ZE=8?gAQ*9&mCmX'KC)jR:Z"HEaBE^"r#*#rCM96GL%PPHoe\6FtmmX*7t[iDq7/1T3q%70[8mIIDLsZc00<\<)Li2q84pLl)b8*).JAMi&/;(&5<'P/m"fM8cI0C!!]W!=tp'E!ePmGYfO$EeS#`7^4cQ0+"3KOBb8-GT!k6%FYk]d(1B.b74-ACh$JuY#>T/pba,or)p$j/0%c^<3aEGXba,p)c%%R(QeLlk(7@E0poiL&=_,n1Q6u>Kg5TL&M+%_<S(Jned=V)\%M&h7n__!W17-_#O]Ep,EbQ8<*)(@Zq3&h/Z`e];idC^a5Ig4n/=-%!Lqi+)XQ90HBLe6A_QbtrjU+.(.N_.:;%Ps8FVm@2UF#Gp=%$uI4LEVLCGNeV*TM]+bpSi829jm#1nfL58)7-!#@dpI#9XtCiM`#U9hgd)&Jf**P$$FmdDD!>ri6Sm%AH!XBG>9_iIbEpWPkV&3r%YA)%pq:k_C*=ir8s4G9[E7>9L'+m1jGdu-`<6'uRoD8-N:*k5))\4l!Zs`NN3&4."J)HRNiE/4J4!JRrnSm!P33>-KJ9X&g/-1Z-%O,%55>JaVsa,5Wkd)?'XFhj:uKoh>V>e)d=?7`BXUaO9'Y\Y2r-Z[!q@_B=&5'_B9&>=oOO:fJM9PZBR$SRJ!;4bg5%1)J;7rlF*%_0WHB#Ca2'o6I9#Ce-MdJXGU=qE3k*&DIKBcuTM!RKYa.M3Gdl4GeSCZ?nB&8&'eT]8HqRa%aSUY@6\`H>ZX3GldcbjO`n41R2dl%GaoAK@??foN&-0'#bqgnd\Gs9+lbtH%X/6QJJ8:mF/PBCQ>J+i.LigMGqS4K.tY2Q$nRi6%1u.[Le,5V4iN4V1t_FE;X]'1+X0pX%o*4$0'p2[lgKthTh??<CU2d%q2pj%jbK**36rBS27\iLL"!(k!@Q#OB+<a<T7s-Qgo!%+Y69`S-@`Ui']S=.oE"3m-2-OXW:cKf<%#2'6Z'+-*P/<W//]MQ,cm$?[d_@=mCV\BICpEc3U:+I$==;<#JRSFP(a6dBah!T]BNfao;O<[!ag^Xs,`76l;KNgIN(Th>S5bC;;%m_K/5A/Hj?Ol>LZb]D+$A9cnM"WYB+ACMJX=9*CB^Ooo@K/"PcO2)fi\@Q>jiFNMC3_J$,[/h;3Wc>c:lmdp2^>?Sm`LHG;l#sM-%YEc[0)ikqN`D=%+cgG*TkF9)]`N@YS=Y.;7IS(LAn!,-IF/`!M\go_(V9QOp@7Su*/(g%=#34"1K.Senb>U$2ro3dqje:rL!S^j2%gg13h]3PRE]0U!lfe]TE@>E$@#>AmV6WrgRTO>7U#eQ*8(1@GZ[0%e1U=sNOYujRn/=*1TT<8H`\jO8PWG+Pq2qSQHA@;Q6cB=k5%G&ubk-?)k^]XN>(0W?cKf+*[6_%CjO@DQgh7e!4=j8#0p8YI24r:"42*Y`%,&e[i^Y]g[ABrQ2\G$3bNZjS-f!W*gq`VWfpaLY/3%TV#DL_YZ@DITLS&7SKqmq^%#?U-2k!?9sf?i&L(&Lds(Nq:lL'\b3JS0B_u'o0Pk?IW7a\Vr5pn%:@.2n!cbQU0he0GkdI"IBLqk%$:F__,=_M%LAP58<CtJK8b#n^,O`uOE`&rX3:5Bui7)qVq;HdNUD/h0C5!VALg62CZ+=jNI<C;sBkXW"a?Ye)/)Vu#f;]CUIU)Lk%Jb^Y"ZD=,)lW=>S"t[G$8(0o8_b:b=k8-c=5\s'?FFIGP9g+ptke9_LRVpQpa75e,*KE7aBKAAlc>DT?Ml)Du+_9#7\e-pm"OV>Z%j!:mO&ZjP.7aq1d=bI2_;i7IDMkpgTm27jOc;-.dna2_uRSIhWjfrnNGnn>XVXo_B_g:EDUZq]B,k.-L7FV(Od^^[#BggGG$)cS,%41/`_^[i[*bVZ*Zr5?Ek?[.3ul268S*a^pB1gN)ZVA2hg(J?[n`.eSQ6Qe9a1nEM[8tZ^mf[4fX!8K9L+?&d%6OAbi98>Ou<28^U%IGh"D:$4G8TukcBVXk0;_\I3i)GTCm4NG<5dUP\oq#Ed=SqSL&*"gh-E/)8MUZq\E;R%;#Y_$T,'u6q>Z0P6eQ2BEB58Fuj_ZRhh%_r2Yp*;C4.p=@9Q,LGL#eZ7HsWE(s,h1VGIFaj*W[+A\F%BXFc![e4FfFN.m?kEhOMZ(=OZqf+lUd^80$A9`$=-oBZT3P$8ljf6!%UV^_YoiVfZ$!C5K8@f6pP3M0tKYmMs4b)k1=b;_7;&%4/mPMSM,*od73E<pbnqkQF\Z3hAGon*.bhYP_b+XB.j5^@;pa>qT\f5cZ%"(gnPW+BY0d`?"fHnC646?aYD,Rg!L)ii%f]F`!(g]b[27=.-p\'@qD&We.ucW+UrC2k"nX2dk1c>pGANOH9aQoLD0ZPU_"@h:k1%;9rJ0nOW=rL(k:@$nCi5Q-fZt7eQ`QiKXs_)!o0Q]l'GRr#2\,C4H;t(H%dTaJBYU@I*,m0V7Ll.k7;5nh(.*C730OVG5MYl?&KO%:oC(049*CB0e].\^+ee6KTQ'dmPs/[[E^0gY7):])Y'?>=FB*ILrTh"h4c_i`3Tg^2KE3-(an_\XS#.^N7p2,\TIJFJ1t*A)nn(j%K]a7GM-+7Yi*Co,r7,$^#Gke@f.\:],crB+JIJJo8<G7&-6DA<I3,dcFa.H>7=.(Y";ts#'aubL;$.\&msa_HN&n@Q=8h79g2_!:%222=@'T_ojNQ7G8Ss.^0)G!^fm]P?]l0\t8;*u4k$SkU&_lsq`OM-qbie`tM%loHE(3j$CDR(X1<oG[\,9l\9**2$9KY#\I<4MNh%5#,>uh7(8W\<ZVS]0=&rntm&G=e&)h;T&od;/G9V=1IkQHhGt"gPf%h/o"F.E)MNl/p^VbQG:&O(jSV[Yf@$SY_&6pABVd(gA9TG%'U(h]l>h`0S>Hkn(a3&-cobB?S-c<#fJ\c0R6k:5N"Y(4jO(r$O#&W,h(OS@8#COSjc(;<555\[9[hI7?c/q$Y9As&P="J8?l2fB%-m-([+Y2=i-;k]0eX1*`n$u[t/[[SIL",hdm?VXGL$S.Ok`l_C3G&hd?lt"T_i%p>4ITX`9Chp/N0omf.i9$WklJW)O:`6JPdMs'%IWca*gnTu"@X(>QpV9H36cqRgaCBqJ&@Ep,C+;')4q(oJ@pBBZDf3:oAXEMuNDUc6gpI;5O)]jtH%RZo5O(6q?tO)42_T4Xa[,"C%?R]3.9`*)T_T\I&DKea6P7YF6/b?Pu;nbFGhNYV+\Z0YX)iGO'R?p5`TA9T.cI3854n4hbH.9FdWP`o9C#/X+_l_8A3g!@ZG2\>W%4'k&_;99O`QWe_r$jsl#hj<BhZYdHK@rVe,$BG)Nc'97$^e(Bn=oLBg;IeR?&Yl8mNY6[GRC&-cKh8t#fN(p65,f*^(5lZ&CKKu4%[=HoE\O9h=>5.2O%M$?KXfm/0RDHOEGTkW1[-QJNaM0CcE'kD+<c4P#q<\nm\l`a^2hEAnL'?NV?b*,32[o05[Lt9n<HT$0oM0]p%E2ND)S1Xg?SR_Mr?Vd;CCQ\I-G;XSlAT5uV&a;g=ABjTU3n_J(s0MuF5D@gJ\,Et^_qZS;KA#@H(>I<<@M\/7'5/NqNrSo<k)qjq%qe/hO\\\J>>Ic$88Lh(%(5M^n$(4tP=H\]1L:EmF3'+.!h%iM%XU9nWo678S-Rru#LZT^;"m$qYW4Pme*+=?KSWUPi6hV=VR^#^*%26?(7i0)m!#nV;>geTHSP!grTDq0e`ZCX?Va%`]lm/_6M^![4OAOibgnk^7rq9g#PlB=.Zl78GF@O7*3)joS<JcbjHR_gQcg=kAY%p9BAc[VJTP+%'Z^iQ6CJ?L+RmQ:o^k2E>.ha,:DW>$s%.Y.09ZIQ4b-3/p$ND/[p?IBF@"kGT*W=o"JGNpJJ)#A4.!nEO9hopHKC%5.A:<J5lc9O9I#DMI<aM\!!)C_3lHO%Kr'U=Vlh6,E@f>W.ZkFd/qFk^.077WL4AZ'_!8.cbW.,<l=jp?.RYY-"6+Q1GI-@"DM+G%P/lA"Q\=J*&OQTToKGkqB98q]Bb+2J,+ma]HFRQ!IB_Xs+3sVU&*Ebt*kne-W_@*1TuDMVY=kH6`.En`N<-<B,!TR&9FDhV+C$m.%3i"K\DZ2D+'O\_A)MeD&b<ln%`5i\d4PK+W;1MMR!%I"Oe".O:"u&HRN"?.02$Pa4'sdn-7'EO*&h=kD$8?3'@$E(/i$cD)0iik`%(bH1jBFNfi3c`U5>BgQ!Nu/cpA<6@>Bi2V6MJU`kau>b(DVUt60jeW;BMme*jn#Imp,<]Io;?*I0$4tL7LuCpPRgE8:]^$'/]nl7%/SgeDq#]k`:/I2$Z_X%5kC+-\4[RF=Ka+lpIa/l0Wqq^?)p5(]h\a(HA(:/ZJ/GER2iZTh:tKW+Dqc[_rJ(.t9r5""GZDN"\Y4c-%oo#7XC9kF":,l]rDQ!m-qLuO468Z_>lM?2Bm!^!Dj4*bnDV&1Ece#$N7U<cJJ#:k;K5RKrIc4Lh`MZYdD]0?UL=c)+h[nmY'A)ne%!I%sTbpT^\([c;*+-SZrplXcd_Lmmlbqn%rjE:G!@b[DW2c3Q.cr),d1JgNBlPH_h1.c3.\pb(Ar`/ndYK&SUR.mlOqLr#DS"q*4%oEUZ>R$#e]qLuM3iJ>uteFfRI.KNQJKG`Q;_c&n%qRQMV-E-5Hq@o>)5*s[^qY?Ko3pp34NOjSt<W/d.Pu\CPo=XS42c3kqn;"/t%=OAkhqLr#DS"Lh[#Xs?_lL@T=`Ih7bRn>iXTgF-[BT>W+rPG1_"`N.PlMC=p4U<K*Kiob&lR2N[%p&?B1Fd60rsXk.;lK!uqVGIB%GCM)brPI+K;<m\2?`Vp]O)GBWd(cU<GkLi$eYW5M2[n:1)lXODG:7B!SI+TXKidpTM0p;BY2@0>/5fcgE&#DLZ,u;-H.M*)WlN68%jB'rO$sVU+Fo?n]M3tt"@U6`W0dG/HlPD_l[OLSKgXo#TGm^M82aZqSmko4;olD=Xr&,U4JKM"sT:ZrCEj=lYoa;!Ne.nND>sAfR%?Ydqp?FVC<:P3fg7^H<Z>LtMj@+$Foj;9UIO59<*INs+KL=Gl((CUI.2GmbpE5?MO-#q/?IK?+;<W.MU7RjNG(]IkWMbg7R?ar>)%Dfk@`Fo;@bL*HkV^El<!Tbm]Yj,U8_^TLp'F7;Y=Na(,]T/kE.$t^";=__-]OpPJ$94EcQ]BY"HRIqD?@r]7bbc$Qrm]]-`8^"AI%&RN$3](Ut6dH#uf1G9#c_ZX'IPU.6[h3ob1K?Y`\P<ZD<m*\(XZ*G0JVcp:Y<I24/jgXYt2B?.1<%n"=S8P-KmlT4r:OT4r[-ZnV%gP)--fq!S42HN)ac<WXOWsbhlo>ULfpM"KDq;+[^VmYECk%CI_[f-#Dn/dMV2,A)di3)qRi`,@4]q2q[J$dKOg&7P$a%A,WpfL'5%IpMBT%_n$%CTj;Yc$$i@5><\O]B[9">eA\7`heC`[H('LjW\96p(Nq1(VXW^,Q;!8G.1M5As_s:BJ6\arihYkHdT9uZF%"gQ-V)+%;J!Rj+B8m^hRhU)X`X=#I<2BsZuYXE)kWshQCGW^W=A1O(62o@LV69U$hLXXHeY*XZA205QpaS#4Vo)F]%QBcDp#UoGpBfgifns=%FTe'%^JFcYeWR>hp[a*rh<f.@@.s/!084TgMu2r8k:*aA]GSCE>-QR]q=r?OAU!D'FD!tI(\`n'%h;%KFB;)([DcJY/Q1]e>^7\[%g\nY.63-0T@P*@@QS(aFM'H:h`EOtL.YnbfhO8Ysk&;CS%U8)Dl=*uF8sfA2(YdXBEY2.c>C4ZX91j=G[I3L$^Rh&<jJp5K6-@b;%[`\<\8Y^7>4(#rg<V"b@&fqfcSa/,$r\=L-/;[>G-2ph<<-NNHd_k?riM3!0iGcM(0;$!r\1^pUC#uVR=HTo^heD$=$fDVZL9D3,%gh;2;>N^&Fr*7-Qqtq(-L8:oR-1O23`4"FaT;sF=:NW"#I\VC1Vs,]B)R6i)s/muUY<S9oPIGnelbiGNp0)=AMq5Qh/p'PYIc<RC%Ma%p8chrP5nV;1r&W?7Q1?))J)mB/E8baIBYk-.h3(W&"b*C[cS[YGKcBX1/$iU1ma9QGLVp;:FD->!ooE,C$QG2F[;,cDF$5ra:%+jS+l:6@0T*B=T/9QPflJ5@Oh`NpOs8>d9!!95%l3,Q>+;E_tuUr0q%gr`_nOg<U#<-J<6;anHmXl*QOUp8W]PFc@,/5gN)P*FNH%iaS`!48H+o-=&0Y.#CJA+fSS]*7S:Dj[UP-4X9f_LGeVC,>,h/Ed#1+SiU6E)OopD6-d,],fjgphOMl#r'btH<H;I6=t^Z;m9O$^%3U!:bIi=qql^%[Y.)kHU8:m02]9VC#N_Ig6pi<=^^U;?%qR<*O#CP'e;R69m/auA(H.-1-SIG%5ZOJ/9A8mKbo%6:O49#*HkCelo%Pe?#.G,#>DH!5"]i]h+Ud`#4Om,aZ(j[S=<^d!P*gl5'6+>]Mp6m+:j3$pJ<RV;$NDsP$ifj8;!e!f8lrTMUpb]p/[;N0N3,,u#[%"A-736nNU;AOpf48\b%[LrN$k:`t>gH.R]+ZZsBlh)jm^Xih#Uc4egc7/o*1$&,A)SSECcd%Pp;dmk)V#BYU<=4;&Kr,C%0Q_A\8%XqMHHHG4^kCP"kEkDg`3rr[_3=-h^L5V8-C)6s'`0D]"40DQY@C'Uk\Z[h:F!ZX6co<#RlZFoa92?g+eBjOaH:S50%P#4;d8q\^q%8N<5g>[SGc`Zh@5[%tii_F!G_FpR/=Kp&;l%<1YV6dIk57]6]q)\kSrn@X^-h5\"Y];.Qg<A^e_@`Zm'H<r$YdYbWG>cM@"oNDR(%e-;YT?e_MrI2<>hOi'Bc5M5/.P+!n-g%[r1j`\<=WM=>*E*"LVW)`QM3<G]*:uT<?1gcpV,^L2TL8<_`!VgDuC@7irO^9,h)YpHY%+/6HAeh[[t4Nr7jT'rY:`VLMLnCNthgg2D'Sk3-8VLMTG,f?dcMsAk'l;uhs2^_&=0-8`0jk6t=5%78mr4$*fnP2>Cho>!&g+1mn%b3EgM[]W05Q'<T.-E\h7#:E_2imqmY!\'K7=OG^]QfIZpnlb)5D$QVdCeMB1ng[harBB+`:3r2Oe*pLkGRc6Kn^+6>]=+Nkk7*>$%mi46m,,;ni-g4lsY%7==k^9EV1Wt,Qbh(e-%0ouP<!ZsIh=#\MirRY(]uq!");RaJUg-0kSD_UJ=Z(,sYNXSQK!MMrjpJi\QkEo_%Kl9^;%X7*Y_,\n-EBj][7A)b2a1_=G!X)YkTARpqQ-sIi&1"6L)m-4lacehJ(NmE]I=IN'W(Ta8]0GAo_Buk\4U"##Tl$=_iU5Iq%1ZbmHY_.uM1$HMl`/tuRr0a)O>g4_:'ALBr_7Ad13J8qS6%2OuY=l(<Kd/i*'qP.u<@P%W*fpm5%iD%o#a:>7'oZhi$9qo$3J>l.%eD.@7%p*%(j5"T&anS13,UIQfGXOC,cRBnITl+dM?0pG&F9d,o#[GS=+#\/f?K.Z70ai0/W@k=qPL%bRb?%!4]It/pZd&(S)Do-e%+nh4g=),D]'%K/Tpi&mNQ+"j)+i5'Z[17!%iGYdFmcO[WB;<NZ%1S%?<>o<5af=p-4<P?Ah6%n>\1%IJfC>Nt^:40<_$P#KXm`MV%CQu%<LB.cBpD+ss7+pU3V*P_lni(:uNY@P;XW8FEQB"PMDAY)iC(l8Cq!7n)__rjOU>8(2&+M0*W9'a"8a,f<J*g]k#IL?81qD2Q%f3XbE&f]Sai[#0W>@-G+Dr="Q1V'a8kT0LNhG=_#]p$h)dW`-NNZg`A5#a&rNd]D2TnEqto#p`INIA<qUk[(E:&#8?an&M4c0[`s%im/0U3@VkR=4*/#,>-JQT$bkjJ-[<7"5A)#A6mnn><7@HK,VU`b;,efN@^#jJ^Zju^%cAqNqcc7UE_tP&Tdken$.SBb@k0SGiOSc%?(^13]u-HCKj!:o!5,\#%/s:>KG&b_<@OVHQ?M4(&#J)g?R$N94]Q\3`%$JH`P+U(PbOjT^grAK!hqp7K:36?Vo)i@phpH/24JN4%P@9qaUo<S`Q;;.&F!)?C(pZDuP59)fe[Ll72euG]QbBXo`/3W[V@L+N0O-cuU5](mNp$tIfg7N&.>+fdE*njMSV7]QGfquLE"Q#2%FRS(,b2\hnM\/?K<]^T"KjTP-TDcn7`8k)6!uO5GX1<k*N*.(QH>f8c9)PB3;P\sYI>I=]blOGT9.;H"Srq?>bN^^Q.ibHm7:^!L%Bs2K49dH`EX^Qg7&Il/HatlGldC$a'g;0j/orE"O<imUpCRU(-[Plfp4(WPSm<06=PH,Su"KrnZWHJhCY'n\.T5.Ls9(DB\<`V.6%`Bt_*:kr6WZX=/)bK6$i"\b;*-1Q_#Pf6d*@iI(;;M_ISb+Vsg`8S6e7lHWC,@/*@#.lA5^\P?=GoL3TO39Uq;KPT4Z>-iWA(N,s%A\]:B*emT\i%JTe_lY.O']_t<s!;E\M!)EN#S'"'mT%U[m*rOAK(d(FiK+Rc;Y0Lg5X%kif(+b@_IlBH9e&%JG&67Hi<p5:j$,^!%6h_3ti5pb1Y#9S5ha-h%=i0eBI9<qBVtHMmI)Q\I=jD*V$S$4k7(MbH_BD/K5Z/W@ZOMSol[TBTRt/dlUO_SP*V&^\P)`X"&1'Mb%4lQjk1O>EQ!!-Ypb($XJjB)<d,G2PlR4fu->H,V+.i0qD`:PaE,hRCKJE\6QYdD-R7mua`O+RdOXjZXFBd<1n<<<</J.h=T_9=2B%jbV*5"\S59,Xs?j!7O*3dUCPS3PW#L`Ek$6?kkdl0p!ZT=f+\'>pOCnBcG7]#FMq#Ip'2`0bEa;@2ff<f4.FKdLU+e#S]KCpe9PL%i7.HK8R/dJ0d1L)_/U7](+4ukoS>_"bj)K'k?GG_;Wds67P=p2ChK4L7Dk7'9_@#[R_sK74p7"/']2k)$!+6AR1_sa$fTpXfcD1H%!VLE$&Oefk@il@Q1ud$i&lai8^4T.%?V2.['Ta=A8L+i\`'EtR/I[AY/g6)[='J@E6m"V\/0Ai*Ld$I81_aCikQG$!^0##]\=t)_%9.HD7O:M#\Zu=o<'fr>H:bVm5eO,fsNrTZEJ\I]Dkf_&cUbDin*6<%i1_3I#9:%V,;aBt,3.`<*r,%H,_Q_AE^3"8%*75>(,>&<n%oa2HDR:*O0jJ6`04tA[G+o:P6M\8@!^$64=QO:OIk`&)'B-8(IMhVMD*ibSA,#7uM>7_3a:Komh2:qS-K&KUY'1+P4c9`BVL6s<O%V3EAW<7gkMU*84k,DET(EjE@<#_qP!Uaf4NHMtW*(o#=n+]O!\UYF&-\_<dPTt464U>^,)n4A@`gT9;S13BKNq%%Ya+JL-@`]=>o%g!Pq1])SgRA;]OgRD@q/[n*]*Xcl85gH2'P%IHT0]NrT?Q;p_8FrqcdO3+Zs']'fKNrmA_fQ]5H;E/+nT)jEZps?;9^kZi.NnF6'%BaB.,9gbsH"j.7YnRiAXL=f^AU59[7O"W<m;[5L(L=k]WKMQlNf]S5'KQh(lR)dC8:4ikIE5[Q6mSXOUa4mk[LaT!QAR22)i2+r4%(h.FNM)HF-!OqSA:,AC&VBP`9O^j3\"idp5?&[DM@e*1'K10ea`5OK9r7;u[liVR^YWSY!?Rua&LV7(mdm3e/.t$C3<1ZM8Egr3s%=G,ESYkLEF%TSldAFCF,n^E&U!Ve$GXb7rlUkU]jG?+^IWj%hT=p9HUjQE4ef?LJ\mMGX8*/cEUfI%5T=7N.hP'6^5K][l[_ih(_%\fK]:(\'+%2=,/f?,#DM[G+uV)o1>$SelJ2AH^mZ$?(2Mh^B-7[G(ioA7D4q*@/PXS?*@V@o4iF"M*Oui$H#k#f%qpLaiR]\fJ;G%#,7d:k7o\>hi@osQj:D^k(^[`YoEgGYm/W697++N^I1KZiqq.Q+B9!cV#46M"=lu>g+3*Tnb7]q$=4IhKHCpsa5GHTQJ-ToOdqbr%.1Rk0diB]A4hY1]6%,KT,7g7K*V$cFmT'[,g2]6g]T53PI6COShDT3>gIA!3gY)]A]o-!A3=e$o7Q<0Aih<hU#-ru.`0Xb=bkS5r%ABQ95,\2]?E]un=OM%l<8DXOdf-M\cg`EOmN+9?_LquY_Wj#3-=KkSR>b8-.@ka5EV#o(KDWN;W$dU'0LgR!Z'B9qh3?Qi`"\N`q%m]P\)X/'"`6oYAjA-XZZZg>rrq4S)b_t-8U-6Zqrg;03t[focnY'k+\L1=UngIAifH9THT"#u$gK+k&QWb4i_D#il3`LV_2A-?OJ%"\nB-#9NjRlj):tP,iS4(V>]%^k^lG?lP&8fWG>A`TB``H$h'uq+'(+jhm`QjNu9pT/6>MRR[aOb^`;!OnisjNYL9e@@g#S/"NlV%P.\3s_SJks]qGG/J@Gk#pfSjZY.j#Yb3u/TI+SJ'47\L8=9bV$+BKA*E%R#3llQLZH?2dL@ZJ)M+VZneB2BdQ!e@ZfKP`kh')X$k%iT)T?'.5G(8C@a4^,cD46bt9]'2&WrDnuMjd^j%k2(Vtc]Aqp)[`E:J!%kE;]aI;@P+L#<e=5VN_Q[EM>2!#?nQ@G_=O3XfQB9i*%Y=_GVGW_.G%H+oOY:I`G6TlnS3:`G]gCS#TgI(nON>3]m['-Wb.Ue9m%"qf9F`A2Q=u1Y%T+a;qlfaDTmY&X]/4_uS!Zf/o\(\_\%&g>kbIS=Dh@V.*Ne]nZR7,cWrbZ4S\2g7+c0iJl!ep#W_dM>kg9ebtOZ\BXm$<Q"uA0.@&>a+joBZ\n==>a_A=ChmD0BJHdGs&`@%<d(pNOX8C?1@Od7,q?*+R>lXa(X+;_(p<;C42s/bHQ*j80c0gQD='=O4]kkkBkL]KA`0\mJu/3TLCB(nhZ?@K2ldV>89e^2TAO:*%W1!T>?\;FOmaLERf4):DkWr[CRc5rcMTXEEfo\XE][;=nF`#'KcI_/m`itj!bA(@/g@)]LSJp[V6a$[1XRZSD[2\1h!aWODMR9kH%e,<ObZ#.`5:G3)GoOc@cY1X2Z#@5Je-[kL&G$!QDhUuVmB)Rh:M_EYQE1G8jMpK]B'0SOtdD-=IE[@J\F'mFFHDA/)*ZasW>>LHE%=7@Q>.LGuUFb#/RQ(V:>q1U"3iam+;LjW5?67uVFAB0rC_'JUUk6Kjbqqp%dNt'k=R55!]G]6lG38:^hlYcFVn2o_k7O$i;Yikd4%dlhKg42JBFb.KF;mNe%9Z0/+8GO,1B-'+2J+N2NN6ZKc<Qa\W7le%>g<0Vrf'"@;Ienn'!_$==3E\=A;pdrYm-pKI\3_/MNi2StK%6Cic%>e;MV,TV\Hc*jr);T>T'^V7[+_NQ=<(JaB0n^K&FqDQkO\V"B]#S8%F+=M0K*!eJI&3Mh)5-5:s_6thD+ML&:`'Bu,n[VI=%^j81u9T[n>3sZ+&d]M'GD[(f):Q^u##6D\P1+fWiK9%8Z&2s@npO?cq&Bnn&gI4=h5^VIW5`+Lc;4f%U5.S^b:qb3!rAnRVaJ8q.%!$]+C(_g'5'X)'.6)DpOIPhe1+X.=;`[9%fhP1Q8:k3f[5+ltRGU$nooN5n%dHEFXF-:CuEd7];)V`8eDZ^4]NP>[ZqT`0K'-S)'%)l<$)@e&q2^_o*DiH>I_D2;d(s5]#kYkuV-;&BS08GN`-nMH?SPp.W1+Vm%j\;c%_cK4]&j/fF+huW&t=)V<K,nBHQ:4uRX%[(r=%TQ9UZ6Z`[`:f*$.,8U"`O^?\&nIWCE8i=qL0]n^?]BX=.?R>_68c+d&a\KU\G#3Q!qpjhp,N)\VXt&Uk-r`^TZ%4&>1+O$sH0%an%1E7A&`^;RXA-AScjrL2-Yaq=u)qB%5TK3.77GgSbW6$9d+Vl/%`R]l$jL01iZSEVsWqA12lbWYJ%rj8Q@2q9W,bEmkWR9<?Eb#H<%RLH0%(<j--7X-n5fP/!o2_n5:Q\TBSNXS3Yfl796%WBnZKTa*98HcM0BFimbc0^kGAcDNK=#K.oE`Mf2(oYAm8E_3qWF3HtWPK4=%9-fg93G7;eNCbL`kGV)h;CRae@4p(5IKfug$9T?/b>9>GS&XPL;)Uqb9E&ok.pL1R6O5BH%ZTu2gg2//28\*gARcSa-s,0g@]=+:%Ihn^#;'CX'N:>_\Z_Vc5'r$KB=#!3u#7(enHaEH>72j$Fs)!TZrh?\$k+-q3>o[:^[ClcMf$ph.IU;Ib/Mo!P2p]80/Sj2enWi^=%;V#J^*ZJau.s4!"";\ld3/H']ou1%rlag+L.JoE(s/tSt1nSqJ6h'<B5;I/UB;I15(N+/Ea>(01LHAh-4SLYeGd:5:`mHY5#(X<a%h.I0P[@[%WjfC'@lP?Q8cPi0ehsrbF9?hTD/kEA)d`,:JGS(5/JktckhZ3H=F`7V*n&"Ap^D^l>Ir_gS8Os"PQs^Ym+O2+-Pgl03%n,U(@r55$*@WB#+r<$bAE_0)r$ZM%B&=ZV`ilB4[2_s:tk0So'"`OI-`(dC>l:UX5?k$_YG2NL"Ji$]^'u?K3_,/,`ESL`b$I3\B%rF)+#EKYXB)s<..OZpO2K+Jd/6C_oVlLP'pj`PcJ?/0p66[*Ypl!eH)49Qh-/4%HbO+qn-PUc7HH[;$3"/S2j2jGb0Zc%<e+-j`!%GgDLC/b$#.,/kAG/\_l[]=+!&dXahMB4+TUTA)5>7$C[nQhI?[9XRg8:5Rb+jGV"DBh=+Y`NIKd8gkN)iP',C$$(lZOc1KpQj:Fi%LB6ud[JN'R_#D/dl6UM&r^\-Wc4tA@jAq^3o'!m^Tc!CiMY#_4`.p]I*B1,7KKPRgE]DQpR1[K[^(?EQLGM*P?'DM4dbPC$3>OBo%>_\5K.n__XKO2s81LI@kS=:HH64.\q1Ca_E+@@OAq#E">o!0ISS?)gN_Jt2>$4&WRKFG^-cj:H\GhRf#i3W_/PdintnH6Rm&ddfd%p)E0%aaRLPjoKrXC8JL*bW*)V38[gijN\Rn^0,.=Ba=6*^%L/_/DcV0&h1;lO745G>hBc:XO.U'.r!jO1G&Pc(kFr?=`S=@E*t79%o.C[(JZUTqW602UeN>[KRgY^=ke!gNGu3DP&;-Ll$mCmG7%19&EgV-nl*t_$Z[5u+VD0K)V"_`HL);fK,,gI;KTajK1jO?W+qa"$%!kleB)n<K7p"QX\pt4&d$,fIfX>-,?(CtCYIED3]fAj"YO$K-FM841HX0rn(F)TjH(VmeOWgeIu(`_kWp$ljXYOD^j(R-#S6PN1#%!((@nX*9F23sknPp]eV2hQj(I#j0m6XV$>_W]=9]o8=]gm+"1MGffg\#'JprcQHuU?#JYKNi=L+H`kq.%E(>+NAm0sYdZ42<JYO>%J">>E\%?e\J0hD?LTIF+P3^bkXsR):oBZ"($Eiil'lGY!5Lq(]8t6s=("^XcOojmA,=M=JH<!=,/u3Mf_p28IhmJB,Xo+V$jZc%%%TPmCco$N8Ui*"+n)Rr(jmMR9>8?.MZWFkp@$@Y?F@OWh.=\fqcGd.<!`@i.ASDcZ?%rc6gfan%cKRU&!n`au$.?7]iFou<UOAPd>%Z'e-TN.Rj-e\C6D3DW=FBZ"5TG%G(>faV!>^6d-glQrZ-N35gEo>TCJpKqS&B$p?l+1K:]PMB!6g$7."WU@kE0IR&KiJii,N"=,a%?j][_@LcD$0bd-u_o%^[2-1_U>M!+^(9*/'Za9pW.EdT"VRAmoo/45dl<tT9bf\iQos)lZ^uXA%%d?-:0E`=;KV4>sPD]dnCuQ46%<ZIf%UtFl<K6KAe`5NEtj0C)?H)U/O:DG-NS+9g0[td4VI`#pcNXr8T1N`Ka8UB3b*;;ZQo#o>TTj(""_M)I8;f3&.6D08q,``*h%EM\Rh(VufPb5t=Tb<X,!)XB@l!@^4Q7mJ:.#gB[;QgH@G!Lp6DO7XpGE_!'CZO[OU#CD7$$h-6V_3.?F2"pK;T%)dXr6C*]\p&1R%Xs2,J-\XgIa=`;^qU4gXQdE'j&ec`817qn3g!qaje&#r/,fSPTB(#5!G+iRj\E1J5q1q[6-@ZiL$IWC,O_!FEjDk3hP/kK&o)EXs%bP.dO[<8+7hBAR!,cODTP32h58XPr,O>(<VBHYY&c8kjLIJ18W9t"%:]?9Quqj`*/n+<GW/6c;@5-7rjO)@+:C?5ga#[l%b^TEDt%%'NKbQcaWOflF(sIXF@b,frL1HunkA]R=J&`ALr"M6hQtdK"piGKI.AG.T',`Wd1cW('0PVDA!e%C)<I,u^.dmYV/sA;EG>R"hXk%KYT9;2t_&m\<B(uZe_137p@XUn(sXa!Y')'3^6ubEO<F1J+@].ldi,g(52MU.JVh<=lN/dnE]^e;<m`\_6JD5*Ya6iJ6AsQTIXkU%/O2)<TMo,b6Lp^sGj3!Nb69_b"-Q>lC*uth!A0dU_$A3co`@fV*TL28,d^qo2lVKHY9"Y8*g4U!?X]Y1`2A6XA5CfCafb([hpq7W%P>c0209tI_3_*uP$*<c[QgXur]T!mKp$18j/t-T2Jc$`#M;cI\P8+r+qOd$cOe;4M-J/'r]X`9ZdKk'!qPuB*!Q%#`2S%@u!_c@5%Q-$JHInQL#b*s@*-,`>Hr<V9;qf,C:R\!V\I2\X"5<b_\NRj[CT<B#@oQ8JQkif9TW.B`C5Es'*W$WdTB^=*J8?k=m/Tbf0<)oDK%2CkeRYT92JHZN_"m+AD\BXp-c=]'RMCKBN&nsX>pe5s;lBNFJZGt!'l7>8i(Rh](!)K]drAGb#cg1J;SMjN%S!\?%BGY>*PR#!r9%[nC:RP_i5;^HL<60.>?j3$D<;Y#=Y_ebqQ:=.]XuVrQXBWh"6R@g-Dd2g=SV'hK<6)8/tT@W.88M]J9%HZMZ]mEhqj(3la'=\!'m%ar,1%kAJM$7GC74B#WUHXhh8S`W"q17:sR";V"*'Ajr5VHCgR>b_l01&FMS;/(-R]pJs@6/#!IgAB'd8&Zb8KApjXX6S:'7r-33O%Rh_o%_IX8u:H!8H7o;,o^'[V"YH2MPbsDQr$Q9eg]*:X&+(C\bQT$<_^21omW,d/E2CmLof.P=*(dEbaolOtMV#(#$9-'K:3Q&#W%Z!#K8N-&f8`#GQGcoJ+7,."!rk!)1d7@THM($s#C3"74d2_4Ua$CeOMZ_Fm6FD+\`3Ih(mjXsTR`Hikt2mMr9@rf7jonMf%J`NE*%T5qGF1+U50F0]OX'l/V/<)';b&XaB5$4RaQF`=a:ZXV>^1<Q]N?iB$P1t&)k-Id-!:FI734n&("cE;86n;XH#09!n9@jt?&jV6"*%7>6;b=0@*0YSWrB0u-2X2%DN380j5'l>,oU@W0NoMY"R"nKJnPg+u!%?'<rX?aj\qQgar49L7:C9+aSG;VI\4'X]3'.4s4ENTXq`%46bJsc%2=3CFQB$-cHNDI3C_OXP^5@q%Jiu``an?8j7`W6`TZ7*\:[)'AV8*RP03JT-5bh`u@)7D0]G-^%p]s\fJBAGqWVY:1t(Q%%O5iPT!cC7\ZgO*gZ7h`#'+6RPe;4TJ):=9ITm.<hVGgHhg7NmmY^JFet<muI/JGh<HM:<qcLr-)VWTWo#G\7>J].k3=0)@Lj*oF%OaD#*\6*,NLetm]F<+e<g"I4";Y1E"j0ARZI(W".=SlG47YjL7T!L$c*o2`>b'njeHIjCC0suSSlS#ZYrGo)LDYW6PemcMU+&@Vn%5j/^/!CDRiqQ='o08Cf#?bV4uC"]!q\'9F>afHt1?GE+`8oei=*7%oMM_1O3;khYG9:'_Erbu^mp)!,=iDjAai/8^kFXY.1fe?jd%'>a40^04;On`%XMVH7s9f/[^eHa.CORd8"/gP\Lc-S'YI[_5d8Ijt2ug@euqhJ:f*eM]HMFVQf)U@Zl@/GtCV:n"/c\`r8YM^eNR%]qLfFHEhd+-2=p]=BsUhm)NkqMoGEmQ2Og%Gd0M/^(ZE?'Z<R#md`[]kHe;J9W[JlW69Zi]ia7I%NGd62G&]@K.RY`[21@4Waa`R%k2KZP.rI>)hD^K;X)0LjjaOJO77/`C,iRO\D4`h_OYNRh<KpEf@mmN23<GN*Dd1Cph,]F[\!;=3=$r)b#BXut(GmLZ.)oa>aN6%2%o#hXqhVr+@4!p1h<uqfd@%ao5'Mo?k,\eU"N^KPQo,)U+)r)cZ"cg9"Jo1:2#=X`".ga)7p\e^nrqEHBX[TKFDW=^sqnnQTk_4t0%biNR*2d4/rQKqWb!'_rRWf^-U10F^&!")J"P1sZb3)XFL=1n)6o)8L3)V0LcJDtHRDI]qjir`0pGS[aU"5JKInDTDu!h%)!`DP2D%GIhrjcHs>sk>=&nUm(k5pO;Fi;?@Q"QSostT`cf=/A3?#TgAf^iq_O2Zc0;6=@Ln=m6Z\#l.(oX[DRW?++A'k?pfB^p@)Cbemk41%<>Wo6Y*Y]Ko%j6\f2P-sb2DJh]c<C"N:>!%j#qY?P=7ACh>-mAVQpAb2)*HYAOWHIOiAndDo'5F_T6M5bJEO`S_POsSQm"<^#KAW%KA^Rf)A?sl7*BSP8SG)NlJ\M=iPoq<;@="^4NcH2k@N%dHs/?U@7ftVfg//9Bba?i=McqNgI)\sQ8madQI*RjLYc:jB]?oB?!!^_%2">"2fe6YgH#hIU9f/.u3O;gcP$qNZ'-EP4>"=e1;:,!_jQad:%o%Fg;<)F.9mg&p*,?-\T)Vn.S*B+G"=P)L]scmM`NaLb.4%5&%+5[6`dVfUE,sWn[3jOk<F$:"-5OVsPrRBAG=;me7>j-M/R_"Q$4*D3@Spd(J>b6?o#qCUo?%S!WZ^;S7.$h-0I3)nVIGf-b^5UT,%!C$'=L[LKXE:2\k1R(rFA:7m?XDE@AH+Sl0DsLkVlVOhQik*dM%X7PsFYkI>_E5;dnT\0Mn;m83b3W;D\PpqH//PR[rh^P1)*Umi%qBj.Y]'*+L+W5u0/$C%"3PG.PAGt27!fu1ke)m3\7jf.s'_kWDS[9Ja141QRlJm0^b<PB(/@G3+_FN#3NdLftV'-fE0BZ\lU?coh%Id002]Nc.I:>]=SaLurrpi<s?4uN+@\Tp>(b.Tf>rLae!r:]p)m$6dX1je><]JDTR)?3V@=+7gKfMkW'/A1GrD1,*$*iQ9ppCK_/%_Og.E$?+]9h>lciUMsZ,\dAhi@f99eY`AE]k`<"\4n>Y*j+C!2rL&JXhM5qg3K0,\3$'^/.p@,!cok[qB&S1-l*kaD_h&E"mk3;#%3=(dbg.(5.PFJh#)2ji"_Y/8`'\k^Y[hGq3bq3F-iNB;#csQbLq&CD;&Zkbo5:OCnfp.mls7;4cEZq!m$^,C7_`L&"T[Vi13*sq;%&h)IhnN*%[XRm_E,B[KaaH*trD\t8q]GR$V_j9mFen0E>?*D5E<V5FbX4Lh0.]@[2W5OR?Dq<:..E4c44M6!J7\j;B$Km<[iV3kn%=q(j^-fXXdf2m>Opu_Q[lJ[mET=Kb]0hWg#?o;>7Z+KM\hd4%$^#(g-"?j*S]t)fHIsfM\"eT1u:*KB8p<2-ThGQ"m[[.N.?SPp`%_l7-BNU*qN.D/Mq^0H'G$"bWditk/Z'lT<pNcPcr<[RGk;C08EY\5fY:l_V\gOJsciD!4iU:Zgpi:JgpfbO&X1?k[K&)3sDY(FlU%K9+-JDeg8M%mBXH(q[`SY)&_N9b\!:@-.Y\Pd,Rk%a%KY8M,nd4GsR354$J[gVM^opaS%m5!b-$B[.,i-I`[p'KRbdK]=f6^\@&g%?sO0t\&hF!Jorfp`57LiQ('[0NaW&kne<KS(BZD?IW?.(Mh+XbQ3gBl/dAn2VGt7+%Eg-kFZJ#g'5%YN1"VQ0DW<HJ=aMJ`_7CK9%Rk(8lbu^tE\gZd-jnbUYf&X\GA35"6Cu^>'q]LljrH+bP4P0kO]m@$7DqB5Ha*7"m0-@roPLp0<715.;=9Sr(0il+_RE^r=7bo_p%d`W]@P>0Wo0OD7+FjhaFGk_.LePI8hGCY!<MV$9W\Af+blo#(KTBAV;YrNK2\J>:#7nQ`]hk(<O[YEB]N`Dapc4cq/#>5hYegqOk%RXBKI]Z*1LL,48:J7F\U=J@"oGXF<-m"hlEF1M6/0:C!3<WVYp9YX[$b)9L$NG\X?l+5O'q]Lb,Hh7!6R?Q"9QoWnl<AjT;o#INn%E`6gDd'h<>LF%WOXeLZ5&'cb=/YS"390hNQ),5K\U8$.PTuk"3`e=1+bK7X;dDUedB]j:M9mg&02b^W1-F_h@^R6q*Ea+F5BGF6h%=Ak+GBJo>YM8bV^-h:dO1mJfYirYZ1;Pdq]naSo;@dTkG%ng`179aHR`7hQ,Z9#7uB5_@l9l#e+9mg&P,)BDiPDcM*Fj\/&&%uZ9%CWhk6D5)jt92)_[FD15Yp<&Blmma1P'^pG9.QrK#6i"p,9qS$Jp=:<&6[O;jU-#At1FR^_;*!JF<AWdPZ@@@4q;\q'2p&!#3qS2s%et+\3>'\qu6@?Ms0.U!YC";mUQ0KeMLrh/\/;TEP20E,(6a)sE-Qa'#jMc3QKg/F1h[?=nk[LaLn6>L1B;Lur!soum]SX+4//Q%E%H$)m`4:f.T,>.&3K3?rW$CLbRqe_O,[&%B,g<a+$K;Tb3pT`3c`d']440]C#);99*<P86DG@reGEp[FO]@iZ(\`6Z3[RG:[`Yh1:%cl)$'1f6d[q;]fff!X,%g@<7H-ZNU2FBr*mD^oP0h\KL:LQgMf+sA>@7b>%:F*,Huf'']RBQ^rBK\#@u[V4h>J-i=)72`5bK#WRM%-(S/uU\h:Le+gSaBTU93YXXsj1^\l)5i]I9Z@HJm?/Y61=I!6BS+RYpO^hmR*;mO]K4/_Crln2Dhjb@Nme+k"m@0kIXoCee[hYH_%@B`e-:bA-&8V4>gKk_>Q)`J&RC)!\uCCmRIL_jb>Wb%ru#E+e(Q%R&<@\qBP?U%Ynh]u0ZU7gfVC\?"#.\l=hf^Fa&C@cd`&B:Yp%.csQaWjebW]aKGNm.GI2J/3F2XUjpp.LLCia:PH["10\:<>^ufN&"fon(,HCZhN4f.%u<FXBDnE:d5QpS]m==&oig1X+:+HTO;%6%FK3V]J:_nud.P%18&;bR89[9mU0JK]CiD\UWj,e);6ZmI<N<#R0acLN5gh21;6F\f(FT\sM?Ho_I/KaM\JlXJcr[%cbMru7cJV_P%W/D'eG/$l0*o"A69L[W@:ldQK.%sUJVW&C2DmZ"\A>^YOVnEsV]ZCY#(Cc=HUJ5ocN4uU>Y/%<#NHPJh?%#'\Aj*V.s4\bq)6'f'%RLGWX<4t;E-A-Kg`+Q#!jM-X/eMT56<?s',pT<<&"PNqNX=jbZ$QXk3=A:(s2EF@3FL.T/[.YHn%L0c*Xm\3lQ8qa_=DED,I5`2W%#Yih/2]aSGK-h<aM/L#oc*`NX4tKS*Mm\?f4tM7BehW[N\rUc=2">"r#`Wa02">!GDf.+p/5;h1/QjW5mou8piklCdKkhDtHrtt[%2CY(W47f/&Y:Z?em@oFJ91U+>%o%5=*r<,%JeP[@G9TV_XeLX_9/otG9f2BK$-c,DB]?oBT=&;m1qCEU1RnM@L+QVVRQ;%?^>CQ3%porgGksD)cX7(2Y`.oXMJ*$<9ikpq;@hhJV-F]?-`_J!jda[e^j.i0T_Vt.W:AqHF:2]/bMN2POG%N2W$.dbjQ2-faIQG"^Z][+"%.e7<M$kL'.A^WP1Cg/9Ed^f+SV8t#kglo<$lN49DA/QG+,UAn#HWsTF@q:.V^'W&uTR9)"Gf#r>[WmD'C@2.;,*)(3D?>PTcg/MW%_L-31c/JG)-_gM$Ij2JYMs+cRr52#,=:q1V:s;""0%Rp)agQFs^AdX7O-\[Xe/$?992tH\.c!^M?eN+U7!)XD1\L=VogQd1\%4'5%p?1O52i]YR(hcktAo7MM[%uX9r_b$)o7P6&M"5^j.Q(^Rm9I+h+?.%D5:g\74FVd@^>cdo=-hWNDaN\QKf?_j1-9WDpeb%)*e+)G%E>9C*gM.Il6F%D-TeXYq,Q)$3]ihl)g1]4hETO/dF-/hLit?1AKXt=+]t$uuk[b1Mg/]D'_$8`N!aY8TU%+<!_Yo,9nJF5pn$aj9%OiH!f,e=Kg7ohKc9eo'QTpf7#UL7@96uVbZ-s.8fMm_$'U0q78XP>70N9$Pn:>pucAkNtSENB?OI[cn4BP?p"Ml%n)(B\*\9QO9i%(BYaClAO\E<nP^^C@b2BesN0<G`UJ--K!Ku;-;B_]E^1eSc!r(.6M1hKGm0bDf0r1<]_U`s.-3ZQc$,+W+t1^BP@-?bu(4(ZE!`c%_t-MY,c\.egn;dbV%u]8;q=49b'qeR%Ad1m`b<f-">SU_/h@r&FjX$K0%qeu2_rHQ7<I9.`)EFf%ne;pU<A/NZldZhg1`ioQXehd%1aaj=c#m:<>[+@GUWL?Q8ZRMBSC4HYS^;)t`.oY+O5+G8F/-FWK-oVN&9Fp>LBYp/91fd./Jg7q-&DS^a,NkkK",Dmo-m<D"2_DI%/n7NcS!t`W!111P-T:rh>J@GX6Z>oU[;CK<\.Z^`?#2@-9NctW2`K$>hGsqlbcNK3+mu-/nMhWJfQ)%m8eD"UNTctJ7/DBW\m(0X%/nA6_'[aUA5n)oNM!jAj@PIi%Li0[-E@3&gdFqMI6JP-=@W0h=lQq?WANdM,Js^V(4%smrFD'^;DCa[k6j[>scMC9KT';WH^=SAX%T#h#[S*N&mg$ugNSa_"m;&XksN)+]TI5<F@hlIie!Gr&U"l3b,1Mu8O5/)25&A+jmaFr`U9+[kHXI-3>71!F`,%snfop$Z&[J-RO%6-M&//JV_:M1JX2m:$d"Z37F2nR22[lm"6HZ^tAN`'+e9.>"M#6L5pOORIH:M1X1]W*p:*lfp\(8PnnD<4cgWDm%&Glm"6h;SAcf%'#]%d=#ijUr=[%Z*Hd8OG>a%FY9UM^Jsam_ecT8P_%ibKZlf'H$8HVn`*3Xt/HrcO)L&<:]8d;CFnGWEL&V!`npSIrm#(f@)JJ\i%AZDJu.LrnXE7^3b("K[`UsNJD14SY;Fc$`S;M(8\+sn`1f-k$lpPZf5?[DgSqL7MN$CVWooXZYgY-S>D/SIm]!a8L2"jQ`91*N+A%]"D@]BW-oFdV&]ab@O&=/fLa*%X1t#>hq-a9gSA[$"DaE*>UIZ/1F#3Zlf9bnm2\mLt`Dh\'\#XL;+Cf-lZuHiU;I?hTcIs':)H!%GF&KX)d%H)/a]W6WolY%TM94JBZXf7]qXn[+<G%[Bs@dqE3.fGk/HPE<XY@_9+\H/dS0lHRkm`8C)p:sYRWJ%_ldSTJgj;'WsZE_%.M/seJp?!Q"SJc?NNYdT/18ab?C(P>[orpBW[*S-7F5'A@`fF.M\()1Jf(>u64m[f1N*%%`+;$SLiRQ83o`1tAbs%.`g`Z]a(ic/%nA[QMbY<@]hM!oF%'=!tRN%t?RA%[V0\)mRcM>U^GN"MtcQ##r"(cE<nO=bnN"Eu7BPWZ?-dF]90&!fCDnL=lC(N6X6oT>0;+8hd%2hJKuN9e.=0KJ0>F5>Z0Cb`.QfA3RM('DZkd23%V3o`IAlg.Y_Mh,&YmG_/WMh)U=@OKI2?6^/Se/@HGOcaMVUe3,D>o\]P<PMWP%cF@1J'V*Ab=/lJkX-hRl1JZIC)L3Q@43k?>pEP_s;JXm2pg79[B&[%(`n,S$c#oB=CbqXHNhMJRSLp2T>MW;^ZOQ_3pPUo/ptu\Y%5<AaaAB;O.)&X+[&$;`>q+#pG=1QU7jPSTB)H;)t?LNI3Q45?.oGcD/pnqj:?X3,p\_3TuAX?.[_E])692<D[oc?_LV0,c1L1>NW%7DYjhO-?8F>n!MJ$n"M1O4i$@J[uch(_lmm5&oQqZm?,#Fc0D7<H!i(B-J%k>OTDH__e=ed(J3;c$mQf&-"BsWhlendS5"hAl[Qd%-._h&af;^N90=l`A6%?b--kK:ju/gFa]_R[WL_haA%Sm,M-\oVA,Ro)IVe(^4O[ppae>[C21^NO?;R9%A5V^W2P*f!cZfsn$X$-$%]oL9?C+!f=e\ll]9DsA0?Ci+6:E#W,MqR<X8*l9q&TTb2kp,oBRg;#lI!"4C@n4X@D'E4f7j3=p.NBKl(tpR.m+kdsg=X#Xm;2`)%nE_pDLJFcBbL+Fsm2%i;jpN8B*^<]\5o*RBIl2Zn<?rm*dN9"'(3e%?="$F"<;kC+-96KI/8h%q]+GW*-SO$\9GVD0"1s!S)FE'V%"hA3:oaK)[pT#u(_S_:u7c!?rC)=Lr8bhNZYFrj9#aIBRDskl4KZj.d#<^=f3YhfO#P^K0oa>'Z.H6`f'B=4>_c<s`q)3Rd3>Tn$%D>-0@e`bSqXeTJhQ!!"-Pmm^rZ!=;Eh9jKN]t"NujQQ-`%L4#Jg?k`?^"1TLLF$V0DAQ#p=9<iaAMipc8MQfd+uE`;L-ZIpQ?_]4%BJdPR*]-A#+-r.+Vmh1'4tP*(iS$Y_8cT-)$%8XM2"=u\f7rSQ*bgNYVYZfP'63-SU1i;:BetH)8ukuQ<o)RVD>@#0VUZ5Ui8($?%%.Wr4,Jf),"[0L=K$+L*ZAk/,)7XK(Ltgt+`D[kuJBR*SJS59n8p<OB""lX3G7&:D<G9GtmL+]g.p=%/qQB7f*tr2Yp@>Y>rH%(\%'4Q-0q<G(:+_IVLNk+"5kD]1gbhhI^1NR@&h=_r41pTl?qT4qVR+XQ"g<XoM^dOTO*T]=d?m7[^_hnuL6d2oEXG^?H^'UrMcU^"*%cIT,F.gJGKR-SR@.sc9]ErbKYQlY(1Y\o(DMNs/S%^1E6U3VPt-17MH>j(A]+AHkVRYR9H=;k7gBHCXVY>IO;=7P8LSAnV90q1eq%WuYZHAH(uuD9$0N[U&Q\^X?SaXZ+1WOhUo(52'cfBM015RIuAfO7p-kZm?-&m]:=Wd+/k>B&^fL<.&@#@V0NYWF,1hH&.m">HguD%LZ\7N\;FlW=d=CK>bO"E:9l?dE.s;9D*P)Lnj2/=gI5/>745RE7b_(2(/*/+nY=3aQ^a0CX?tZ\e4gVDAlW"cl#i@nl.3G61e5/L%]a'hufL],?c)Ds_]X=i`;5%/g7!FEQo8puD.[p.:"S4.u72$c/kW#F4d):\c'od-H2">"2ZLu=nbJTSOd0/4ta%Ib59!+XiQAEqs%m@oFJ92tlN7MR#6f6_J;2me2a4tO7cE]#I>qgnN<%(s#([p>*\?frcerm\q0Y1PXH\PI$'pc#gAPsS3C]8?43de=2QIQtj/`#9/n%)5n0aLQUJHjcA<M2hS`:IpFe$gaG\O/L=V]\0UoNK"Bo1E-EfI(]4!5E+<m2*S]H?TbCWE];][ZdE0NbN)/>Dk>.C.rL]-G++m>g%M,+'uU=7.hb>C&VrU\^'M5/OnmCukIqRC<$C.>*C]j;8&B9s^)bu]^tGeOIIf0MOMUb4&6C@6Cmja8et3*Sni_d\l>XGq+1V)u1k%aOVg'lMRQS:,tJ?c&+QGe^:W6jN#s0<\!AK*2aHNe;9M>O8"C;s)&QoqI``.eA6f#nT*(_*>Ir>0u\7IU6aOLj2NaNMK:HOU$V[$%EXA9DY..>BKI\BGA;O(Bp2D=hosQ8.H*RTX`YFC]ao^H,Y#nYs^#'F)=B(u>km1?[A>Z_m/!_Eoqd/;j$=!o6T&;#W[I+6#/?3Zj%FZ6g>;8l."F`HNr=^>:;D0p?[iC_J^D=Xo[QY3Mg4?`=f9Auu=$sX'A8E9"K>R4N3Em"`-.;0-RJdXjPf,lN.!ShB.AlKM68RSD]%\seNCo"^3O!bOh,At3)L3eWpX']MdaFL@8*,T:G/`Ysgf#WTnT%[H:Z*/O`$lLa[?(2c6A]AmE05"-7@<:&pW2jlRFh5POjlLBH7%mMtSENm+qdBp#E%S<?;jNW\-_[D=JZc2@a'S9[<E#\/)Qbr70)'r4qf#qQhDnL&sP_1XBcQ(fTT5(uZXif%\GoTMUrBR/!$'nI@.%0CdB?5>EZ%kA#8;qXo&KH$fR'rIadUhfV"A#gV:p5IgIa%CYDZbT@&W+83X0q1FT=K+Bot4'r;a5:p0TrR"`M(0!QH]h9](k^MDX%`](eFo7nXd%k7_(\Wc>CB5ZoQhtth8S^cgmNkPnVWP2c:7mhad38($"@1ZE#\*8(H>7ZO_?@2V0V,4_C#<T<)nQtX]b0mn`X;Jqk%/G8SWPI[08I,U'FG.3T<)O'"0G5ImuPl#LW2u;C_o=ZmJGnZ@k^$,GbqYFa:AB9?W^Qc`ApWbBE\a\qGZb?>#\[,E!p8o:$!W8Hh%\(lFP>O]Me5(4'DIsp"6l<h;4^0u]*\T%=ErC_TqnHCY^i9cHq+arIkO:DHip<1.">JL.0=M=Uf_S0/i0;R'dGLoUh0RnmPJG50D%b6u7fZkD27To83XGP)5XD"r9pNb5M@Pg"km+#:WR[D2QZohTqn-tT2pl95g<56p)#C1FHn^/k,TCH176J!<9c5OJIjWk@Hp8.-If%7%Lj_#?=LA81lA2*=bU78pVO0YGM\><aR@=S'UlB-ZCV\6,??hh:d2LH/li&C0\Fg^fTNj]4fI%/)4FBq.Bbak_BDcC9>Lb^bEn4%!LFK#)AaJ\/$Z*)nDjPNp<kLMB<jKiB9jY>qJpo]i;D&Z:M2J9hR252`bcmmc;)+@S=cB:4oM"FgY\$@I6Baj3O:KI]^]Oup?aEf%5!AmgE]Q#7>7+97rVPm?8o=r*8QIAND84D@5Mu>)nVtHRpVF[\V%c[Llc/;>nl:e3BD\a%YKniVJ!&%e5(8)J]mDu6mJg@81->8Z%IsZ>fpg*HQm7KT\-3.]#]L]cN\A%TQk?IdF$r5S@::K)Cfm@5urViA\]D7N<m+1jm_jt^!U1ZF2?bH`R?gJaph79e1j-XH.0gb3T%3$0_CdXW*?n,.dB$pOZq5<F,`jsG3Lq>TaYdbuJlh];X@[FqC9n0*beb+%(<:L@.8Qd-YcRdD1-F-PA$<<@g%TBd@tXDMC&6:D(t%PmZf4!f%.noWPiGW`Ut6oZ(V:9AX.85+8E!Sl]"ea1\:+AE\ck2UfQD"]hCD].\c"q=td(LQt;@_`0%BlMA<,M>Xc(r>!Li]S9_i%B&2koqZlle].8!Y0=YBG?10k[H>hSWn*V`0[K6R*?t\rb>?7u8q]J.l[]eI=]6f_!$fpHB\U";C2LK&.&E)O7-(?ddCJer6L\HPq%OE(XiHlSfM>/5V_nE3!M(A>oh=6@<.O9L&AhPQ]oYAB&2lD"RpL2Gi+l`[G<S"'>8H\!PgmG6@6o^;I5V]09pbIJ:*+<L!$16On9%QIe3BIZNn+b_-udn(?#tJjq&hd_FuY>l9r&cQ$lo,OL2J\`c;OJ#TD1q@M,);.8sdpP.m8&1.[3aW+V[Yi3$.W8;ncZq(!*iOZ%H%$\/!al*K;:m)cW`\!(T?^[&fYX08OM:D%9_0E^5nO(`hEEUt>_c)o[8_V.p!bgZqH@0q;WdsCppXo7&(T%;rJC):<U3N^>oeSObl%Hs0mi+pr2mR[7JP+="W:SGDIfb481CL>m,5:/DSNfZP@"reV.MK88>k[kH\:BboK*$pNJu]qW8aH0lsON&"5VI2psNR:qp>Xfh$q%-Z`qTkN=e</\9UcHk61PSXhe<MW",)]Nfd%rr0eEo86?8KtnU/\nn7\q7HIfg(MuM8&+-YJ1eKg-2%-j=2Phn/j:40p%=BT+e=O;%$(s6*iV[UqH$n6*LI\R#p4&X*7glM?k?R"2>W[E(4)1a]n.,cB4!u*AWYs1(`V&DPLTh7@h)t`1mY3"#TDl&K^\/<+7RarY#?Z1f%=q=e&H!YsEi^[X,#,31m0qW<.kNsgLFs$bVS*J=d^&-+9:`9gbCiePfaUc>4f>C72liEaT47LW@mc0)[9Q.YT\_lIP<D;'En\d-?%Q-4hf0-;#Xlk^GamsTrp0@.N\c%6[==jWXBfQqQ.7Pd>a@q[4IefDR0c%<pX%L^jrrqtouh17=R/:a"e50HVr;fXT+-l8@;)Q"$/%.i-35_RC"o^Z^qjR':BCpAXEfjdXJIo?DoSQ3m.QQQNs\YmqQ3*A5WCT7'5DiQ>%:qhg*U.r)^^=ej1k(7W(5pk$4u5L@'mh%:$I%$2\,:Ii"EJ*QE'Z[dMDj*6.P+IGdZ@@+n$q`kR&)Y)e"M@%kU.*k/T`MnQZ8?SO^\$jIq_;0PG;GY'?ENI40g&*6k$CJ8BNrb-bP%0H"5;\FuTjMQ%@+^;)?Mi7MSD&2dR(G6[I5nggMb7Ilr(?9^(0hVBYD\%HCH]6kB#H`3Ojq'q<KokU\7EMH^?K0$]VZ*.8uEh+io%SM`=YNaJs&5g1.I]HW_d(_5j'jsD%%Ct&\nA*%$M([ne:d>d$LXf"@QYJt#0"gX(Jp-c(,#ru\ULXM#1Vd38BkZ\Xa'7&ALa?%0I%!ETT9m"m9G]'HZO#8JS6AXt#+2m%!iL"l#Z=5)u9hPIft,o*=>Tm*K=Db8^[-M&k?odt/Oi2#5+]"TK-jGCQCFaZp*DE4D7WNL0=%R/bjV)nit^hV9sEV1).r'&J!r\Tb#[e$m8%W(FZqNGcGsaBiG[<HLl"8+nEJXePE`,C<GJ=K<:Z)L.UOp#aVXo_.G#M<dFlc-6:N%am%,Yhsl9mmH3Yg:M9D3s#N=3M&H;"!<9t:VYQ14fo1l"p^nbDhGJ3_St-H$1\X-HH+U_/rc@tcn]t"gc482#RTVr)rpTUTDK!k&%bj_rWiRr!&o?`ub/NaJl>!T:A>Nk&#?8/\ds0r$cm./#b_E3@;ATW<n!t:cs?\_uaDkESjrX\p]mOUTuq<e)59t8d?"fg>HWk[K4%*VdYs5l0r;B]f&WQ`l%0'E$#5*^+Mk94m<&B(hiUq.SjdkbKj>079/f^4ZN+k8aKlTGJ"=pjXFqEqDTkJ,>#J!!YJXj$;U2P;H(@%OT#h_.H)@o+Hf:%$eR\&JPdVYq&R0V4Ha,8'QK;]KUEflW=Ujm*EjKpAI@o'dZ[NhN8[2hP&C*7o<p<c,FWd1o)\h$k@D%LYRd>/%3+%\tFI6Tqo9CfEm>@g^8&X!(H.dg7%FZ_`$QM"1nU:'"X89Ob4KNqNq6n0q%pOIqnau[V3mD$F1D&`e49[?_C!PqBMZtO9(-N'Y%(e2k"=rZ^&a?54fb@(HWVmTrH+abGlAdXc%MNfMtN/Ju#MBpAXNi?0OAqF]Q80pB_%0Pf5:uYoF6oe,=1e`]L1LLd&bD*PA&^b&2%n`BR#9_-,q7);]U0XDI,#IH$WF8%+<bjqi#JPejE;J[-Z_^nO<VnujX`eARJN'%OWr<-:REp8N0_PrMMB>d%AWL7<*OQ&CD*8\4?%k-(V[=X^Wj_`S@g9S!h0;1T>[a5Bp:g4af99_'<u.8YO>WTe#^B>ZQ]C#ik_(8QWrNCAgcbYqnb*a,Wg,t[,jEKbX&ZmZ^6:#`?D%;6sXYfM9\Vo9>]i!ek7BD5Z!?I7g]8!ej[CgJ>Kum:c-<[3J_1g1?1Kq3H4WL&#M.LReTAdrXVKGWmX)n$oj[jLg],o1g=OdiQ],%c!rbInR\rjlC@BopYd/cfIKN#3"lXd;`l'O$2-_+_Y3lT$ZX1+4aLhBl'L\i7\<>MYDD2)ittg#?MK>3Ug&<<]^>/Lh*W>oo)t3!%6:5eGj^W(k?^8*[@:A[VUA/<C0+V,Im&Ic/^Kd2fYPtp@jhj'9]HfSGl@SOGm%K5i@0e5XN2RZ61al(MJJ/_YKUhNE#]WOJPf$$!%4MQs^-lEXL,NKSY-H[=hSf!PqU_-IS%iJ5RkQ/(aTQg<1RK0')+\kDh;GqCN.+erI3Y@'hq+q4"7*-X;ZCH(NQ;K7ik:)8/Ru8I:%b!]4m-I?cMNADC_c9c!N))+m;/$cr+']F!K=Q[..k-(V[8LUru__%'i4.'cN,m?mFE^c3.g4<Lq7q"5QTL=(lp(Ji?Pj3_gBHgi6%:8?2]#)\4*mdLC5J/h=/`>@YXd*a%'mV*.MMO=]D_>2QdAY7C,C+4Jch0+*efVd4#Z37k`S8Oe'BEhttWu8-EeIGgUdPng[#g?UB%Y]F2CHD6p(`cG;>Fj3['&AL7ed@pRl*l:L<0D!m<-@ORdp4Ro`4904P%RFD/AI:I`N*;ODTp-Kg!diQ^GpFV!9t1)\H/G"LXnWou%VVQ.mTE,T>53!gNQ<uamq]#3X:j>8dMd.l<R_pj%B0@68^2Ju0?i1CRdF'Sh4H/rPXSOgf&h5^9e\<:pK_-DWe!sFt=ZJYZ!%:5Z%T\#n:P`X_;dPC/<-oio6%N2'm"9a#l^gS?Q;O;n<8n:Du-q.DM-ih,9.(RFh9q\&.KEF>gm\<sAm4qM\?nicU9McN-m4&6-bYgdS%Y(A41KOZk#%5U7YpE?6UCeFfjMNgZ@?-%eqo+\..5pBSA.(`@=p(BrieE;!+@=T"/a*,*d$)91q\Uq2U=J/dZ&r=/cTVfMAPe_P[%\W,TWQJiAqJeVp"BEUh3'Y?#YL-_CHqA4`]T'QBT;1q;nHdWc\#T7WL>BTuI7+4tPOa.-fGXjf)q._@IqjN-(oGlP^oK9^L^jQft%&\TAFc)qtO_J@><doh6:/C#_Fj)rqYiJOu$(%2JD@]r-RF&8OW6obr=Qdn7N:f-YK]#P*aHIHY+e!n*k7Y.9GUmVSm%a?P(LSE@?%5"n=#^UOXmp.)2B4`:]/T+#CBo[XU&,)N,"_1WZB1qT4u-n2gFV18uG93Kon!p2426MDpGWj7j+\d)\XTj<VGJVt9dF@q,Mh5)B:%*#AF>Wnh2UK.%g6GJjKmYpcg[89!"fb]>5W?q[b$?tgMe/4G2B9@7E\Bc7Id$BMuEe&$YVMhV<q?4@-o.h3U;hO.Ycq!1h&(*#Fj%F(Lulo4]Y"f%kLqD:kcYqQUaJb1qH7[:mA#XB,LSAlUoHC"C!!;hq+:ekd>_G%_5n%E3jEH1s0!K[+CbdD`Q03p;/f-Vd#7o8h8q%[6R>QT$CG)K#Vk0B13Lg+VBR\l>-M?(0X"U,`Lue9]1dpH`k/T-XdWt>QmAa6aG_r/IbT%OU`@^[MXefD__[#hq.pn9i*\6'@;Lc%G(.=kaZO]M^_T\_bWZ&bUD1TEc;fq]DW.rm\_DBDg-k!10Eg0f1Ke)fcpCufRT8LZk+tEfI_0G@p&F@8+`%+D!#uHhkM_RlR(/+Y%$4)@B#rI`:2(CJ<J5$a'32(a7V_0pd"]>]H609$^1!B+^2a"J^c$)muG'\&m;gS-g7F/3m:9O`rPZfCd6*2H2RqBX-_3e5:#&Mkn%_\Tr"2=Cr>F4VT!))*=!989+:Z+RC]!f+fWh[XUY(Rs\/]Zak'RJ^W5)FMA"N?R9"`fP\eIY#e\LdbuRLBVLUY7<,o@0't#q4RiR%!n+J=1u7k`kC$hsn&fk0D^Pk4mAVL]a%(4Ij6?<qB#0!l*+Ykr=?[YWpceP!<dil8.$4"Dgi#8:oC:D`+&BY4'ZWeRZ6M1_Vf`?n%.AW<kN3De1^BF^NV?B'4M#uG879V</MK(&#ehSLCP,#-<5su5mnk6kJ71.tC+S(.Q#$NZBNWu!V%u3Oa"YIqhaRLguB),7MG]G'S%VM+_bO<B22+b9P'`M'LMBGQLL*7pn]PQ]AM-$5K:B/2-K_cVLi\5,QW'afj5$;,9L)8dU0US;VF''%J2M)4!*AI)H"$Mh=9QZnai%q<Lr.Olt)!#Gcq*0$`-/?_G1]b7!]H?p:M5%Ntun3cqt?PUMK52gI)s!^+[$F$*j'JB2;i!l%+XU=`)E%VS.'Z$DeOQD,`m;m;ga%.f5I%:.ruum^1Fn_`VHFO/8cik4I(Q6T#L_:sE+eEcsEO(;8[rV'snuK&sa?j&r\"8'b^Wf/8aS6BA7_--;oW+Q.r'$O0UB.2chU%$umF91F/2t':`EbP/j4d_aFu'T^3R/B`?(JTRfYV2N'+QP7UR=Pi`<Q<`ha&\L7asd="R28YdXL7YJ-*_X.^-:C%XL>tUF0>#>uM%#>/c^!jR.\epWbs..K"8;*oE[JN=C_U&,NT[]D^o[7!K0Z(&69:^s[^6/\'&4('ma"JWsQ>_-%/Gn,NGCahISKkBi",V1cF@4.n.%90k3R)\=S1rJ+8/jT$97luk0O6U_cjiUL;Pb6Q.=`XWh6A:_4+M#_@#%kDN1n'H`L7ELL"YGLGSckL;nVoh3"VpeQ9Uq?$dd]cO3%jl96`Oh';t9@45=03:5C]r2s[fVPd>k>I\`Q=?c.de%(\4,kVp]_<=294uh;Yg(7fYg(6;q6(YRKrZuJ?iu7ZGR;@6C/Vu.IMD`i%=F$n<P'"SpeT["8G)P76h9X*`Pj!S78(12I<8[C.WXNQrQ5Fc'0[S/t];duq19:8S0aoU],;+Aq@@)bM<Gkgo7`n&/Nk]n,6AFos%.//mpd<ScO:K^4eJ4YV,UG4bnTp<]3*"'Kh^p=Cs+^c3ciZogi$tsX>dEZF''6n\s),*&<(+E*)F/"3SQOkIb#lK2Uo:-IC(C7-W%4q-t7[$1uRR7G\'TH2CbOQ+(";Z\'s02U^`O\rAd#XW#Jh1n=Y/7Z-k=i>p,dn:f03G8hE-s=baQQ7\TQsb1@Uc9*__`:B;giY$a%-5!>@9XkUd+N;J)"Vqlrab=mNe^20kiREd=gI%4J6et*e%+pD6bbJ6,%7#)fEB*lHH,,Lejs+pV%>/Z9Ht:N+MIO=I?o'r9p)uS[%/qmrmBkQ"MH-33-Q_G7^mA=0@H8'N1l2fYYCtW9a]]Pc]B`>RW4U[RQkK6]pI(K3WfeG*@$\sm^=o`-'(-pPb30\58]h6jKYPR!`%X3_?<Trst5**)daTj]32B]U'?K9CX(LOP\0qo/0@0sO`Dml93ZD.KA^oQP[>[m-I5s)%;XR'r-O/)0$XToJN9O([#;NT"C/43k<@%T)!Wsl]7t$8"SE5lCS5Fj<R"BP`Oscd'J%GOk:6d6^T3dTSJ8R^Kk"mdB7%0.D,4+CF@*+@OddRO#K+]"3UASQs*OkAAl79I0bKO%`tJG$g;sVHQ9]("dde4q:RE)UFs_urRP:R'.EXB!Sd24mfr&<@"=m<S"@J3?Ftjs\K_Y6ia]>nQ,qa9P%;Zl_Aqts=fkHo0_.(nP%lB!Vg@Q^#`[TS4EX@j`9(RebZ'\Pn`,sk+k9>E6Z>SNZ]-u5^J;c5XKCbI*YNR5@<6P7I*BSS+rW)'5JLbN^9b;A-sT!HI,1"K/0%q\9:hR7Yh&fnhO"1YoL1>nlEMZZ$>l/2,aRZNg(nlmgP\[;4Id`%H;Z3D7cTFX_VH/58j'-0Vn@m'qdj7q^rdfhO4i)K9k.Qt()-%5_5Yq(82ZN\DU7_nmS;K--%]^9H=Qj-icdP;h-,'kXbsG2FKb@iX,0RTlssA*[,Ps"-&K55kpDf%[DYB(SG'i;IC,I[$k\9[Xr5;%PLt:5)WkI3TKl!qQJQJF$mUV@gHLmQA0&2`bUJ@C@OEn=.F$YAA1[=5_Z_b5eKC2+(l"+g)!=^0Et(Q46(siK;-#:Q\.cFf!=T@1%@QQQWAQF%;aRS<s0\sr<rXX--*Xe(H%)WY#GdC(`eSk[?W?Bs0@3(H(*!+K,f2D5\BF6ZH1M*3,ZftA4cJ<YiA_<o*mC9oVICYou%X3_>FY>dSg]pp+7Qo/e!k>2k6%E4_:6SfD;:t0$AG?mR8kq(7LZl*R$g5NBMD<b9`@Qj$!;*YaV^X.<D_%);N[*=]lPaut?/]+(d%1-2a)1tD4koke37k/pc\0.6QL9r"ZV'd(]bNMkBXS+ZkLMbF^b/JAS-Hl"pcX1W;>$<R4aqdkOk50!GFj6?6!@X"-M__WR9EL,lL%$P1JlYP^;nhLY+Z.,c"o"E-a(lI'-:;_:g2`(Ggu,oC'WJ7'0@R?C"&*!7pG`lWHJdY\;n6:n12*sLO1:J7@6HiV470F1NF"&_JU%mP,&cGT^,rS@`2@>KS\bFEncNmSdY>/5c1]G2%T9J0&Oi.9&:RiFOHWI,n^6k[mRb-9IFp-P7U$b]&+GAU.Bc$9HIG7;0t,"D4e[%W#9On!Gb*g2@<T][KMtQR*SSr!eD7_I^k%b$juq8;*C,SIqf\ea"ZMXdm10E84IS+RMkUU1^R+"6tR=`@S?g1Cpau%HqhG#HA_&f%H5^&r:U]"Q0+%N??8e+Df9Y/e]`RS7bUPIP2J_!O`NFI14I<q_[1k\/QDS<;h-iF6Ps*_m7M$X,?V<.@S]o052%L[-*/+PiYr&fR%*K&Pg&c-S?iqA4o:YBV@:_P(]V:A%g'pPW5h5p*&kbOoYUOeTm*N^aZ%oOMjCd;?W-8P=p*9:GjU'6Bu`F_BXKleIH6rR3.;3@"F%U4@V?/qd%^6NKfBAuRRkTWn@\0Eib96,@0%FY8C$CFL$">T,7a9@:r5;XC-d1qiNe$?$I0:V2JMB_5=],<"<(Yf5;&L3[BH)[<ng%%WS`j@A_10A>[gRoVB+do[9s>l/cD(HAsr@1b6r^`i`?*@(W9Va>GL*!4,$ifPN#H^`/_&"e;-\%Z9i6CPXPOF2f-2fjc\'r+0_7%=GVk[/H1d)#ga^)r`>!C>%J@_)Q9K8-ocDfM],tEP`M]rIdt'h>UFOf43k=_VC"SOE51G.3W8L@qelk&aO'"(Q)u#i)VXsMqKQ%h%h\\OX^>jUqiL,b9hYqcrIH6g`YPqNF19C0bqe:41^=@9m0^pidOYaGA,GrlqJb;5-D/pML.cEMscm8c:RRC:HcKc`Ej0,-V;@><b%"!L2[%KaY[<31tC@!HQ1;nsndhsf`9N;dFJ.n]ppecHs6X-."DZq82)GXS(&_Jj26_C?QmA<J?DNpT/\APd2uGr99T_?+7^,14Gk%jkMOD+i7,aBT\V^O->4$F,\Y/":R<-mt'DdTh-4%9s?Hq'mQ(N^E\OJ*Trc#(^bdre&WVi+q-fDG7,FbaDA]X@j7'MYD;6jnhMBL%PKt8mYb7ASAQV2%^%[nSLk`/GUS$6$*iVD<N"LU&k[0Z3,>2d/b6rq-\GQc,^Bo)r!tf(2d]j*7^i9nW<BN1GLiTBs*&L:P,/$;(%:'W3U/Mr6MW#09CKdecV`D>FJ^eQZBKo':rUI6Ypeq4fdO;]u2`qjB])(?5m%)!NK%D^@$LH,hP,CMu*N]/E/;QTg#B]G$7F'-nN%Ul$/c=@.MT=QYi@a/.i6_US(:8cbZ0&PKT=,Q_!ANRHosZ\k7TN,UC'dPI'IWhMjE_im2`JMq$u:!q[^#eM]<8=O?$75.JW>=c2>%RKZGhCK19b0kn)X4a5\.dc3Bh1;qU.;Iq8R>l5eaE(QQ-MQTNL]8\?F(,^%gZ4pq=g8CSO;2!J@/4E#,i)IS[Ed3FITXkZD5gt\i%Ne&ZkR)UW)%uUVR*)3T&.!hEeXm:pef20kQ<J4?f8=&)1Sr_>-0nKc+RAFg;0hS.5>5TS$h-HkdLYdns#-:C;iJ\0\I)q_+Adb*i%ibW&:WDQJ$W;\#FJ8u"YfAj?%TnX<`pkBI`-+PjF,R#_nXsAj>3[+!L3(m)bRKf:tJ0,=uTrTu*[BN8'#Z):lmV]s^Rh.PN<AFQ.%'"\i(\iMOp(MehXrkOd46M=Sj/L))^p'O!9Bf?XLJ,fVqoG_iVim_ONPQ[M1K@.R<EA^&.,\:P?*,,X-muRo-8b<2kRG5m$3,GE6%_1IM'm's8a?u+dX9:\6J1?Z#QEG\:+?5<j&CL`$)S8laj-%S^5#%2bO-uuc1K\[Y&L0,E1=Nr=;&5'eIJk4QA173E]W6/,=es!`<%QqFglR5-@+(]Yn&+/bNKp-<2mi]aLu[<g'm/>O'bf3]f3MLr\tdSQ/Bp/"s["L<f"`+9iu#Z2HAZsV`&reja=-qMu+&lZ5#.\NU,%^pGO@8"p?)+=3958kG-1RR[<JEc#USU,W:BCa54(afH=W.P7r0@R`KVNFHdiAhatiR(lC>-IuLuf^2M'n/&#ofJ(T[Q*Pr+i%)2D%Vud(te6,!H3Jnh+>gX6EGGpZH3-H<^7Y]&N,VjC5Ppu>s@VEQ\LBBP9CbO4m`DOJo+C15bSd62`B>;kjg#@nGoSa;UM4o=Hdk'LC%?[P"PgF-;-e>c:[Bp9W-V-#J6!ot:`dqjOBoSe@:Q/jF/!+#C[djh[1V0(Du,UZ+am6IMZAZF*.&;$!!j=h60<b4KL-(JV:P!kC$%\KPKW#W$p,(o8c/KRkW>'5QG,s3aT[SBtH=;#Y4*&XPXd=EPW&mGB>W`O&uM<@(%D@A<KmJO\+X#j*"iE_r9c<*bY<A/e:^)\%kV%JAipJfbBrTU:*n"Bl(HenPNorEfrT,q'eWO42RiJ6E59&9K@%$nED6XIOVHMW=;>%duEA5^O#X$qu,BZRH:PhBCA'UI6.8pnF5U2%Y6)BBGh#bH^Xt,?&)Ar4NK=Q[_OT#U6DJW^TmZN4MWMUo=Ig,:iRpap%V:&T2kY-'+?71cURim%68tUH#gu8\9b:T04.3F#3$iZ6%_*2@N6\,_K/G9(O+u23ugk`"`Tj:8&W+65SYOjW]cH%RK(hu=`,'8J-P3i(2BO"mkQ^hk\9kh<')@UW[&o[jt%8sn-1l7dk'afAP%(`Mo05q=.$X3c[A[.pn9)5A-)=V/1+Qq+0)$]&]Q00Vu`%TK>$$T5Mh6]@*8K`3Z8FK<cMU'aU"S@5A.Ra;LW4C]dp,Us!CNWZ`\%Ys=845bT.:$R!#hQiJiL#0(5]"0O=L+@,.FT?A,.@&=g<o0AS5Uo^bY?c6Mc:td1:6O>T,2=I;>R03fcWg%,Z<q_i?6FYUK$mfh?%p!@Au$/KX<dIE+#Og7>N#nZ_K#o2m&I!V0bJXD*)U!QN4Or?k!"P][bW?O)gnYLkrcjcBrbSJ@S4MjTU_@0+0hnp1iDe)n[4`GjD%#&En)84F"LPXV:=W'\D5,QpOJPp9oi!a<l8qjE$[R4o<uKm,^oT*.SN;,@CQ!C7=FBOQYs6P33%MF,-UKEM`QTd2%\*Y9$:16KW4%LnP*mo10HM'SVZpL-&?]&2!sFTErT=Ta5=:P87(g#`>i8/hWqR'SS8/&Q0;W@3HRa@OS6Qk``s3J7#LRW'V^E7k-Ad6]k%ZMNGhS%,SPbRl5)_u&."/,rX9LWb6W8FVaWsMKuOj@-p8e5:k[ZG@a6jj)+34'U%OKq.$E:dL(je[BR;um65i-%VL24rIq/mP&^3't&UdD?%&LM8R)*c):KSgR4&\a'p#UfgE8C:6J`XFuZ"bNHUV&9u4]pb^h8=GeU)^q`5BR1?.4O[,;-TGN_!ljB8d8C,N\:kKOLn^OJ[ns/?%"@^+/Jg,LQ5nS(%,CGXL_JCB1Ppe$f3EqH9#Zj.&O]gr@_#;Y('ZiIH'*+I`'GOP]8E!K$9/I>[>uIs<@mkZ3,nCYhQOYFNdEr69%i]C$TMQ#lNU1sB51e_GRC.D*RpE3#KG!$4&(_'1$9k>ipqN5GV6io^fhO1&C)N)n#*]P1?&-s)V&g\uH0O>2W(doo(JhU5%KMA^*%.T.+@.&[sdSh/Gh"Jf:d(lBdWr$4'Ti7BJ-WmZ^BH,=D5'HrHnC*8M/#UsGfU4,PLc^7F51k-F$nF^d[&eJZM0bdW%87<lZ(2>87%pIVZ8Atbg$=<67$`)),.T1::E+bcVG9Md0172[0[<0`[&(0RT/-pV3sdNV![7531A8nXiL,+P;Witn\(HBB]-!>Gu35i\M3liKIM%L!gBeb$bi+TEoh?<^s$]W(KEL.Ko?:6'3t>&O@"G+l6l^pk>`-;C,8;0GNI]M??R?.&&;XAnjX<MJs)'bqrtF0O"gD)rql&&T/b@%K$ajJ&H7^_hMH)>b.kOk-&Rs4=X_dSW%&8Dd"9T]8/n;%q>iT#&Ql"B/)!N>aZ2)FH*E<\3U2hP$>mA]ZABn`?1&lt\)U&@?C=oY%Hk^9^'O!Y>j)Y8HenPAr)DML(A;ERQZOHWpaq09&1iPNU-4iM>b-H]\<JDoL0U*h)KkuR>VD;bdd,RY?]HKIY&I#OB0e$S<;jB\A%,_cO$H=_o4dYPl,eq"iO6PRtS6o'`1;93p6E[7GcjWhY%q+NMt-u9a=K(#U6L8ZR2.27&^'P3(e)PmP0j%dj$Uuc10L+&SV-q[Jp%0H6a*VPBC:,NcQ_T,,O=Opt:LJ'1hIYVJW*9ZJ\`$WWu*-Rd157=>*.$&+O]6>6d/TN=mO1aJ@PX?pV*9'+-Q;4s/@Pp*OYW_,W2%8g0R7aq3Z.YTuRMD'@bL+e*k@YusUq9rJLu<7N8@1c.VJ(.pB33>nQ)%j`B[SIJH'Kd,YC0orb>9Q)(I'^[%B/RuJB@](lUhd,4S%M3SZ#&OZtm.Ps`&+(9E>`DV5aki61e;P<;BK5d_^8:de,'B\#%";HP_Og_P>NE/&?2p514J4c(uAO;!pjU.=uhYWQ(5e%Lsar5rY%a-^cIM\I=8\.lpE)=C=h5TkVa6]uoVh1<Eh9%d,,()4PR:!"fFjXaVuYD92Ha=#g`=O:*4'#LIPKg&':%6,j`<Oc#%&W=cJJ/qRu%K\,+C#mi[_\4$03VoE]K+]K].KLDd`)OEuu([P$8$C<5!Up(.3j/s+L@5l8\PUYJoIR+:dYTF.;5S7TA&l>C@-('*=+X)h_@M?n;%KH<Cq-(&C)+lVSu/k$+SO[`m^k]/R:+_:pqb0eBZ,^=Hn)r@p;#WkJb<1u.dV/fhm-sR,(b.n>sN(Xm(9eVorYfdB?lia@uA5ng\%0fCC1^b%r$,buhn_CZI;)W;<JQ;'okC;Qf<.MG]L??3`5<%F+gV+NG9Z^=cUY<B%YQ8kFSIrpN:On.@`Og-*1Bh745(E"_9#.1W"%(+Cbs1aU*cAYYq[F1J;/Y#RD3a/(;JZQ_[60@^QYHh?m7l4t6f'%Y8OeLa[",V6;m>$.T%85u3W&X;Pba-:k(4&dO<1dFE/h'->t%65lnBOg60.;\I(pAOSomX)='.,"Z&Y%nWRq<@J?,M,MeH@n!EGLrCXm8&gESEC?V67EUL@'N3a2AOW=[IAFGCNYMk-cY?WoX@Q>0%;HS("N"lZVa/W@>X@QS'0^&(5<o&k2Uq0"7MM/=^Wa!DB,ROu(eLa[",Y8%/jK::>,b/R4_BNP[U'W$o/Q,Upj=73JOg-)RN>4<V%qQ!5&L.::?cr"HjR?_3^86$QK9;K-f`erhN0O'ZQ$h6\bAfG9T\qIq&OX)sb1lYHngd7gJ7EUKUH\bY186_3i$Un;&Sl@Z&6Mptc%DR>$E=^UWgf]brkGF,2o+B.e3<ctIkOMZq&WbrY)`\@U"Fi2r1*(-A6,7Jm-CTCIkYhD=^&89T'mg.hg!i<KU`Esl7=k*s7+<\G'%<o*9%!k+FFeW&u]:_m[a6Qe/WN9O/q5kZI3Ct2!tUPmAf7+/(S25NZ9X):I:l,T`?GV'G!9j1Dp;V6YfWH\HE\lEI_@QHfWl@q-U%+jd5.ZCPG1[-EAKNZi@A2gdd/$Wtr]9#K8%%"VF7W#I!+C"3[-^jASPDA:sI@:r&P_jTX(!i<KeeINWeTN/I_!deCbEU+GC]P<&<%TiF%A+H@VlWZ/6M=_E`ZL,=o-d#)"ldL;A_!Tp.NgOWKF7Wkc[BR36<ZDsBM_5t5qobG-eP^5`%LdWMh]$V:N22u&N7&48t[-EBm%Lgp^Ll:+u+BC9gL!A8bG$-*S_INulE@">N:NPa#`&F&%`Df4TYr:]:+$!hVe[+(S7H[,>Eo]c21V_=t2]am=;s6FdhnEfMrcblBQ%hr-4E+3mZ3^`8lir:p'S^QARlo]("62]qDYr]e+c-lN~>%AI9_PrivateDataEnd