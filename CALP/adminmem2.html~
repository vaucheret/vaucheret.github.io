<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<title>Conceptos Avanzados en Lenguajes de Programación</title>
<meta name="author" content="(Administración de Almacenamient)"/>
<style type="text/css">
.underline { text-decoration: underline; }
</style>
<link rel="stylesheet" href="../reveal.js/dist/reveal.css"/>

<link rel="stylesheet" href="../reveal.js/dist/theme/moon.css" id="theme"/>

<link rel="stylesheet" href="./local.css"/>

<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
    if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = '../reveal.js/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    }
</script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<meta name="description" content="Org-Reveal Introduction.">
</head>
<body>
<div class="reveal">
<div class="slides">
<section id="sec-title-slide"><h1 class="title">Conceptos Avanzados en Lenguajes de Programación</h1><h2 class="author">Administración de Almacenamient</h2><h2 class="date">2016-08-29 lun 00:00</h2><p class="date">Created: 2021-11-08 lun 11:55</p>
</section>



<section>
<section id="slide-org74f6117">
<h2 id="org74f6117">Introducción</h2>
<div class="outline-text-2" id="text-org74f6117">
</div>
</section>
</section>
<section>
<section id="slide-org050ce7e">
<h3 id="org050ce7e">Tiempo de Vida del Objeto y Ligadura</h3>
<ul>
<li>Creación del objeto</li>
<li>Creación de las ligaduras</li>
<li>Referencias a variables, subrutinas, tipos, todos los cuales usan
las ligaduras</li>
<li>Desactivación y reactivación de ligaduras que pueden estar
temporariamente en desuso</li>
<li>Destrucción de ligaduras</li>
<li>Destrucción de los objetos</li>

</ul>



</section>
</section>
<section>
<section id="slide-org108776e">
<h3 id="org108776e">Tiempos de vida distintos</h3>
<ul>
<li>Referencias colgadas
<ul>
<li>La ligadura sobrevive al objeto</li>

</ul></li>
<li>Almacenamiento sin referencias (basura)
<ul>
<li>El objeto sobrevive a su ligadura</li>

</ul></li>

</ul>


</section>
</section>
<section>
<section id="slide-orgc92e1d3">
<h3 id="orgc92e1d3">Mecanismos de alojamiento</h3>
<ul>
<li>Estático
<ul>
<li>A los objetos se les da una dirección absoluta que es retenida a
través de la ejecución del programa</li>

</ul></li>
<li>Basado en Pila
<ul>
<li>Los objetos son alojados y desalojados en un orden LIFO</li>

</ul></li>
<li><i>Heap</i>
<ul>
<li>Los objetos pueden ser ser alojados y desalojados en momentos
arbitrarios. Requiere algoritmos de administración mas generales y caros.</li>

</ul></li>

</ul>

</section>
</section>
<section>
<section id="slide-org47d289f">
<h3 id="org47d289f">Alojamiento Estático</h3>
<ul>
<li>Código</li>
<li>Variables Globales</li>
<li>variables <i>static</i> u <i>own</i></li>
<li>constantes explícitas</li>
<li>tablas de soporte en tiempo de ejecución</li>

</ul>

</section>
<section id="slide-orgbe0b94a">
<h4 id="orgbe0b94a">Subrutinas</h4>

<div id="org9ee2c66" class="figure">
<p><img src="aljamestaticosub.png" alt="aljamestaticosub.png" />
</p>
</div>

</section>
</section>
<section>
<section id="slide-org3e9217d">
<h3 id="org3e9217d">Alojamiento basado en Pila</h3>
<ul>
<li>Pila central para:
<ul>
<li>parámetros</li>
<li>variables locales</li>
<li>datos temporales</li>

</ul></li>
<li>Porqué una Pila?
<ul>
<li>aloja espacio para rutinas recursivas (no necesario en FORTRAN sin recursión)</li>
<li>reuso del espacio (En todos los lenguajes)</li>

</ul></li>

</ul>

</section>
<section id="slide-orgbe01fce">
<h4 id="orgbe01fce">Subrutinas</h4>

<div id="orgda07a3c" class="figure">
<p><img src="alojpilasubr.png" alt="alojpilasubr.png" />
</p>
</div>

</section>
<section id="slide-org0f1cf49">
<h4 id="org0f1cf49">Alojamiento basado en Pila</h4>
<ul>
<li>Contenido de un Registro de Activación
<ul>
<li>Argumentos y Resultado</li>
<li>variables locales</li>
<li>Datos temporales</li>
<li>Datos de mantenimiento (registros guardados, número de lineas
estático, links etc)</li>

</ul></li>
<li>A las variables locales y Argumentos se les asigna un desplazamiento
FIJO (a partir del puntero de pila o puntero de registro de
activación) en tiempo de compilación.</li>

</ul>

</section>
<section id="slide-orga136562">
<h4 id="orga136562">Alojamiento basado en Pila</h4>
<ul>
<li>El mantenimiento de la Pila es responsabilidad de la <i>secuencia de
llamado</i> del llamador, y de el <i>prologo</i> y el <i>epilogo</i> de la
subrutina llamada.
<ul>
<li>se ahorra espacio colocando todo lo posible en el <i>prologo</i> y en
el <i>epilogo</i></li>
<li>se puede ahorrar tiempo
<ul>
<li>colocando material en el llamador  o</li>
<li>combinado lo que es conocido en ambos lugares (optimización interprocedural)</li>

</ul></li>

</ul></li>

</ul>

</section>
</section>
<section>
<section id="slide-orgad64ec6">
<h3 id="orgad64ec6">Alojamiento basado en <i>Heap</i></h3>
<ul>
<li>Alojamiento Dinámico</li>

</ul>


<div id="org72a6db3" class="figure">
<p><img src="alojdinheap.png" alt="alojdinheap.png" />
</p>
</div>

</section>
<section id="slide-org7a877b8">
<h4 id="org7a877b8">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>Muchas posibles estrategias</li>
<li>compromiso entre espacio y tiempo</li>
<li>Fragmentación
<ul>
<li>interna (se aloja un bloque que es mas grande que el requerido
para el objeto)</li>
<li>externa (cuando los bloques asignados para los objetos de datos
estan distribuidos en todo el heap de tal modo que el espacio
restante esta compuesto de muchos bloques muy pequeños. Hay
suficiente espacio pero ninguna pieza suficientemente grande para
alojar un nuevo requerimiento.</li>

</ul></li>

</ul>

</section>
<section id="slide-orgeca0548">
<h4 id="orgeca0548">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>Lista ligado de bloques libres</li>
<li>Algoritmos de asignación
<ul>
<li><i>First fit</i> selecciona el primer bloque de la lista que es
suficientemente grande para satisfacer el requerimiento.</li>
<li><i>Best fit</i> busca la lista entera para encontrar el bloque mas
chico suficientemente grande para alojar el objeto</li>

</ul></li>
<li>Varias listas libres separadas por tamaño. La división puede ser
estática o dinámica
<ul>
<li><i>Buddy System</i> 
<ul>
<li>potencia de 2. si un bloque de \(2^k\) se necesita y ninguno es
diponible se divide uno de \(2^{k+1}\)</li>

</ul></li>
<li><i>Fibonacci heap</i>
<ul>
<li>numeros de fibonacci para los tamaños estandars</li>

</ul></li>

</ul></li>

</ul>


</section>
<section id="slide-orgfb5587a">
<h4 id="orgfb5587a">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li>El problema de referencias sueltas (dangling) son debidas a
<ul>
<li>desalojo explícito de objetos del <i>heap</i>
<ul>
<li>solo en lenguajes con desalojo explícito</li>

</ul></li>
<li>desalojo implícito de objetos elaborados</li>

</ul></li>
<li>Dos mecanismos de implementación para manejar referencias sueltas:
<ul>
<li>Lápidas (<i>Tombestones</i>)</li>
<li>Llaves y cerrojos (<i>Locks and Keys</i>)</li>

</ul></li>

</ul>

</section>
<section id="slide-org53eeeab">
<h4 id="org53eeeab">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li><i>Tombstones</i></li>

</ul>


<div id="org32c769b" class="figure">
<p><img src="tombstones.png" alt="tombstones.png" />
</p>
</div>

</section>
<section id="slide-org0d296c5">
<h4 id="org0d296c5">Alojamiento basado en <i>Heap</i></h4>
<ul>
<li><i>Locks and Keys</i></li>

</ul>


<div id="org4b4be0c" class="figure">
<p><img src="lockskeys.png" alt="lockskeys.png" />
</p>
</div>

</section>
<section id="slide-org67535d9">
<h4 id="org67535d9">Recolección de Basura</h4>
<ul>
<li><i>garbage collection</i>
<ul>
<li>esencial en lenguajes funcionales y lógicos</li>
<li>se volvió popular en lenguajes imperativos</li>

</ul></li>
<li>Contador de referencias</li>

</ul>


<div id="orgb83879c" class="figure">
<p><img src="contadref.png" alt="contadref.png" />
</p>
</div>

</section>
<section id="slide-org30d1516">
<h4 id="org30d1516">Trazado de la colección</h4>
<ul>
<li>marcado y barrido (<i>mark and Sweep</i>
<ol>
<li>El recolector camina a través del <i>heap</i> marcando todo bloque como
"usable" tentativamente</li>
<li>Comenzando de punteros de afuera del <i>heap</i>, recursivamente
explora todos las estructuras de datos ligadas, marcando cada
bloque nuevo descubierto como "usado"</li>
<li>El recolector recorre de nuevo el <i>heap</i>, moviendo todo bloque
aún marcado como "usable" a la lista de bloques libres.</li>

</ol></li>

</ul>


</section>
<section id="slide-orgaee3e95">
<h4 id="orgaee3e95">mark and sweep</h4>

<div id="org54a613a" class="figure">
<p><img src="marksweep-0.png" alt="marksweep-0.png" />
</p>
</div>

</section>
<section id="slide-orgb1c8b69">
<h4 id="orgb1c8b69">mark and sweep</h4>

<div id="orgec09633" class="figure">
<p><img src="marksweep-1.png" alt="marksweep-1.png" />
</p>
</div>

</section>
<section id="slide-org9d03207">
<h4 id="org9d03207">mark and sweep</h4>

<div id="org13ecf68" class="figure">
<p><img src="marksweep-2.png" alt="marksweep-2.png" />
</p>
</div>

</section>
<section id="slide-orgacca0f0">
<h4 id="orgacca0f0">mark and sweep</h4>

<div id="orgaf98bde" class="figure">
<p><img src="marksweep-3.png" alt="marksweep-3.png" />
</p>
</div>

</section>
<section id="slide-org0e354aa">
<h4 id="org0e354aa">mark and sweep</h4>

<div id="org46204d2" class="figure">
<p><img src="marksweep-4.png" alt="marksweep-4.png" />
</p>
</div>

</section>
<section id="slide-orgfa8d155">
<h4 id="orgfa8d155">mark and sweep</h4>

<div id="org504ba1c" class="figure">
<p><img src="marksweep-5.png" alt="marksweep-5.png" />
</p>
</div>

</section>
<section id="slide-org2002ef7">
<h4 id="org2002ef7">mark and sweep</h4>

<div id="org068fde1" class="figure">
<p><img src="marksweep-6.png" alt="marksweep-6.png" />
</p>
</div>

</section>
<section id="slide-org922effe">
<h4 id="org922effe">mark and sweep</h4>

<div id="orgcd8544e" class="figure">
<p><img src="marksweep-7.png" alt="marksweep-7.png" />
</p>
</div>


</section>
<section id="slide-org10e64b8">
<h4 id="org10e64b8">Marcado tri-color</h4>
<ul>
<li>Se crean tres conjuntos – blanco, negro and gris:

<ul>
<li>El conjunto blanco, es el conjunto de objetos que son
candidatos para ser reciclados.</li>
<li>El conjunto negro, es el conjunto de objetos que alcanzables
desde la raiz y no referencian a objetos del conjunto
blanco. Estos objetos no son cadidatos para recolectar.</li>
<li>El conjunto gris contiene todos los objetos alcanzables desde
la raiz pero que aun tienen que verificarse por referencias al
conjunto "blanco".</li>

</ul></li>

</ul>

</section>
<section id="slide-org10e64b8-split">

<ul>
<li>Inicialmente el conjunto negro esta vacío, El conjunto gris es el 
conjunto de objetos que son directamente referenciados desde la
raiz y el conjunto blanco incluye todos los demás objetos. El algoritmo procede asi:

<ol>
<li>Toma un objeto del conjunto gris y lo mueve al conjunto negro</li>

<li>Mueve cada objeto blanco referenciado por él al conjutno gris.</li>

<li>Repetir los pasos 1 y 2 hasta que el conjunto gris esté vacio.</li>

</ol></li>

</ul>

</section>
<section id="slide-org055078f">
<h4 id="org055078f">Marcado tri-color</h4>

<div id="org57cd494" class="figure">
<p><img src="tricolor-0.png" alt="tricolor-0.png" />
</p>
</div>


</section>
<section id="slide-org3ee9dfa">
<h4 id="org3ee9dfa">Marcado tri-color</h4>

<div id="org9566948" class="figure">
<p><img src="tricolor-1.png" alt="tricolor-1.png" />
</p>
</div>


</section>
<section id="slide-orgea812a8">
<h4 id="orgea812a8">Marcado tri-color</h4>

<div id="orga2a5946" class="figure">
<p><img src="tricolor-2.png" alt="tricolor-2.png" />
</p>
</div>


</section>
<section id="slide-org9c511a9">
<h4 id="org9c511a9">Marcado tri-color</h4>

<div id="org447d232" class="figure">
<p><img src="tricolor-3.png" alt="tricolor-3.png" />
</p>
</div>


</section>
<section id="slide-org02cbffa">
<h4 id="org02cbffa">Marcado tri-color</h4>

<div id="orgece75a1" class="figure">
<p><img src="tricolor-4.png" alt="tricolor-4.png" />
</p>
</div>


</section>
<section id="slide-org3030f81">
<h4 id="org3030f81">Marcado tri-color</h4>

<div id="org53689d4" class="figure">
<p><img src="tricolor-5.png" alt="tricolor-5.png" />
</p>
</div>


</section>
<section id="slide-orga2e70db">
<h4 id="orga2e70db">Marcado tri-color</h4>

<div id="org1b1622e" class="figure">
<p><img src="tricolor-6.png" alt="tricolor-6.png" />
</p>
</div>


</section>
<section id="slide-orgbfcf03f">
<h4 id="orgbfcf03f">Recolección de Basura</h4>
<ul>
<li>Otras alternativas
<ul>
<li>Parar y Copiar</li>
<li>Recolección Generacional</li>
<li>Recolección Conservadora</li>

</ul></li>

</ul>
</section>
</section>
</div>
</div>
<p> Created by yjwen. </p>
<script src="../reveal.js/dist/reveal.js"></script>
<script src="../reveal.js/plugin/markdown/markdown.js"></script>
<script src="../reveal.js/plugin/notes/notes.js"></script>


<script>
// Full list of configuration options available here:
// https://github.com/hakimel/reveal.js#configuration
Reveal.initialize({
plugins: [RevealMarkdown,RevealNotes],
width:1200, height:800, margin: 0.1, minScale:0.2, maxScale:2.5, transition:'none',
multiplex: {
    secret: '', // null if client
    id: '', // id, obtained from socket.io server
    url: '' // Location of socket.io server
},

// Optional libraries used to extend on reveal.js
dependencies: [
]
});
</script>
</body>
</html>
