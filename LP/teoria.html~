<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<title>Lenguajes Declarativos</title>
<meta name="author" content="(Semanticas)"/>
<style type="text/css">
.underline { text-decoration: underline; }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.css"/>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/reveal.js/dist/theme/moon.css" id="theme"/>


<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
    if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'https://cdn.jsdelivr.net/npm/reveal.js/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    }
</script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
</head>
<body>
<div class="reveal">
<div class="slides">
<section id="sec-title-slide"><h1 class="title">Lenguajes Declarativos</h1><h2 class="author">Semanticas</h2><h2 class="date">Claudio Vaucheret</h2><p class="date">Created: 2023-03-25 sáb 14:33</p>
</section>
<section id="table-of-contents"><div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#/slide-org261a459">Semanticas</a>
<ul>
<li><a href="#/slide-org1699645">Arbol SLD</a></li>
<li><a href="#/slide-orgec83bb8">Arbol SLD</a></li>
<li><a href="#/slide-org8df3e6e">Ejemplo</a></li>
<li><a href="#/slide-org8cedd8e">Ejemplo</a></li>
<li><a href="#/slide-org7e6ae68">Arbol SLD</a></li>
<li><a href="#/slide-org482b67c">Semántica de Modelos Mínimos</a></li>
<li><a href="#/slide-orgf26fb6a">Ejemplo</a></li>
<li><a href="#/slide-orgdcf73ff">Semántica de Punto Fijo</a></li>
<li><a href="#/slide-org4ce8f47">Ejemplo</a></li>
</ul>
</li>
</ul>
</div>
</div>
</section>


<section>
<section id="slide-org261a459">
<h2 id="org261a459">Semanticas</h2>
<div class="outline-text-2" id="text-org261a459">
</div>
</section>
</section>
<section>
<section id="slide-org1699645">
<h3 id="org1699645">Arbol SLD</h3>
<div style="font-size: 70%;">

<p>
Un árbol (de búsqueda) \(SLD\)  \(\tau_\varphi\) para \(\Pi \cup \{{\cal
   G}\}\) (usando la regla de computación \(\varphi\)) es un conjunto de
nodos que cumplen: 
</p>

<ol>
<li>El nodo raíz de \(\tau_\varphi\) es la meta inicial \({\cal G}\);</li>
<li>Si \({\cal G}_i \equiv\leftarrow {\cal A}_1 \wedge \ldots \wedge
      {\cal A}_n\) es un nodo de \(\tau_\varphi\) y suponiendo que
\(\varphi({\cal G}_i) = {\cal A}_k\), entonces para cada cláusula
\({\cal C} \equiv {\cal A} \leftarrow {\cal Q}\) de \(\Pi\) (con sus
variables renombradas si hace falta) t.q. \(\theta = mgu({\cal
      A},{\cal A}_k) \not\equiv fail\), el resolvente \({\cal G}_{ij} \equiv
      \leftarrow \theta({\cal A}_1 \wedge \ldots \wedge {\cal A}_{k-1}
      \wedge {\cal Q} \wedge {\cal A}_{k+1} \wedge \ldots \wedge {\cal
      A}_n\) es un nodo de \(\tau_\varphi\)</li>

</ol>

</section>
</section>
<section>
<section id="slide-orgec83bb8">
<h3 id="orgec83bb8">Arbol SLD</h3>
<ul>
<li>Cada nodo del árbol es una cláusula meta. \({\cal G}_{i}\) es el <i>nodo
padre</i> de \({\cal G}_{ij}\) y \({\cal G}_{ij}\) es <i>nodo hijo</i> de \({\cal G}_{i}\).</li>
<li>Los nodos hojas son o bien la cláusula vacía o nodos fallidos.</li>
<li>Cada rama de un árbol SLD es una derivación \(SLD\) para \(\Pi \cup \{{\cal G}\}\).</li>
<li>Ramas <b>inifinitas</b>, de <b>éxito</b> y de <b>fallo</b>.</li>
<li>Arbol <b>infinitas</b>, de <b>éxito</b> y de <b>fallo</b>.</li>
<li>Cada regla de computación \(\varphi\) da lugar a un árbol \(SLD\) para
\(\Pi \cup \{{\cal G}\}\) distinto.</li>

</ul>

</section>
</section>
<section>
<section id="slide-org8df3e6e">
<h3 id="org8df3e6e">Ejemplo</h3>
<p>
Sea el programa definido
</p>

<p>
\(\Pi = \{ {\cal C}_1 : p(X,Z) \leftarrow q(X,Y) \wedge p(Y,Z) \\
          {\cal C}_2 : p(X,X) \leftarrow  \\
          {\cal C}_3 : q(a,b) \leftarrow \}\)
</p>

<p>
y la meta definida \({\cal G} \equiv\leftarrow p(X,b)\).
</p>

</section>
</section>
<section>
<section id="slide-org8cedd8e">
<h3 id="org8cedd8e">Ejemplo</h3>
<div style="font-size: 50%;">

<p>
Un árbol de búsqueda \(SLD\) para \(\Pi \cup \{{\cal G}\}\) usando una
regla de computación que selecciona el átomo más a la izquierda dentro
de la meta considerada.
</p>



<div id="org3acfcd3" class="figure">
<p><img src="sld1.png" alt="sld1.png" />
</p>
</div>


</section>
</section>
<section>
<section id="slide-org7e6ae68">
<h3 id="org7e6ae68">Arbol SLD</h3>
<ul>
<li>Un <b>procedimiento de prueba por refutación</b> \(SLD\) queda
completamente especificado fijando:

<ol>
<li>una regla de computación;</li>

<li>una regla de ordenación; y</li>

<li>una regla de búsqueda.</li>

</ol></li>

</ul>

</section>
</section>
<section>
<section id="slide-org482b67c">
<h3 id="org482b67c">Semántica de Modelos Mínimos</h3>
<p>
Sea \(I\) un conjunto índices y conjunto no vacío de modelos de Herbrand
de un programa \(\Pi\), \(\{{\cal M}_i \mid (i \in I) \wedge ({\cal M}_i\) 
es modelo de \(\Pi)\}\). Entonces, el conjunto \(\bigcap_{i \in I} {\cal
M}_i\) es un modelo de Herbrand de \(\Pi\).
</p>


<p>
\({\cal M}_i(\Pi) = \{{\cal A} \mid  {\cal A} \in {\cal B}_{\cal
L}(\Pi) \wedge \Pi \models {\cal A}\}\)
</p>

</section>
</section>
<section>
<section id="slide-orgf26fb6a">
<h3 id="orgf26fb6a">Ejemplo</h3>
<div style="font-size: 70%;">

<p>
\(\Pi = \{{\cal C}_1 : q(X) \leftarrow p(X), {\cal C}_2 : p(a)
\leftarrow , {\cal C}_3 : q(b) \leftarrow \}\).
</p>

<ol>
<li>\({\cal U}_{\cal L}(\Pi) = \{a,b\} y {\cal B}_{\cal L}(\Pi) = \{p(a),p(b),q(a),q(b)\}\).</li>
<li>\({\cal I}_1 = \varnothing\), \({\cal I}_2 = \{p(b)\}\), \({\cal I}_3 =
   \{p(a)\}\), \({\cal I}_4 = \{q(a)\}\), \({\cal I}_5 = \{q(b)\}\), 
\({\cal I}_6 = \{p(a),p(b)\}\), \({\cal I}_7 = \{p(a),q(a)\}\), \({\cal
   I}_8 = \{p(a),q(b)\}\), \({\cal I}_9 = \{p(b),q(a)\}\), 
\({\cal I}_{10} = \{p(b),q(b)\}\), \({\cal I}_{11} = \{q(a),q(b)\}\),
\({\cal I}_{12} = \{p(a),p(b),q(a)\}\), 
\({\cal I}_{13} = \{p(a),p(b),q(b)\}\), 
\({\cal I}_{14} = \{p(a),q(a),q(b)\}\),
\({\cal I}_{15} = \{p(b),q(a),q(b)\}\),
\({\cal I}_{16} = \{p(a),p(b),q(a),q(b)\}\).</li>
<li>Las únicas H-interpretación modelos de \(\Pi\) son: \({\cal I}_{14}\)
e \({\cal I}_{16}\).</li>

</ol>

<p>
La interpretación modelo mínimo de Herbrand es:
</p>

<p>
\({\cal M}(\Pi) = {\cal I}_{14} \cap {\cal I}_{16} = \{p(a),q(a),q(b)\}\)
</p>

</section>
</section>
<section>
<section id="slide-orgdcf73ff">
<h3 id="orgdcf73ff">Semántica de Punto Fijo</h3>
<div style="font-size: 70%;">

<p>
Sea \(\Pi\) un programa definido. El operador de consecuencias lógicas
inmediatas \(T_{\Pi}\) es una aplicación \(T_{\Pi} : \wp({\cal B}_{\cal
L}(\Pi)) \longrightarrow \wp({\cal B}_{\cal
L}(\Pi))\) definida como:
</p>

<p>
\(T_{\Pi}({\cal I}) = \{ {\cal A} \mid {\cal A} \in {\cal B}_{\cal
L}(\Pi) \wedge ({\cal A} \leftarrow {\cal A}_1 \wedge \ldots \wedge
{\cal A}_n ) \in {\cal B}asicas(\Pi) \\
 \wedge \{{\cal A}_1, \ldots,
{\cal A}_n \} \subseteq {\cal I} \}\)
</p>

<p>
donde \({\cal I}\) es una interpretación de Herbrand para \(\Pi\) y \({\cal
B}asicas(\Pi)\) es el conjunto de instancias básicas de las cláusulas
de \(\Pi\).
</p>

<p>
\({\cal M}_{\Pi} = mfp(T_{\Pi}) = T_{\Pi} \uparrow \omega\)
</p>


</section>
</section>
<section>
<section id="slide-org4ce8f47">
<h3 id="org4ce8f47">Ejemplo</h3>
<div style="font-size: 70%;">

<p>
\(\Pi = \{{\cal C}_1 : q(X) \leftarrow p(X), {\cal C}_2 : p(a)
\leftarrow , {\cal C}_3 : q(b) \leftarrow \}\).
</p>

<ul>
<li>\(T_{\Pi} \uparrow 0 = \varnothing\)</li>
<li>\(T_{\Pi} \uparrow 1 = T_{\Pi}(\varnothing) = \{p(a),q(b)\}\)</li>
<li>\(T_{\Pi} \uparrow 2 = T_{\Pi}(T_{\Pi} \uparrow 1)  = \{p(a),q(b)\}
    \cap \{q(a)\} = \{p(a),q(b),q(a)\}\)</li>
<li>\(T_{\Pi} \uparrow 3 = T_{\Pi}(T_{\Pi} \uparrow 2) = T_{\Pi}
    \uparrow 2\)</li>

</ul>

<p>
Se alcanza el punto fijo en la tercera iteración y por consiguiente,
</p>

<p>
\({\cal M}_{\Pi} = \{p(a),q(b),q(a)\}\).
</p>
</section>
</section>
</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/reveal.js/dist/reveal.js"></script>

<script>
// Full list of configuration options available here:
// https://github.com/hakimel/reveal.js#configuration
Reveal.initialize({
transition:'cube',
multiplex: {
    secret: '', // null if client
    id: '', // id, obtained from socket.io server
    url: '' // Location of socket.io server
},

// Optional libraries used to extend on reveal.js
dependencies: [
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
 { src: 'https://cdn.jsdelivr.net/npm/reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }]
});
</script>
</body>
</html>
